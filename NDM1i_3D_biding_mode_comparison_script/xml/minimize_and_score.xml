<!--
	Uncomment the lines below to allow code editors to auto-complete
	and display mouse-over help for the RosettaScripts syntax:
-->
<root
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:noNamespaceSchemaLocation="rosettascripts.xsd"
/>
<ROSETTASCRIPTS>
	<SCOREFXNS>
		<!-- A scoring function with constraints: -->
		<ScoreFunction name="r15_cst" weights="ref2015_cst.wts">
			<Reweight scoretype="chainbreak" weight="20.0" />
		</ScoreFunction>
		<!-- A scoring function without constraints: -->
		<ScoreFunction name="r15" weights="ref2015.wts"/>
	</SCOREFXNS>
	<RESIDUE_SELECTORS>
		<!-- Select the first and last residues of the
		peptide macrocycle: -->
		<Index name="select_pep_end" resnums="240" />
		<Index name="select_pep_start" resnums="233" />
	</RESIDUE_SELECTORS>
	<SIMPLE_METRICS>
		<!-- Store the energy before and after minimization.
		This information will be written out in the PDB
		file produced at the end of the protocol: -->
		<TotalEnergyMetric name="pre_score" scorefxn="r15"
			scoretype="total_score" custom_type="PRE_MIN_SCORE_"
		/>
		<TotalEnergyMetric name="post_score" scorefxn="r15"
			scoretype="total_score" custom_type="POST_MIN_SCORE_"
		/>
	</SIMPLE_METRICS>
	<MOVERS>
		<!-- After reading in the PDB file, ensure that there is
		an amide bond connecting the termini of the peptide
		macrocycle: -->
		<DeclareBond name="join_termini"
			res1_selector="select_pep_end" atom1="C"
			res2_selector="select_pep_start" atom2="N"
		/>
		<!-- Add the chainbreak variant types to the termini of the
		macrocycle.  This allows the energy function (with the
		chainbreak scoreterm activated) to be used to keep the
		macrocycle closed during energy-minimization: -->
		<ModifyVariantType name="add_chainbreak_1"
			add_type="CUTPOINT_UPPER" residue_selector="select_pep_start"
		/>
		<ModifyVariantType name="add_chainbreak_2"
			add_type="CUTPOINT_LOWER" residue_selector="select_pep_end"
		/>
		<!-- Automatically detect bonds to the zinc and cadmium
		ions, and add suitable constraints: -->
		<SetupMetalsMover name="setup_metals" />
		<!-- Set up the kinematic relationships in the structure: -->
		<AtomTree name="foldtree" fold_tree_file="%%foldtree_file%%" />
		<!-- Energy-minimize the structure: -->
		<MinMover name="minmover" scorefxn="r15_cst" type="linmin_iterated"
			tolerance="0.00000001" bb="true" chi="true" jump="ALL"
		/>
	</MOVERS>
	<PROTOCOLS>
		<!-- This section lays out the sequence of events, calling
		previously-defined movers and simple metrics: -->
		<Add mover="join_termini" />
		<Add mover="add_chainbreak_1" />
		<Add mover="add_chainbreak_2" />
		<Add mover="setup_metals" />
		<Add mover="foldtree" />
		<Add metrics="pre_score" />
		<Add mover="minmover" />
		<Add metrics="post_score" />
	</PROTOCOLS>
	<!-- At the end, score the structure using the unconstrained scoring
	function, then write the PDB file: -->
	<OUTPUT scorefxn="r15" />
</ROSETTASCRIPTS>