<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

<xs:complexType name="rosetta_scripts_parser_ROSETTASCRIPTS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The main ROSETTASCRIPTS block allows the definition of many different types of objects which can be generated from a text file. The combination of Movers and Filters can define an end-to-end protocol, and the use of the MultiplePoseMover can define pseudo-parallel diversification and pruning of a set of structures.
 </xs:documentation></xs:annotation>
 <xs:sequence>
  <xs:element name="RESOURCES" type="rosetta_scripts_parser_RESOURCES_type" minOccurs="0" maxOccurs="1"/>
  <xs:choice minOccurs="0" maxOccurs="unbounded">
   <xs:element name="CONSTRAINT_GENERATORS" type="constraint_generator_loader_CONSTRAINT_GENERATORS_type"/>
   <xs:element name="DATABASE_SESSIONS" type="database_session_loader_DATABASE_SESSIONS_type"/>
   <xs:element name="INTERFACE_BUILDERS" type="interface_builder_INTERFACE_BUILDERS_type"/>
   <xs:element name="JUMP_SELECTORS" type="jump_selector_loader_JUMP_SELECTORS_type"/>
   <xs:element name="LIGAND_AREAS" type="ligand_area_builder_LIGAND_AREAS_type"/>
   <xs:element name="LOOP_DEFINITIONS" type="loop_def_loader_LOOP_DEFINITIONS_type"/>
   <xs:element name="MONTECARLOS" type="monte_carlo_loader_MONTECARLOS_type"/>
   <xs:element name="MOVEMAP_BUILDERS" type="move_map_builder_MOVEMAP_BUILDERS_type"/>
   <xs:element name="MOVE_MAP_FACTORIES" type="movemap_factory_loader_MOVE_MAP_FACTORIES_type"/>
   <xs:element name="PACKER_PALETTES" type="packer_palette_loader_PACKER_PALETTES_type"/>
   <xs:element name="RESIDUE_LEVEL_TASK_OPERATIONS" type="res_lvl_task_op_loader_RESIDUE_LEVEL_TASK_OPERATIONS_type"/>
   <xs:element name="RESIDUE_SELECTORS" type="res_selector_loader_RESIDUE_SELECTORS_type"/>
   <xs:element name="SCOREFXNS" type="sfxn_loader_SCOREFXNS_type"/>
   <xs:element name="SCORINGGRIDS" type="scoring_grid_loader_SCORINGGRIDS_type"/>
   <xs:element name="SIMPLE_METRICS" type="simple_metric_loader_SIMPLE_METRICS_type"/>
   <xs:element name="TASKOPERATIONS" type="task_op_loader_TASKOPERATIONS_type"/>
   <xs:element name="MOVERS" type="data_loader_MOVERS_type"/>
   <xs:element name="FILTERS" type="data_loader_FILTERS_type"/>
   <xs:element name="APPLY_TO_POSE" type="rosetta_scripts_parser_APPLY_TO_POSE_type"/>
   <xs:element name="IMPORT" type="rosetta_scripts_parser_IMPORT_type"/>
  </xs:choice>
  <xs:element name="PROTOCOLS" type="mover_ParsedProtocol_type" minOccurs="1" maxOccurs="1"/>
  <xs:element name="OUTPUT" type="rosetta_scripts_parser_OUTPUT_type" minOccurs="0" maxOccurs="1"/>
 </xs:sequence>
</xs:complexType>

<xs:group name="constraint_generator">
 <xs:choice>
  <xs:element name="AtomPairConstraintGenerator" type="constraint_generator_AtomPairConstraintGenerator_complex_type"/>
  <xs:element name="AutomaticSheetConstraintGenerator" type="constraint_generator_AutomaticSheetConstraintGenerator_complex_type"/>
  <xs:element name="CoordinateConstraintGenerator" type="constraint_generator_CoordinateConstraintGenerator_complex_type"/>
  <xs:element name="DihedralConstraintGenerator" type="constraint_generator_DihedralConstraintGenerator_complex_type"/>
  <xs:element name="DistanceConstraintGenerator" type="constraint_generator_DistanceConstraintGenerator_complex_type"/>
  <xs:element name="FileConstraintGenerator" type="constraint_generator_FileConstraintGenerator_complex_type"/>
  <xs:element name="HydrogenBondConstraintGenerator" type="constraint_generator_HydrogenBondConstraintGenerator_complex_type"/>
  <xs:element name="MembraneSpanConstraintGenerator" type="constraint_generator_MembraneSpanConstraintGenerator_complex_type"/>
  <xs:element name="MetalContactsConstraintGenerator" type="constraint_generator_MetalContactsConstraintGenerator_complex_type"/>
  <xs:element name="ResidueTypeConstraintGenerator" type="constraint_generator_ResidueTypeConstraintGenerator_complex_type"/>
  <xs:element name="SegmentedAtomPairConstraintGenerator" type="constraint_generator_SegmentedAtomPairConstraintGenerator_complex_type"/>
  <xs:element name="SheetConstraintGenerator" type="constraint_generator_SheetConstraintGenerator_complex_type"/>
  <xs:element name="TerminiConstraintGenerator" type="constraint_generator_TerminiConstraintGenerator_complex_type"/>
 </xs:choice>
</xs:group>

<xs:simpleType name="rosetta_bool">
 <xs:restriction base="xs:string">
  <xs:pattern value="true|True|TRUE|t|T|1|on|On|ON|y|Y|yes|Yes|YES|false|False|FALSE|f|F|0|off|Off|OFF|n|N|no|No|NO"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="real">
 <xs:restriction base="xs:string">
  <xs:pattern value="[-+]?[0-9]*\.?[0-9]*([eE][-+]?[0-9]+)?"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="non_negative_integer">
 <xs:restriction base="xs:integer">
  <xs:minInclusive value="0"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="constraint_generator_AtomPairConstraintGenerator_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Generates atom pair constraints between specified residues
 </xs:documentation></xs:annotation>
 <xs:attribute name="native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Restrain to native distance?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sd" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Standard deviation for distance constraint
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight of distance constraint
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ca_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Only make constraints between alpha carbons
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_harmonic" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, use harmonic function instead of SOG function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="unweighted" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, SCALARWEIGHTEDFUNC is not added to the constraint definition
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_distance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Do not add constraints if atoms are farther apart than this
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_seq_sep" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum sequence separation between constrained residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying residues to be constrained. When not provided, all residues are selected. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secondary_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   With a secondary selector, constraints are generated between the residues of primary selector vs. secondary selector. min_seq_seq does not apply here, but max_distance does. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="constraint_generator_AutomaticSheetConstraintGenerator_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Generates constraints between sheet residues putatively paired. Runs DSSP, so it might change a previously assignated secondary structure.
 </xs:documentation></xs:annotation>
 <xs:attribute name="sd" type="real" default="2.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   standar deviation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance" type="real" default="6.100000">
  <xs:annotation><xs:documentation xml:lang="en">
   Max distance to consider two residues paired
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="constraint_generator_CoordinateConstraintGenerator_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds coordinate constraints to the specified residues
 </xs:documentation></xs:annotation>
 <xs:attribute name="native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Constrain to native coordinates
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ca_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Only apply constraints to alpha carbons
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sidechain" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Apply constraints to side chain atoms
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sd" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Standard deviation for constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ambiguous_hnq" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, these residues could be flipped without affecting the score
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bounded" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we use a bounded function for this constraint?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bounded_width" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Width of bounded function if using
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="align_reference" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Align reference pose to constraint target pose?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying residues to constrain. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="constraint_generator_DihedralConstraintGenerator_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A cst generator that creates Dihedral constraints for specified residues using a residue selector.
 Uses CircularHarmonic constraints, since CircularGaussian func does not exist. 
 By default, works on Protein and carbohydrate BackBone dihedrals (see dihedral option), however CUSTOM ARBITRARY DIHEDRALS can be set. 
  See the dihedral_atoms and dihedral_residues tags to set a custom dihedral.

 Will only work on ONE type of dihedral angle to allow complete customization.
 </xs:documentation></xs:annotation>
 <xs:attribute name="dihedral" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The cannonical dihedral being set.  Currently, only Backbone dihedrals are accepted here.  Works for proteins and carbohydrates 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sd" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The standard deviation used for the CircularHarmonic Func.  Default is 16 degrees, THis which was found by taking the mean SD of all dihedral angles of either PHI or PSI for each North (Antibody) CDR Cluster (CDRs are the main antibody loops).  This is a fairly tight constraint and allows a bit of movement while not changing overall struture much.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dihedral_atoms" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of atom names.  FOUR atoms used for calculation of a custom dihedral.  Must also pass dihedral_residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dihedral_residues" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of resnums.  Must be FOUR residues to define a custom dihedral. See RosettaScripts resnum definition.  Rosetta or pose numbering (ex. 23 or 42A).  Ranges are accepted as well.   These are completely arbitrary and DO NOT have to be in order. Must also pass dihedral_atoms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="constraint_generator_DistanceConstraintGenerator_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Forms a distance constraint between two specified atoms
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector1" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying the first residue to constrain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector2" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying the second residue to constrain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom_name1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom in the first residue to constrain (defaults to neighbor atom)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom_name2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom in the second residue to constrain (defaults to neighbor atom)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="function" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Function to use for the distance constraint; defaults to a harmonic function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="constraint_generator_FileConstraintGenerator_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Applies constraints from a constraint file to the pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="filename" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to constraint file to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="constraint_generator_HydrogenBondConstraintGenerator_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds hydrogen bond distance and angle constraints between the specified residues
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector1" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying the first residue to constrain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector2" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying the second residue to constrain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atoms1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of atom names to constrain in the first residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atoms2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of atoms to constrain in the second residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom_definitions" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Semicolon-separated list of atom definitions for hydrogen bonding atoms
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom_pair_func" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Function to use for distance constraint; defaults to a harmonic function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle1_func" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Function to use for first angle constraint
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle2_func" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Function to use for second angle constraint
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bounded" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use bounded constraints?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="constraint_generator_MembraneSpanConstraintGenerator_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Forms constraints on each span to stay in the membrane
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="positive_integer">
 <xs:restriction base="xs:integer">
  <xs:minInclusive value="1"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="refpose_enabled_residue_number_cslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="([0-9]+|[0-9]+[A-Za-z]|refpose(.*,[0-9]+)|refpose(.*,[0-9]+)[+\-][0-9]+)(,([0-9]+|[0-9]+[A-Za-z]|refpose(.*,[0-9]+)|refpose(.*,[0-9]+)[+\-][0-9]+))*"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="real_cslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="[-+]?[0-9]*\.?[0-9]*([eE][-+]?[0-9]+)?(,[-+]?[0-9]*\.?[0-9]*([eE][-+]?[0-9]+)?)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="constraint_generator_MetalContactsConstraintGenerator_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Generates distance, angle, and dihedral constraints for the specified metal atom in the selected ligand residue
 </xs:documentation></xs:annotation>
 <xs:attribute name="ligand_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector specifying which metal-containing ligand to constrain. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="contact_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector restricting which residues should be considered as potential ligand contacts. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist_cutoff_multiplier" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Multiply van der Waals radii of metal and contact atom by this value during contact detection.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ligand_atom_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of ligand metal atom you want to constrain.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ligand_resnum" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number for ligand to be constrained
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="contact_resnums" type="refpose_enabled_residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue numbers for residues that could be considered as contacts. If neither this option nor a residue selector is specified, then all residues are considered.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="base_atom_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of atom to use as base of contact atoms for angles/dihedrals. Defaults to residue's base atom for contact atom.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="base_base_atom_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of atom to use as base of base of contact atoms for angles/dihedrals. Defaults to residue's base atom.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal_distance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Ideal distance between constrained metal and contact atom. Defaults to current distance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal_angle_about_contact" type="real_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of possible optimal angles, base-contact-metal. Defaults to current angle.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal_dihedral_about_contact" type="real_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of possible optimal dihedrals, base_base-base-contact-metal. Defaults to current dihedral.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal_angle_about_metal" type="real_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of possible optimal angles, contact-metal-other_contact. Defaults to current angle.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal_dihedral_about_metal" type="real_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of possible optimal dihedrals, base-contact-metal-other_contact. Defaults to current dihedral.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal_dihedral_3" type="real_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of possible optimal dihedrals, contact-metal-other_contact-other_base. Defaults to current dihedral.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_against_internal_contacts" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we score angles and dihedrals vs other atoms in the ligand?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constrain_to_closest" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   When multiple ideal values are provided for an angle/dihedral, constrain to the one that is closest to the current value
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="constraint_generator_ResidueTypeConstraintGenerator_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Generates residue type constraints (either to native or to a specific residue type) for the specified residues
 </xs:documentation></xs:annotation>
 <xs:attribute name="favor_native_bonus" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Unweighted score bonus the pose will receive for having the specified residue type at the specified position
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rsd_type_name3" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Three-letter code for the amino acid to which you want to constrain this residue. If unspecified, this defaults to the native amino acid at this position.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use native structure (provided with in:file:native) as reference pose for defining desired residue identities
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying residues to be constrained. When not provided, all residues are selected. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="constraint_generator_SegmentedAtomPairConstraintGenerator_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Generates different atom pair constraints between residues in the same contiguous segment and between segments.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Inner">
   <xs:complexType mixed="true">
    <xs:attribute name="sd" type="real" default="0.500000">
     <xs:annotation><xs:documentation xml:lang="en">
      Standard deviation for distance constraint
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="weight" type="real" default="1.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Weight of distance constraint
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="ca_only" type="rosetta_bool" default="1">
     <xs:annotation><xs:documentation xml:lang="en">
      Only make constraints between alpha carbons
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="use_harmonic" type="rosetta_bool" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      If true, use harmonic function instead of SOG function
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="unweighted" type="rosetta_bool" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      If true, SCALARWEIGHTEDFUNC is not added to the constraint definition
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="min_seq_sep" type="non_negative_integer" default="8">
     <xs:annotation><xs:documentation xml:lang="en">
      Minimum sequence separation between constrained residues
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Outer">
   <xs:complexType mixed="true">
    <xs:attribute name="sd" type="real" default="0.500000">
     <xs:annotation><xs:documentation xml:lang="en">
      Standard deviation for distance constraint
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="weight" type="real" default="1.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Weight of distance constraint
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="ca_only" type="rosetta_bool" default="1">
     <xs:annotation><xs:documentation xml:lang="en">
      Only make constraints between alpha carbons
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="use_harmonic" type="rosetta_bool" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      If true, use harmonic function instead of SOG function
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="unweighted" type="rosetta_bool" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      If true, SCALARWEIGHTEDFUNC is not added to the constraint definition
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="max_distance" type="real" default="12.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Do not add constraints if atoms are farther apart than this
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Restrain to native distance?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying residues to be constrained. When not provided, all residues are selected The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="dssp_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="[ HELITGBSU_]*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="constraint_generator_SheetConstraintGenerator_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds constraints specifying strand pairs in beta sheets
 </xs:documentation></xs:annotation>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to blueprint file specifying strand pairing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct" type="dssp_string">
  <xs:annotation><xs:documentation xml:lang="en">
   String specifying secondary structure for the pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="spairs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String specifying strand pairing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="flat_bottom_constraints" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use flat-bottom constraints?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist" type="real" default="5.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Desired distance between strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist_tolerance" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Tolerance in distance between strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_tolerance" type="real" default="0.35">
  <xs:annotation><xs:documentation xml:lang="en">
   Tolerance in angle between strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cacb_dihedral_tolerance" type="real" default="0.9">
  <xs:annotation><xs:documentation xml:lang="en">
   Tolerance in Ca-Cb dihedral angle (in radians)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb_dihedral_tolerance" type="real" default="0.52">
  <xs:annotation><xs:documentation xml:lang="en">
   Tolerance in backbone dihedral angle constraint (in radians)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight to use for these constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_dssp" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use DSSP to determine secondary structure?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="constraint_generator_TerminiConstraintGenerator_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds distance constraint between termini
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="constraint_generator_loader_CONSTRAINT_GENERATORS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  ConstraintGenerators may be defined as subelements of the CONSTRAINT_GENERATORS element, and then will be placed into the DataMap for later retrieval by Movers and Filters or anything else that might use a ConstraintGenerator. All immediate subelements should have the 'name' attribute as that is how they will be identified in the DataMap. NOTE: The BluePrintBDR only takes a SheetRemodelConstraintGenerator, which is actually a mover and is declared in the MOVERS block as "SheetCstGenerator". Passing an actualy constraint generator to this mover will fail. Constraint generators are currently only used by the AddConstraints mover.
 </xs:documentation></xs:annotation>
 <xs:group ref="constraint_generator" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:simpleType name="database_mode_string">
 <xs:restriction base="xs:string">
  <xs:enumeration value="sqlite3"/>
  <xs:enumeration value="postgres"/>
  <xs:enumeration value="mysql"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="database_transaction_mode_string">
 <xs:restriction base="xs:string">
  <xs:enumeration value="none"/>
  <xs:enumeration value="standard"/>
  <xs:enumeration value="chunk"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="report_to_db_relevant_residues_mode">
 <xs:restriction base="xs:string">
  <xs:pattern value="[eEiI][xXmM][pP][lL][iI][cC][iI][tT]"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="database_session_loader_DATABASE_SESSIONS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Create DatabaseSession objects to store in the DataMap that can be used by other scriptable elements to read from- or write to a database
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="DatabaseSession">
   <xs:complexType mixed="true">
    <xs:attribute name="transaction_mode" type="database_transaction_mode_string" default="standard">
     <xs:annotation><xs:documentation xml:lang="en">
      Transaction mode for database output
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="database_mode" type="database_mode_string">
     <xs:annotation><xs:documentation xml:lang="en">
      Which type of output database to use?
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="database_name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of output database
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="database_pq_schema" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Schema name within the database
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="database_separate_db_per_mpi_process" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Use a separate database for each MPI process? (sqlite3 only.) Incompatible with database_partition.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="database_partition" type="xs:integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Database partition to use. (sqlite3 only.) Incompatible with database_separate_db_per_mpi_process.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="database_read_only" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Is the database read-only? (sqlite3 only)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="database_host" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      URI to the database server (postgres and mysql only)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="database_user" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Username for database access( postgres and mysql only)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="database_password" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Password for database access (postgres and mysql only)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="database_port" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Port to use for access to database server (postgres only)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="batch_description" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Description of features database
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="protocol_id" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Manually controls protocol_id associated with this ReportToDB tag. Autoincrements by default.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="batch_id" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Manually controls the batch_id associated with this ReportToDB tag. Autoincrements by default.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="use_transactions" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Use transactions to group database i/o to be more efficient. Turning them off can help debugging.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="cache_size" type="non_negative_integer" default="2000">
     <xs:annotation><xs:documentation xml:lang="en">
      Specify the maximum number 1k pages to keep in memory before writing to disk.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="remove_xray_virt" type="rosetta_bool" default="false">
     <xs:annotation><xs:documentation xml:lang="en">
      Remove virtual residue attached during xray refine process
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="relevant_residues_mode" type="report_to_db_relevant_residues_mode" default="explicit">
     <xs:annotation><xs:documentation xml:lang="en">
      Determine what features are reported given the relevant residues
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      The name given to the database session that Movers and Filters will use to retrieve it from the DataMap
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
</xs:complexType>

<xs:complexType name="interface_builder_InterfaceBuilder_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Each interface builder is composed from one or more ligand areas, which must have been previously defined
 </xs:documentation></xs:annotation>
 <xs:attribute name="extension_window" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ligand_areas" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The comma-separated list of ligand areas, which are read out of the datamap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="interface_builder_INTERFACE_BUILDERS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Define a set of InterfaceBuilders and load them into the DataMap for later use by MoveMapBuilders
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="InterfaceBuilder" type="interface_builder_InterfaceBuilder_type"/>
 </xs:choice>
</xs:complexType>

<xs:group name="jump_selector">
 <xs:choice>
  <xs:element name="And" type="js_And_type"/>
  <xs:element name="Interchain" type="js_Interchain_type"/>
  <xs:element name="JumpIndex" type="js_JumpIndex_type"/>
  <xs:element name="Not" type="js_Not_type"/>
  <xs:element name="Or" type="js_Or_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="js_And_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The AndJumpSelector combines the output of multiple JumpSelectors using AND logic, i.e., only jumps selected by ALL contained JumpSelectors will be selected. JumpSelecters can be pulled in from a DataMap, from subtags (for JumpSelectors known to the JumpSelectorFactory) or programmatically through %add_jump_selector.
 </xs:documentation></xs:annotation>
 <xs:group ref="jump_selector" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="selectors" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma separated list of selected jumps
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="js_Interchain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="js_JumpIndex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The JumpIndexSelector sets the positions corresponding to all of the jumps that are upstream of the indicated jump to true, and all the other positions to false. This selector is logically equivalent to a NotSelector applied to the JumpDownstreamSelector for the same jump.
 </xs:documentation></xs:annotation>
 <xs:attribute name="jump" type="xs:integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The integer given for the "jump" argument should refer to a Jump that is present in the Pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="js_Not_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="jump_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="js_Or_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Selector that takes the logical or of the provided residue selectors
 </xs:documentation></xs:annotation>
 <xs:group ref="jump_selector" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="selectors" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selectors that have been defined elsewhere in the script
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="jump_selector_loader_JUMP_SELECTORS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  JumpSelectors may be defined as subelements of the JUMP_SELECTORS element, and then will be placed into the DataMap for later retrieval by Movers, Filters, MoveMapFactories or anything else that might use a JumpSelector. All immediate subelements should have the 'name' attribute as that is how they will be identified in the DataMap. Subelements of the immediate subelements will not be loaded into the data map and do not need to be given a name; e.g. if an immediate subelemement is an 'And' JumpSelector, and this 'And' JumpSelector has a 'Chain' subelement, then the 'And' subelement must be given a name, but the 'Chain' subelement probably should not be given a name. Why not? The 'Chain' subelement will not end up as a member of the DataMap in any case, and if a name is given to it, then a user of the XML file may think it is reasonable to use the name for that Chain selector elsewhere in their script -- but their script would fail if they do so.
 </xs:documentation></xs:annotation>
 <xs:group ref="jump_selector" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:simpleType name="char">
 <xs:restriction base="xs:string">
  <xs:maxLength value="1"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="ligand_area_builder_LigandArea_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  LigandAreas are used to define InterfaceBuilders which in turn are used to define MoveMapBuilders.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="char" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The ligand's chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutoff" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The distance cutoff from the ligand
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="Calpha_restraints" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of one standard deviation (in Angstroms) for restraints on C-alphas
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_ligand" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of one standard deviation (in degrees) for ligand torsion angles used by the ResidueTorsionRestraints class to create CircularHarmonic restraints on the ligand dihedrals during minimization to keep these dihedrals near their starting conformation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tether_ligand" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The standard deviation (in Angstroms) used by the HighResDocker to create coordinate constraints on the ligand's neighbor atom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_nbr_radius" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Used by an InterfaceBuilder for deciding how to define the distance threshold between the ligand and the protein's residues. If this is 'true', then the neighbor radius of the protein residue is added into the LigandArea's 'cutoff' parameter. If this is 'false', then the 'cutoff' parameteris used unaltered
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="all_atom_mode" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   When deciding whether a protein residue is sufficiently close to the ligand, should the distance between the protein residue's neighbor atom and every atom in the ligand be measured? If not, then only the ligand's neighbor atom will be used in that decision.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="high_res_angstroms" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The euclidean perturbation magnitude, in Angstroms, used by the HighResDocker
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="high_res_degrees" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The rotational perturbation magnitude, in degrees, used by the HighResDocker
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="ligand_area_builder_LIGAND_AREAS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Define a set of LigandAreas and load them into the DataMap for later use by MoveMapBuilders and other Movers and Filters
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="LigandArea" type="ligand_area_builder_LigandArea_type"/>
 </xs:choice>
</xs:complexType>

<xs:group name="loop_definer">
 <xs:choice>
  <xs:element name="Loops" type="loop_definer_Loops_type"/>
  <xs:element name="LoopsDatabase" type="loop_definer_LoopsDatabase_type"/>
  <xs:element name="LoopsFile" type="loop_definer_LoopsFile_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="loop_definer_Loops_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Use this element to define a series of loops in subtags, one loop per subtag
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="loop">
   <xs:complexType mixed="true">
    <xs:attribute name="start" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      The residue index (pose numbering) for the first position in the loop.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="stop" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      The residue index (pose numbering) for the last position in the loop.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="cut" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The residue index (pose numbering) for the cutpoint residue (i.e. the cut residue will be the lower end of the chain break, and the cut+1 residue will be the upper end of the chain break). If a zero value is given, it will be interpretted as saying that the cutpoint should be chosen using the logic in protocols::loops::Loop::choose_cutpoint
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="skip_rate" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      The probability that you would like the loop will be skipped by the IndependentLoopMover; a value less than zero means never skip, a value greater than one means always skip
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="extended" type="rosetta_bool" default="false">
     <xs:annotation><xs:documentation xml:lang="en">
      If set to true, then the initial backbone dihedrals for the loop will be overwritten to produce an extended conformation (i.e. phi=-150 degres, psi=150, omego=180) and the bond angles and lengths will be idealized
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Each Loop element must be given a name for error-reporting purposes, but the name is also used to add the loop collection defined within it to the DataMap by the LoopDefinerLoader
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="loop_definer_LoopsDatabase_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Load the loop defintions from a table in a database; the table from which this LoopsDefiner reads may be specified, but if it is not then it will look for a table named 'loops'. Beause of the way the apply function is written, this class is specific for JD2, which is a shame; it will have to be updated for JD3.
 </xs:documentation></xs:annotation>
 <xs:attribute name="database_table" type="xs:string" default="loops">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the table in the database from which the loops are to be read
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="db_session_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name for the (previously declared) DatabaseSession object to retrieve from the DataMap; if this option is given, then it will take precedence over the other database-session-defining attributes that are also allowed for this element. DatabaseSession objects are declared in the DATABASE_SESSIONS top-level block in RosettaScripts.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="transaction_mode" type="database_transaction_mode_string" default="standard">
  <xs:annotation><xs:documentation xml:lang="en">
   Transaction mode for database output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_mode" type="database_mode_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which type of output database to use?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of output database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_pq_schema" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Schema name within the database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_separate_db_per_mpi_process" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a separate database for each MPI process? (sqlite3 only.) Incompatible with database_partition.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_partition" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Database partition to use. (sqlite3 only.) Incompatible with database_separate_db_per_mpi_process.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_read_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Is the database read-only? (sqlite3 only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_host" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   URI to the database server (postgres and mysql only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_user" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Username for database access( postgres and mysql only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_password" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Password for database access (postgres and mysql only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_port" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Port to use for access to database server (postgres only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="batch_description" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Description of features database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="protocol_id" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Manually controls protocol_id associated with this ReportToDB tag. Autoincrements by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="batch_id" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Manually controls the batch_id associated with this ReportToDB tag. Autoincrements by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_transactions" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use transactions to group database i/o to be more efficient. Turning them off can help debugging.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_size" type="non_negative_integer" default="2000">
  <xs:annotation><xs:documentation xml:lang="en">
   Specify the maximum number 1k pages to keep in memory before writing to disk.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_xray_virt" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Remove virtual residue attached during xray refine process
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relevant_residues_mode" type="report_to_db_relevant_residues_mode" default="explicit">
  <xs:annotation><xs:documentation xml:lang="en">
   Determine what features are reported given the relevant residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="loop_definer_LoopsFile_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Define a set of loops reading them in from the provided file
 </xs:documentation></xs:annotation>
 <xs:attribute name="filename" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The file from which the loops should be read
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="loop_def_loader_LOOP_DEFINITIONS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The LOOP_DEFINITIONS element allows you to define loops from various sources (e.g. from files, from databases, or directly within the XML file); loops will be named and placed in the DataMap for other Movers and Filters to retrieve.
 </xs:documentation></xs:annotation>
 <xs:group ref="loop_definer" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="monte_carlo_loader_MONTECARLOS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Data loader for MonteCarlo objects that can be created and then added to the data map so that they could be shared between multiple movers, if desired; superceded by the GenericMonteCarlo mover, and I believe, currently unused by any mover
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MonteCarlo">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      The name for the MonteCarlo object that will be used for lookup in the DataMap
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="temperature" type="real" default="2.0">
     <xs:annotation><xs:documentation xml:lang="en">
      The temperature for the MonteCarlo object to operate at, interpretted in units of kT (e.g. 0.6 = room temperature)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="scorefxn" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of score function to use
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
</xs:complexType>

<xs:complexType name="move_map_builder_MoveMapBuilder_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Movemap builders can build on previousy-defined InterfaceBuilders to define the flexible sidechain and backbone dihedrals by creating a MoveMap.
 </xs:documentation></xs:annotation>
 <xs:attribute name="sc_interface" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the previously declared interface builder to use when deciding what sidechains to allow to move when building a MoveMap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb_interface" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the previously declared interface builder to use when deciding what backbone torsions to allow to move when building a MoveMap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_water" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should water residues be allowed to move?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="move_map_builder_MOVEMAP_BUILDERS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Define a set of MoveMapBuilders and load them into the DataMap for later use by other Movers and Filters
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMapBuilder" type="move_map_builder_MoveMapBuilder_type"/>
 </xs:choice>
</xs:complexType>

<xs:complexType name="mm_factory_MoveMapFactory_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A MoveMapFactory can be used to restrict conformational flexibility to a specific set of DOFs taking into account the conformation of the input Pose. It will construct a MoveMap, (or edit an existing MoveMap), making a series of modifications to it based on the instructions given. First it will make the highest-level modifications given by the attributes 'bb', 'chi', 'nu', 'branches', and 'jumps'; it will make these modifications to 'true' (enable) or 'false' (disable) if they are given in the Tag, but it will not make a modification if it is not given. (It is worth knowing that a default MoveMap says 'nothing is free to move' but that many Movers will use the MoveMapFactory to edit an existing MoveMap they have initialized with behaviors such as 'all backbones and sidechain dihedrals are free' so make sure to consult the documentation for the MoveMapFactory consumer you intend to use.) After it makes the highest-level modifications, it makes intermediate-level modifications specified by the sub-elements in the order they are provided. These are the Backbone, Chi, Nu, Branches, and Jumps tags (but the Backbone tag only when the 'bb_tor_index' attribute is absent). For each of these tags, a ResidueSelector is used to define a group of residues to operate on, and then those residues selected (i.e. whose values are marked 'true') will be operated on. The operation performed is specified by the 'enable' attribute of these sub-elements; if this attribute is not given, then the operation will be to enable that DOF. Residues that are not selected by the ResidueSelector are not operated on; if your intention is to disable flexibility for a set of residues, and these residues are already marked as flexible, it is not good enough to leave them out of a selection that enables a different set of residues. You will have to explicitly select those residues and then perform a disabling action on them. Finally, the lowest-level operations are performed. For now, this is the particular-backbone-dihedrals enable/disable actions for Backbone tag (i.e. when the 'bb_tor_index' attribute is provided). These lowest level operations happen last, but within the set of all lowest-level operations, they are performed in the order that they are provided; this is perhaps confusing.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Backbone">
   <xs:complexType mixed="true">
    <xs:attribute name="enable" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      Enable this DOF? (false for disable)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="residue_selector" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="bb_tor_index" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      If this option is set, then this element will apply to only a particular backbone index; e.g. 3. Indices that are out-of-bounds (e.g.'10' for a residue with 3 backbone dihedrals) have no effect
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Chi">
   <xs:complexType mixed="true">
    <xs:attribute name="enable" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      Enable this DOF? (false for disable)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="residue_selector" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Nu">
   <xs:complexType mixed="true">
    <xs:attribute name="enable" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      Enable this DOF? (false for disable)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="residue_selector" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Branches">
   <xs:complexType mixed="true">
    <xs:attribute name="enable" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      Enable this DOF? (false for disable)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="residue_selector" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Jumps">
   <xs:complexType mixed="true">
    <xs:attribute name="enable" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      Enable this DOF? (false for disable)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="jump_selector" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      The name of the already defined JumpSelector that will be used by this object
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Enable or disable movement for all backbone torsions.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Enable or disable movement for all chi torsions.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nu" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Enable or disable movement for all nu torsions.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="branches" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Enable or disable movement for all branch torsions.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jumps" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Enable or disable movement for all jump DOFs.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartesian" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the MMF for specific cartesian overrides.  Currently is only used for glycans in order to maintain IUPAC nomenclature during moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="movemap_factory_loader_MOVE_MAP_FACTORIES_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Define MoveMapFactories that can be used to generate MoveMaps just in time, tailored to the conformation of the Pose
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMapFactory" type="mm_factory_MoveMapFactory_type"/>
 </xs:choice>
</xs:complexType>

<xs:group name="packer_palette">
 <xs:choice>
  <xs:element name="CustomBaseTypePackerPalette" type="packer_palette_CustomBaseTypePackerPalette_type"/>
  <xs:element name="DefaultPackerPalette" type="packer_palette_DefaultPackerPalette_type"/>
  <xs:element name="NoDesignPackerPalette" type="packer_palette_NoDesignPackerPalette_type"/>
 </xs:choice>
</xs:group>

<xs:simpleType name="string_cslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="[+]?.+(,[-+]?[0-9]+)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="packer_palette_CustomBaseTypePackerPalette_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sets up a packer palette that expands the default (canonical) residue type set with user-defined base types or types selected by ResidueProperties.
 </xs:documentation></xs:annotation>
 <xs:attribute name="additional_residue_types" type="string_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of additional residue types (by full base name) to add to the PackerPalette.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="packer_palette_DefaultPackerPalette_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sets up a default packer palette, with no user-configurable options.  This permits design with canonical residue types only.  (Note that this is the default behaviour in the absence of a PackerPalette, too.)
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="packer_palette_NoDesignPackerPalette_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sets up an empty packer palette, specifying no residues, with no user-configurable options.  This restricts the packer to repacking.  Note that this behaviour can be achieved with the RestrictToRepacking task operation, but doing this with the PackerPalette can be preferable since it means that, under the hood, we're not unnecessarily setting up a list of ResidueTypes only to delete them all.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="packer_palette_loader_PACKER_PALETTES_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Define PackerPalettes, which establish the set of residue types (the "palette") that one might use in design.  PackerPalettes define the total set of residue types available, while TaskOperations prune the types allowed at a particular position or during a particular design step.
 </xs:documentation></xs:annotation>
 <xs:group ref="packer_palette" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:group name="res_lvl_task_op">
 <xs:choice>
  <xs:element name="AddBehaviorRLT" type="rlto_AddBehaviorRLT_type"/>
  <xs:element name="DisallowIfNonnativeRLT" type="rlto_DisallowIfNonnativeRLT_type"/>
  <xs:element name="ExtraChiCutoffRLT" type="rlto_ExtraChiCutoffRLT_type"/>
  <xs:element name="ExtraRotamersGenericRLT" type="rlto_ExtraRotamersGenericRLT_type"/>
  <xs:element name="IncludeCurrentRLT" type="rlto_IncludeCurrentRLT_type"/>
  <xs:element name="PreserveCBetaRLT" type="rlto_PreserveCBetaRLT_type"/>
  <xs:element name="PreventRepackingRLT" type="rlto_PreventRepackingRLT_type"/>
  <xs:element name="RestrictAbsentCanonicalAASExceptNativeRLT" type="rlto_RestrictAbsentCanonicalAASExceptNativeRLT_type"/>
  <xs:element name="RestrictAbsentCanonicalAASRLT" type="rlto_RestrictAbsentCanonicalAASRLT_type"/>
  <xs:element name="RestrictToRepackingRLT" type="rlto_RestrictToRepackingRLT_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="rlto_AddBehaviorRLT_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add the given "behavior" to the positions selected by the accompanying ResFilter.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="behavior" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Behavior string. These are protocol-specific. Consult the protocol documentation for if it responds to behavior strings.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rlto_DisallowIfNonnativeRLT_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restrict design to not include a residue as an possibility in the task at a position unless it is the starting residue. If resnum is left as 0, the restriction will apply throughout the pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disallow_aas" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   takes a string of one letter amino acid codes, no separation needed. For example disallow_aas=GCP would prevent Gly, Cys, and Pro from being designed unless they were the native amino acid at a position.This task is useful when you are designing in a region that has Gly and Pro and you do not want to include them at other positions that aren't already Gly or Pro.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rlto_ExtraChiCutoffRLT_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Move only toward a lower cutoff for #neighbors w/i 10A that qualify a residue to be considered buried.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extrachi_cutoff" type="non_negative_integer" default="18">
  <xs:annotation><xs:documentation xml:lang="en">
   lower extrachi_cutoff to given value; do nothing if not a decrease
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="exchi_sample_level">
 <xs:restriction base="xs:integer">
  <xs:minInclusive value="0"/>
  <xs:maxInclusive value="7"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="rlto_ExtraRotamersGenericRLT_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  During packing, extra rotamers can be used to increase sampling. Use this TaskOperation to specify for all residues at once what extra rotamers should be used. Note: The extrachi_cutoff is used to determine how many neighbors a residue must have before the extra rotamers are applied. For example of you want to apply extra rotamers to all residues, set extrachi_cutoff=0. 
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex1" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi1 sub-rotamers for all residues that pass the extrachi_cutof
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex2" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi2 sub-rotamers for all residues that pass the extrachi_cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex3" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi3 sub-rotamers for all residues that pass the extrachi_cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex4" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi4 sub-rotamers for all residues that pass the extrachi_cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex1aro" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi1 sub-rotamers for aromatic residues that pass the extrachi_cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex2aro" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi2 sub-rotamers for aromatic residues that pass the extrachi_cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex1aro_exposed" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi1 sub-rotamers for all aromatic residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex2aro_exposed" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi2 sub-rotamers for all aromatic residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex1_sample_level" type="exchi_sample_level" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for chi1 sampling; all include the current chi dihedral. There are currently 8 options: NO_EXTRA_CHI_SAMPLES (0) (original only); EX_ONE_STDDEV (1) (default, +- one sd, 3 samples); EX_ONE_HALF_STEP_STDDEV (2)(+- 0.5 sd, 3 samples); EX_TWO_FULL_STEP_STDDEVS(3) ( +- 1 and 2 sd, 5 samples); EX_TWO_HALF_STEP_STDDEVS(4) ( +- 0.5 and +- 1 sd, 5 samples); EX_FOUR_HALF_STEP_STDDEVS(5) ( +- 0.5, 1, 1.5, 2 sd, 9 samples); EX_THREE_THIRD_STEP_STDDEVS (6) ( +- 0.33, 0.67, 1 sd; 7 samples); EX_SIX_QUARTER_STEP_STDDEVS (7) ( += 0.25, 0.5, 0.75, 1.25, 1.5 sd; 13 samples)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex2_sample_level" type="exchi_sample_level" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for chi2 sampling; see ex1_sample_level for available options.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex3_sample_level" type="exchi_sample_level" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for chi3 sampling; see ex1_sample_level for available options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex4_sample_level" type="exchi_sample_level" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for chi4 sampling; see ex1_sample_level for available options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex1aro_sample_level" type="exchi_sample_level" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for aromatic chi1 sampling; see ex1_sample_level for available options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex2aro_sample_level" type="exchi_sample_level" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for aromatic chi2 sampling; see ex1_sample_level for available options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex1aro_exposed_sample_level" type="exchi_sample_level" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for aromatic chi1 sampling; see ex1_sample_level for available options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex2aro_exposed_sample_level" type="exchi_sample_level" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for aromatic chi1 sampling; see ex1_sample_level for available options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extrachi_cutoff" type="non_negative_integer" default="18">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of neighbors a residue must have before extra rotamers are used. Default 18
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rlto_IncludeCurrentRLT_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Includes current rotamers in the rotamer set. If the input Pose comes directly from the crystal structure when the packer is invoked, then this will include the crystal rotamers; however, if something has happened to the Pose since it was read in, then the crystal rotamers will not be added to the rotamer set.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rlto_PreserveCBetaRLT_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  preserves c-beta during rotamer building for all residues. Under development and untested. Use at your own risk.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rlto_PreventRepackingRLT_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Turn off design and repacking on the positions selected by the accompanying ResFilter.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rlto_RestrictAbsentCanonicalAASExceptNativeRLT_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Except for the native amino acid, do not allow design to amino acid identities that are not listed (i.e. permit only those listed + native) at specific positions (selected by a ResidueSelector or a ResFilter).
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aas" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   list of one letter codes of permitted amino acids, with no separator. (e.g. aas=HYFW for only aromatic amino acids.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rlto_RestrictAbsentCanonicalAASRLT_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Do not allow design to amino acid identities that are not listed (i.e. permit only those listed) at the positions selected by the accompanying ResFilter.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aas" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   list of one letter codes of permitted amino acids, with no separator. (e.g. aas=HYFW for only aromatic amino acids.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rlto_RestrictToRepackingRLT_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Turn off design on the positions selected by the accompanying ResFilter.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="res_lvl_task_op_loader_RESIDUE_LEVEL_TASK_OPERATIONS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Load a set of operations that apply to the packing data for single residues -- the ResidueLevelTask objects held as an array in the PackerTask. These ResLvlTaskOperations must be combined with ResidueSelectors in order to be applied to particular residues.
 </xs:documentation></xs:annotation>
 <xs:group ref="res_lvl_task_op" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:group name="residue_selector">
 <xs:choice>
  <xs:element name="And" type="rs_And_type"/>
  <xs:element name="AntibodyRegion" type="rs_AntibodyRegion_type"/>
  <xs:element name="AsymmetricUnitSelector" type="rs_AsymmetricUnitSelector_type"/>
  <xs:element name="Bin" type="rs_Bin_type"/>
  <xs:element name="Bonded" type="rs_Bonded_type"/>
  <xs:element name="CDR" type="rs_CDR_type"/>
  <xs:element name="Chain" type="rs_Chain_type"/>
  <xs:element name="ClashBasedShell" type="rs_ClashBasedShell_type"/>
  <xs:element name="CloseContact" type="rs_CloseContact_type"/>
  <xs:element name="ConstraintResidueSelector" type="rs_ConstraintResidueSelector_type"/>
  <xs:element name="CutpointResidueSelector" type="rs_CutpointResidueSelector_type"/>
  <xs:element name="DensityFitResidueSelector" type="rs_DensityFitResidueSelector_type"/>
  <xs:element name="False" type="rs_False_type"/>
  <xs:element name="Glycan" type="rs_Glycan_type"/>
  <xs:element name="GlycanLayerSelector" type="rs_GlycanLayerSelector_type"/>
  <xs:element name="GlycanSequonsSelector" type="rs_GlycanSequonsSelector_type"/>
  <xs:element name="HBond" type="rs_HBond_type"/>
  <xs:element name="Index" type="rs_Index_type"/>
  <xs:element name="InterfaceByVector" type="rs_InterfaceByVector_type"/>
  <xs:element name="JumpDownstream" type="rs_JumpDownstream_type"/>
  <xs:element name="JumpUpstream" type="rs_JumpUpstream_type"/>
  <xs:element name="Layer" type="rs_Layer_type"/>
  <xs:element name="LigandMetalContactSelector" type="rs_LigandMetalContactSelector_type"/>
  <xs:element name="Logic" type="rs_Logic_type"/>
  <xs:element name="NamedSegment" type="rs_NamedSegment_type"/>
  <xs:element name="NativeSelector" type="rs_NativeSelector_type"/>
  <xs:element name="Neighborhood" type="rs_Neighborhood_type"/>
  <xs:element name="Not" type="rs_Not_type"/>
  <xs:element name="NumNeighbors" type="rs_NumNeighbors_type"/>
  <xs:element name="Or" type="rs_Or_type"/>
  <xs:element name="PairedSheetResidueSelector" type="rs_PairedSheetResidueSelector_type"/>
  <xs:element name="Phi" type="rs_Phi_type"/>
  <xs:element name="PrimarySequenceNeighborhood" type="rs_PrimarySequenceNeighborhood_type"/>
  <xs:element name="ProteinResidueSelector" type="rs_ProteinResidueSelector_type"/>
  <xs:element name="RamaMutationSelector" type="rs_RamaMutationSelector_type"/>
  <xs:element name="RandomGlycanFoliageSelector" type="rs_RandomGlycanFoliageSelector_type"/>
  <xs:element name="RandomResidue" type="rs_RandomResidue_type"/>
  <xs:element name="ResidueInMembrane" type="rs_ResidueInMembrane_type"/>
  <xs:element name="ResidueInSequenceMotifSelector" type="rs_ResidueInSequenceMotifSelector_type"/>
  <xs:element name="ResidueName" type="rs_ResidueName_type"/>
  <xs:element name="ResiduePDBInfoHasLabel" type="rs_ResiduePDBInfoHasLabel_type"/>
  <xs:element name="ResiduePropertySelector" type="rs_ResiduePropertySelector_type"/>
  <xs:element name="SSElement" type="rs_SSElement_type"/>
  <xs:element name="ScoreTermValueBased" type="rs_ScoreTermValueBased_type"/>
  <xs:element name="SecondaryStructure" type="rs_SecondaryStructure_type"/>
  <xs:element name="SimpleMetricSelector" type="rs_SimpleMetricSelector_type"/>
  <xs:element name="Slice" type="rs_Slice_type"/>
  <xs:element name="Span" type="rs_Span_type"/>
  <xs:element name="StoredResidueSubset" type="rs_StoredResidueSubset_type"/>
  <xs:element name="SymmetricalResidue" type="rs_SymmetricalResidue_type"/>
  <xs:element name="Task" type="rs_Task_type"/>
  <xs:element name="True" type="rs_True_type"/>
  <xs:element name="Unsat" type="rs_Unsat_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="rs_And_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The AndResidueSelector combines the output of multiple ResidueSelectors using AND logic, i.e., only residues selected by ALL contained ResidueSelectors will be selected. ResidueSelecters can be pulled in from a DataMap, from subtags (for ResidueSelectors known to the ResidueSelectorFactory) or programmatically through %add_residue_selector.
 </xs:documentation></xs:annotation>
 <xs:group ref="residue_selector" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="selectors" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma separated list of selected residues. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="region_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="cdr_region|framework_region|antigen_region"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="rs_AntibodyRegion_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Select residues of particular antibody regions.
 </xs:documentation></xs:annotation>
 <xs:attribute name="region" type="region_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Select the region you wish to disable. Options: cdr_region, framework_region, antigen_region
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdr_definition" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the cdr definition you want to use. Requires the input_ab_scheme option
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_ab_scheme" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the antibody numbering scheme. Requires the cdr_definition XML option. Both options can also be set through the command line (recommended). 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_AsymmetricUnitSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com). 
A ResidueSelector that selects only the master subunit of a symmetric pose or all of the residues in a non-symmetric pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_Bin_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The BinSelector selects residues that fall in a named mainchain torsion bin (e.g. the "A" bin, corresponding to alpha-helical residues by the "ABEGO" nomenclature). Non-polymeric residues are ignored. By default, only alpha-amino acids are selected, though this can be disabled.
 </xs:documentation></xs:annotation>
 <xs:attribute name="bin_params_file" type="xs:string" default="ABEGO">
  <xs:annotation><xs:documentation xml:lang="en">
   The filename of a bin_params file that defines a set of torsion bins. Current options include "ABEGO", "ABBA" (a symmetric version of the ABEGO nomenclature useful for mixed D/L design), and "PRO_DPRO" (which defines bins "LPRO" and "DPRO" corresponding to the regions of Ramachandran space accessible to L- and D-proline, respectively). Predefined bin_params files are in database/protocol_data/generalizedKIC/bin_params/. A custom-written bin_params file may also be provided with its relative path from the execution directory.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bin" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the mainchain torsion bin.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="select_only_alpha_aas" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, only alpha-amino acids are selected. If false, any polymeric type allowed by the bin definitions file is selected.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="resnum_list_with_ranges">
 <xs:restriction base="xs:string">
  <xs:pattern value="([0-9]+|[0-9]+[A-Za-z]|refpose(.*,[0-9]+)|refpose(.*,[0-9]+)[+\-][0-9]+)([,\-]([0-9]+|[0-9]+[A-Za-z]|refpose(.*,[0-9]+)|refpose(.*,[0-9]+)[+\-][0-9]+))*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="rs_Bonded_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Selects all residues that are attached to the provided residues by a chemical bond
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of residue selector specifying residues for which to select bonded partners. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_CDR_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Select CDR residues.
 </xs:documentation></xs:annotation>
 <xs:attribute name="cdrs" type="xs:string" default="L1,L2,L3,H1,H2,H3">
  <xs:annotation><xs:documentation xml:lang="en">
   Which CDRs to include. Comma separated list. Default: L1,L2,L3,H1,H2,H3 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdr_definition" type="xs:string" default="Aroop">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the cdr definition you want to use. Requiresthe input_ab_scheme XML option.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_ab_scheme" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the antibody numbering scheme. Requiresthe cdr_definition option. Both options can also be set through the command line (recommended)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="chain_cslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="[ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$.?\]{}|\-_\\~=%zyxwvutsrqponmlkjihgfedcba](,[ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$.?\]{}|\-_\\~=%zyxwvutsrqponmlkjihgfedcba])*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="rs_Chain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The ChainSelector sets the positions corresponding to all the residues in the given set of chains to true, and all the other positions to false.
 </xs:documentation></xs:annotation>
 <xs:attribute name="chains" type="chain_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   The string given for the "chains" option should be a comma-separated list of chain identifiers. Each chain identifier should be either an integer, so that the Pose chain index will be used, or a single character, so that the PDB chain ID can be used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="task_operation_comma_separated_list">
 <xs:restriction base="xs:string">
  <xs:pattern value="[ 	]*[A-Za-z][A-Za-z0-9\-_]*([ 	]*,[ 	]*[A-Za-z][A-Za-z0-9\-_]*[ 	]*)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="named_packer_palette">
 <xs:restriction base="xs:string">
  <xs:pattern value="[A-Za-z][A-Za-z0-9\-_]*"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="int_cslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="[-+]?[0-9]+(,[-+]?[0-9]+)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="rs_ClashBasedShell_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The ClashBasedShellSelector identifies all residues that clash with at least one rotamer of a given residue selection.
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   The residues to build the shell around.  These can also be specified via the 'selector' or 'task_operations' options, or via a ResidueSelector subtag.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Select the residues that @b aren't part of the clash-based shell.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_shells" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of shells to calculate.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_focus" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, include the focus residues in the ultimate selection.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="focus_on_designable" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Only applies if 'task_operations' is given.  By default, only residues that can design are considered when building the shell.  Set to 'false' to also consider residues that can repack.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bump_overlap_factor" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Two atoms are considered to clash when the squared distance between them is less than: bump_overlap_factor * {sum of Lennard-Jones radii}^2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_CloseContact_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This class selects all residues in close contact with a central residue, or a set of central residues, where this decision is based on atom-to-atom distances for the current set of coordinates in the Pose
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="contact_threshold" type="real" default="4.5">
  <xs:annotation><xs:documentation xml:lang="en">
   The distance, in Angstroms, around the residues in the central-residues set which defines the atomic-contact cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the residue selector that's used to identify the central residue(s); other residues are selected if they are in close contact with this group of central residues. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_ConstraintResidueSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Selects those residues that have distance/angle/dihedral constraints
 </xs:documentation></xs:annotation>
 <xs:attribute name="distance" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Select distance (csttype=AtomPair) constraints.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Select angle (csttype=Angle) constraints.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dihedral" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Select dihedral (csttype=Dihedral) constraints.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_CutpointResidueSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Selects all amino acid residues that are cutpoints of the FoldTree
 </xs:documentation></xs:annotation>
 <xs:attribute name="use_foldtree" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector requires the residue to be cutpoint in the FoldTree and as variant type. Otherwise, just based on variant type 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_DensityFitResidueSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com) and Sebastian Raemish (raemish@scripps.edu).
Select residues that have a good electron density fit. (Or bad fit using the invert option). Uses internal density tools to do so. 
 Numbers and cutoffs match well with Coot's density fit analysis tool.
 Zscore uses weighted sum of density, density-compared-to-neighbors, rama (where applicable) and cart_bonded to compute)  
Correlation is same values used to calculate density scores.  Zscore: eLife 2016, Dimaio
TIPS:
 In order to do native comparisons, run the PerResidueDensityFit on the input (top of RS), and then use this selector on that.
 </xs:documentation></xs:annotation>
 <xs:attribute name="invert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Select residues that have a bad density fit instead of those with good density fit.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutoff" type="real" default="-.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Cutoff of bad match to density
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sliding_window_size" type="positive_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   Sliding window size for density calculation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mixed_sliding_window" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a window size of 3 for protein and 1 for glycans.  May skew results.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="match_res" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use density correlation instead of a zscore to fit to density
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_selector_as_zscore_mask" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the selector as true mask to calculate the Zscore.  Otherwise, use it just as a selection for result.  Default true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="den_fit_metric" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a previously defined Per-Residue Density Fit Metric (use for caching data
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_cache" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use any cached SM data instead of recaclulating. Data can be cached by calling RunSimpleMetrics on the metric before using this residue selector. The metric will need to be defined before this selector, perhaps in another section of SIMPLE_METRICS.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix for the cached data.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="suffix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Suffix for the cached data.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fail_on_missing_cache" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If we are using cached data, should we fail on no cache?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A Residue selector mask.  Used to only compute Zscore among a set of residues.  Useful for protein vs glycan density.  Since match_res is NOT a zscore, the selector acts as an AND selector, so we only compute the correlations on this set. . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_False_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A residue selector which doesn't select any residues.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_Glycan_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmai.com)
A ResidueSelector for carbohydrates and individual carbohydrate trees. Selects all Glycan residues if no option is given or the branch going out from the root residue. Selecting from root residues allows you to choose the whole glycan branch or only tips, etc.
 </xs:documentation></xs:annotation>
 <xs:attribute name="branch" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the residue to select from.  These can be the branch points of the glycans or carbohydrate residues from which to select the downstream branch from. Like the rest of a tree from a particular position.  That position could be the trunk or individual branches, which keep branching out. Pose (23) or PDB numbering (24A)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="branches" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the residues to select from. Separated by spaces or commas. These can be the branch points of the glycans or carbohydrate residues from which to select the downstream branch from. Like the rest of a tree from a particular position.  That position could be the trunk or individual branches, which keep branching out. Pose (23) or PDB numbering (24A)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ref_pose_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If using a Reference Pose, set the name
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_root" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we include the root (branch/branches) residues in our selection or just go from that?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_GlycanLayerSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com).
A selector for choosing glycan residues based on their layer - as measured by the residue distance to the start of the glycan tree.If no layer is set, will select all glycan residues.
 </xs:documentation></xs:annotation>
 <xs:attribute name="start" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Start of the glycan layer we are selecting from.0-N
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   End of the glycan layer we are selecting from.1-N
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="layer_as_greater_than_or_equal_to" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the layer as all residues greater than or equal to this number (such as the end of the tree)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="layer_as_less_than_or_equal_to" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the layer as all residue less or equal to this number (the beginning of the tree)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_GlycanSequonsSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Select residues that can be glycosylated, based on a known sequence motif. Default: N-(not P)-S/T
 </xs:documentation></xs:annotation>
 <xs:attribute name="NxST" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use N-notP-S/T glycosylation motif
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="NxC" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use N-X-C glycosylation motif
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="WxxW" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use W-X-X-W mannosylation motif
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="WSTxC" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use W-S/T-X-C mannosylation motif
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_HBond_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A ResidueSelector that selects all residues with hydrogen bonds to the specified starting residues. If no input residues are specified, selects all residues forming hydrogen bonds.
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of residue selector specifying residues for which to select hydrogen bonded partners. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_bb_bb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Include backbone-backbone hydrogen bonds?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hbond_energy_cutoff" type="real" default="-0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Upper energy cutoff for whether we will count a hydrogen bond
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_Index_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The ResidueIndexSelector sets the positions corresponding to the residues given in the resnums string to true, and all other positions to false. Note that it does not support PDB insertion codes.
 </xs:documentation></xs:annotation>
 <xs:attribute name="resnums" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="error_on_out_of_bounds_index" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true (the default), this selector throws an error if an index is selected that is not in the pose (e.g. residue 56 of a 55-residue structure).  If false, indices that don't exist in the pose are silently ignored.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reverse" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true(default false), this selector reverses the index. So 1-50  selects the last 50 residues of a protein
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_InterfaceByVector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Measures an interface by creating two vectors.One vector is between Ca - to Cb of grp1 residues.  Second vector is between Cb and Ca of residues in group 2.
 Using the angle_cut and dist_cut options, we take the dot product of both vectors,
 essentially creating a cone of grp1 residues and seeing if the interactions are within that cone.
It should be noted that 
  1) GRP1 to GRP2 is slightly different than GRP2 to GRP1
  2) before using the vector, we use the nearby_atom_cut to select nearby atoms as well.
 </xs:documentation></xs:annotation>
 <xs:group ref="residue_selector" minOccurs="0" maxOccurs="2"/>
 <xs:attribute name="cb_dist_cut" type="real" default="11.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance to cut using neighbor graph before doing other calculations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nearby_atom_cut" type="real" default="5.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance to include nearby atoms before using the vectors.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="vector_angle_cut" type="real" default="75.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The angle that defines a single side of the interaction cone
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="vector_dist_cut" type="real" default="9.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance that defines the vector-vector distance
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grp1_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   First selector (creates cone). The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grp2_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Second selector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_JumpDownstream_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The JumpDownstreamSelector sets the positions corresponding to all of the residues that are downstream of the indicated jump to true, and all the other positions to false. This selector is logically equivalent to a NotSelector applied to the JumpUpstreamSelector for the same jump.
 </xs:documentation></xs:annotation>
 <xs:attribute name="jump" type="xs:integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The integer given for the "jump" argument should refer to a Jump that is present in the Pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_JumpUpstream_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The JumpUpstreamSelector sets the positions corresponding to all of the residues that are upstream of the indicated jump to true, and all the other positions to false. This selector is logically equivalent to a NotSelector applied to the JumpDownstreamSelector for the same jump.
 </xs:documentation></xs:annotation>
 <xs:attribute name="jump" type="xs:integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The integer given for the "jump" argument should refer to a Jump that is present in the Pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_Layer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="select_core" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the core (buried) layer be selected?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="select_boundary" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the boundary (semi-buried) layer be selected?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="select_surface" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the surface (exposed) layer be selected?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_selection" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the selection be stored, so that it needn't be recomputed?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sidechain_neighbors" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true (the default), then the sidechain neighbour algorithm is used to determine burial.  If false, burial is based on SASA (solvent-accessible surface area) calculations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ball_radius" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The radius value for the rolling ball algorithm used for SASA (solvent-accessible surface area) calculations.  Only used if use_sidechain_neighbors=false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_neighbor_dist_midpoint" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The midpoint of the distance-dependent sigmoidal falloff for the sidechain-neighbours algorithm.  Only used if use_sidechain_neighbors=true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_neighbor_denominator" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_neighbor_angle_shift_factor" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_neighbor_angle_exponent" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_neighbor_dist_exponent" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="core_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="surface_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_LigandMetalContactSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This residue selector selects for the residues in contact with the ligand metal
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the residue selector for the ligand. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist_cutoff_multiplier" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Multiplier for the distance from the metal atom for contact detection
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_Logic_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Frances Chu (francesc345@gmail.com).
A residue selector that takes one of the following options: "selector", "selectors", "residue_selector", "residue_selectors", and performs the same function no matter the option given. Takes arbitrarily many residue selectors within the option and performs and/or/not boolean logic.
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selectors separated by and/or/not boolean logic.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selectors" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selectors separated by and/or/not boolean logic.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selectors separated by and/or/not boolean logic.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selectors" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selectors separated by and/or/not boolean logic.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="residue_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="-?[0-9](,-?[0-9])*(:-?[0-9](,-?[0-9])*)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="rs_NamedSegment_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Selects residues from a named segment generated by StructureArchitects.
 </xs:documentation></xs:annotation>
 <xs:attribute name="segment" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a previously defined segment.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues" type="residue_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue numbers. Comma separated. Ranges denoted using ":", e.g. 1,3:5,7
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="error_on_missing_segment" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Throw error if the given segment is not present in the pose? Default is true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_NativeSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A ResidueSelector that applies a given residue selector to the native pose. If the native pose is shorter than the given pose, 'false' values will be appended onto the end of the returned residue subset. If the native pose is longer than the given pose, then the subset will be shortened to be the length of the given pose.
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of residue selector to be applied to the native pose. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_Neighborhood_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Authors: Robert Linder (rlindner@mpimf-heidelberg.mpg.de), Jared Adolf-Bryfogle (jadolfbr@gmail.com), and Gerard Daniel (gerardda@uw.edu) 
A Residue Selector that selects neighboring residues to a set of residues (focus).  By default, includes this focus in the resulting selection.
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Focus to select around. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Focus to select around.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance to measure neighbors. Default is 10A. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom_names_for_distance_measure" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A list of comma separated atom names, for each focus residue, the positions of which will be used for measuring distance to find neighbors.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_focus_in_subset" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the focus be included in the returning subset?  Default True
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_Not_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A Residue Selector that selects the inverse of the selector passed to it.
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_NumNeighbors_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="count_water" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="non_negative_integer" default="17">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_cutoff" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_Or_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Selector that takes the logical or of the provided residue selectors
 </xs:documentation></xs:annotation>
 <xs:group ref="residue_selector" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="selectors" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma-delimited list of selectors (with optional integrated logic). The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_PairedSheetResidueSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Selects residues that are involved in strand-strand pairings.
 </xs:documentation></xs:annotation>
 <xs:attribute name="secstruct" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Secondary structure, e.g. "EEEELLEEEE". If undefined, sec struct will be chosen based on the value of the 'use_dssp' option
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sheet_topology" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String describing sheet topology, of the format A-B.P.R, where A is the strand number of the first strand in primary space, B is the strand number of the second strand in primary space, P	 is 'P' for parallel and 'A' for antiparallel, and R is the register shift. E.g. "1-2.A.-1".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_dssp" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use dssp to aito-detect secondary structure.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_Phi_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The PhiSelector selects alpha-amino acids that are in either the positive phi or negative phi region of Ramachandran space. Ligands and polymeric residues that are not alpha-amion acids are never selected. Alpha-amino acids with no lower connection (or nothing connected at the lower connection) are also never selected. By default, alpha-amino acids with no upper connection are not selected, though this can be disabled.
 </xs:documentation></xs:annotation>
 <xs:attribute name="select_positive_phi" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true (the default), alpha-amino acids with phi values greater than or equal to zero are selected. If false, alpha-amino acids with phi values less than zero are selected.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_unconnected_upper" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true (the default) then C-terminal residues and other residues with nothing connected at the upper connection are not selected. If false, then these residues can be selected, depending on their phi values. Note that anything lacking a lower connection is never selected
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_PrimarySequenceNeighborhood_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lower" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cross_chain_boundaries" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow the selector to cross chain boundaries? By default false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_ProteinResidueSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Selects all amino acid residues from the Pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_RamaMutationSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The RamaMutationSelector selects positions which, when mutated to a desired residue type, would have a rama_prepro score below a user-defined threshold.  This is useful for selecting those positions that ought to be mutated to a particular conformationally-constrained residue type, such as proline or alpha-aminoisobutyric acid.
 </xs:documentation></xs:annotation>
 <xs:attribute name="target_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The target residue type (full name, not three-letter code) that we are considering.  This residue selector will select positions which, when mutated to this residue type, have a rama_prepro score below the score threshold.  If the type is set to an empty string (""), the current residue type at each position is considered instead.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The rama_prepro score threshold above which positions are not selected.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rama_prepro_multiplier" type="real" default="0.45">
  <xs:annotation><xs:documentation xml:lang="en">
   A weighting factor for rama_prepro scoring.  The calculated rama_prepro value is multiplied by this factor before being compared to the threshold value.  This is for convenience: rama_prepro is generally given a weight different than 1.0 in the score function.  This defaults to 0.45 to match the weight in the beta_nov15 score function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_RandomGlycanFoliageSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Selects a random carbohydrate residue from a subset or selector, then selects the rest of the glycan foliage.  Used for sampling.
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_RandomResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Selects residues in the pose at random. Note that this residue selector is stochastic. This is, it will return a different set of residues every time it is called. However, the randomly selected residues can be saved using the StoreResidueSubsetMover and retrieved using the StoredResidueSubset selector.
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_residues" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of residues to be randomly selected
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="select_res_cluster" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   option to only select multiple residues near each other, only applies to case where num_residues greater than 1, multiple random residues are required to be within distance_cutoff angstroms of one another
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   only active when select_res_cluster set to true, distance that defines whether two residues are neighbors or not
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_ResidueInMembrane_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  choose membrane or extramembrane residues
 </xs:documentation></xs:annotation>
 <xs:attribute name="select_in_membrane" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   whether choose resiudes in membrane or out
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_ResidueInSequenceMotifSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Select a residue in a all occurances of a user-specified sequence motif.
 </xs:documentation></xs:annotation>
 <xs:attribute name="motif" type="string_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated string: Regular a exression that describes the sequence motif, position within the motif (e.g motif="N.[ST],1)"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_ResidueName_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The ResidueNameSelector selects residues using a string containing residue names Note that one of residue_name3 and residue_names are REQUIRED.
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_name3" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of 3-letter Rosetta residue names. These will be selected regardless of variant type. For example, 'SER' will select residues named 'SER', 'SER:NtermProteinFull', and 'SER:Phosphorylated'. Note that one of residue_name3 and residue_names are REQUIRED.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_names" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of Rosetta residue names (including patches). For example, 'CYD' will select all disulfides, and 'CYD,SER:NTermProteinFull,ALA' will select all disulfides, alanines, and N-terminal serines -- all other residues will not be selected (i.e. be false in the ResidueSubset object). Note that one of residue_name3 and residue_names are REQUIRED.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_ResiduePDBInfoHasLabel_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The ResiduePDBInfoHasLabel residue selector selects all residues with the given PDB residue label. Some protocols (e.g. MotifGraft, Disulfidize) use these labels to mark residues, and this selector allows those residues to be selected without the user's knowledge of which residues were marked.
 </xs:documentation></xs:annotation>
 <xs:attribute name="property" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Required. The PDB residue info label to be selected. (e.g. "DISULFIDIZE"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="logic_types">
 <xs:restriction base="xs:string">
  <xs:enumeration value="and_logic"/>
  <xs:enumeration value="or_logic"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="rs_ResiduePropertySelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A residue selector that selects based on set residue properties.  Default is to use OR logic for multiple properties.  This can be set via selection_logic option.
 </xs:documentation></xs:annotation>
 <xs:attribute name="properties" type="string_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of properties for selection. Current choices are: 
POLYMER, LIGAND, PROTEIN, CANONICAL_AA, CANONICAL_NUCLEIC, DNA, RNA, TNA, PNA, PEPTOID, OLIGOUREA, ARAMID, ORTHO_ARAMID, META_ARAMID, PARA_ARAMID, PRE_METHYLENE_ORTHO_ARAMID, PRE_METHYLENE_META_ARAMID, PRE_METHYLENE_PARA_ARAMID, POST_METHYLENE_ORTHO_ARAMID, POST_METHYLENE_META_ARAMID, POST_METHYLENE_PARA_ARAMID, PRE_METHYLENE_POST_METHYLENE_ORTHO_ARAMID, PRE_METHYLENE_POST_METHYLENE_META_ARAMID, PRE_METHYLENE_POST_METHYLENE_PARA_ARAMID, CARBOHYDRATE, LIPID, TERPENE, NUCLEOTIDE_DIPHOSPHATE, SRI, TRIAZOLE_LINKER, METAL, SURFACE, WATER, TP3, VIRTUALIZABLE_BY_PACKER, SOLVENT, VIRTUAL_RESIDUE, VRT1, INVERTED_VIRTUAL_RESIDUE, LOWER_TERMINUS, UPPER_TERMINUS, BRANCH_POINT, TERMINUS, LOWERTERM_TRUNC, UPPERTERM_TRUNC, COARSE, ADDUCT, SC_ORBITALS, FRAGMENT, UPPERTERM_CAP, LOWERTERM_CAP, POLAR, HYDROPHOBIC, CHARGED, NEGATIVE_CHARGE, POSITIVE_CHARGE, AROMATIC, ALIPHATIC, CYCLIC, BETA_BRANCHED_SIDECHAIN, METALBINDING, SIDECHAIN_THIOL, DISULFIDE_BONDED, ELECTROPHILE, SIDECHAIN_AMINE, N_METHYLATED, MEMBRANE, PHOSPHONATE, PHOSPHONATE_UPPER, ACETYLATED_NTERMINUS, METHYLATED_CTERMINUS, DIMETHYLATED_CTERMINUS, ALPHA_AA, BETA_AA, GAMMA_AA, L_AA, D_AA, ACHIRAL_BACKBONE, ACHIRAL_SIDECHAIN, R_PEPTOID, S_PEPTOID, TAUTOMER, PURINE, PYRIMIDINE, L_RNA, D_RNA, METHYLATED_NA, TRIOSE, TETROSE, PENTOSE, HEXOSE, HEPTOSE, OCTOSE, NONOSE, ALDOSE, KETOSE, L_SUGAR, D_SUGAR, OXIROSE, OXETOSE, FURANOSE, PYRANOSE, SEPTANOSE, ALPHA_SUGAR, BETA_SUGAR, SIALIC_ACID, C1_MODIFIED, C2_MODIFIED, C3_MODIFIED, C4_MODIFIED, C5_MODIFIED, C6_MODIFIED, C7_MODIFIED, C8_MODIFIED, C9_MODIFIED, GLYCOSIDE, ALDONIC_ACID, URONIC_ACID, DEOXY_SUGAR, AMINO_SUGAR, ACETYLAMINO_SUGAR, ACETYL_SUGAR, LACTYL_SUGAR, R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR, PHOSPHORYLATED_SUGAR, SULFATED_SUGAR, SULFOAMINO_SUGAR, THIO_SUGAR, C_METHYLATED_SUGAR, FLUORO_SUGAR, PHOSPHATE, SPINLABEL, DIAMAGNETIC, PARAMAGNETIC
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="logic" type="logic_types" default="and_logic">
  <xs:annotation><xs:documentation xml:lang="en">
   The logic to use for mutliple properties.  Default is OR logic. Current choices are: 
 [and_logic, or_logic]
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_SSElement_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  a selector for choosing parts of secondary structure
 </xs:documentation></xs:annotation>
 <xs:attribute name="selection" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   H=helix,L=Loop,S=Sheet,N=n_terminal,C=terminal can define only start
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="to_selection" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   H=helix,L=Loop,S=Sheet,N=n_terminal,C=terminal
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   chain letter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reassign_short_terminal_loop" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   if terminal less than X residues loop is reassigned to neighboring SS element (default=2; 0=no reassignment).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_ScoreTermValueBased_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Selects residues based on per residue score of the given score_type.
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="xs:string" default="ALL">
  <xs:annotation><xs:documentation xml:lang="en">
   pose number of the subset of residues to be considered. The default is 'ALL'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lower_threshold" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   residues scoring equal to or above this threshold will be selected
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_threshold" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   residues scoring equal to or below this threshold will be selected
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_type" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   the score type to be used for selection
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_fxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   the score function to be used for evaluation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_SecondaryStructure_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  SecondaryStructureSelector selects all residues with given secondary structure. For example, you might use it to select all loop residues in a pose. SecondaryStructureSelector uses the following rules to determine the pose secondary structure: 1. If pose_secstruct is specified, it is used. 2. If use_dssp is true, DSSP is used on the input pose to determine its secondary structure. 3. If use_dssp is false, the secondary structure stored in the pose is used.
 </xs:documentation></xs:annotation>
 <xs:attribute name="overlap" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If specified, the ranges of residues with matching secondary structure are expanded by this many residues. Each selected range of residues will not be expanded past chain endings. For example, a pose with secondary structure LHHHHHHHLLLEEEEELLEEEEEL, ss='E', and overlap 0 would select the two strand residue ranges EEEEE and EEEEE. With overlap 2, the selected residues would also include up to two residues before and after the strands (LLEEEEELLEEEEEL).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minH" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Defines the minimal number of consecutive residues with helix assignation to be considered an helix. Smaller assignation patches are understood as loops.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minE" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Defines the minimal number of consecutive residues with beta assignation to be considered a beta. Smaller assignation patches are understood as loops.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_terminal_loops" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If false, one-residue "loop" regions at the termini of chains will be ignored. If true, all residues will be considered for selection.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_dssp" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   f true, dssp will be used to determine the pose secondary structure every time the SecondaryStructure residue selector is applied. If false, and a secondary structure is set in the pose, the secondary structure in the pose will be used without re-computing DSSP. This option has no effect if pose_secstruct is set.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pose_secstruct" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
    If set, the given secondary structure string will be used instead of the pose secondary structure or DSSP. The given secondary structure must match the length of the pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The secondary structure types to be selected. This parameter is required. Valid secondary structure characters are 'E', 'H' and 'L'. To select loops, for example, use ss="L", and to select both helices and sheets, use ss="HE"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_SimpleMetricSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Allows selecting residues based on a PerResidueRealMetric.
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="metric" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A PerResidueRealMetric that will be used to select residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lower_bound" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The lowest value that will be considered "inside the bounds". Leaving this blank or not including it will have no lower_bound.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_bound" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The highest value that will be considered "inside the bounds". Leaving this blank or not including it will have no upper_bound.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="outside_bounds" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use this if you want to select residues below lower_bound and above upper_bound.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_Slice_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Residue selector that allows slicing of the selection of other residue selections. Also allows negative indexing. 1 is the first residue and -1 is the last.
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The selector to slice from. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from" type="xs:integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Range selection: This is the first residue of the range to select.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="to" type="xs:integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Range selection: This is the last residue of the range to select.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="indices" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Index selection: Comma separated list of indices. May not use this with from-to
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="slice_mode" type="xs:string" default="SPARSE">
  <xs:annotation><xs:documentation xml:lang="en">
   How should the previous residue selector be represented? SPARSE: all gaps are removed from the previous selection. If residues 101 and 200 are selected, only indices 1 and 2 are valid. CONTIGUOUS: gaps from previous selection are included in indices. If residues 101 and 200 are selected, all indices from 1 to 100 are valid.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="oob_mode" type="xs:string" default="ERROR">
  <xs:annotation><xs:documentation xml:lang="en">
   If an index is out of bounds, how should this be handled? ERROR: Quit and display error message. WARN: Display error message. IGNORE: Ignore.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="refpose_enabled_residue_number">
 <xs:restriction base="xs:string">
  <xs:pattern value="[0-9]+|[0-9]+[A-Za-z]|refpose(.*,[0-9]+)|refpose(.*,[0-9]+)[+\-][0-9]+"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="rs_Span_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The ResidueSpanSelector sets the positions corresponding to the residues between the start and end points to true, and all other positions to false. Note that it does not support PDB insertion codes.
 </xs:documentation></xs:annotation>
 <xs:attribute name="start" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   The starting residue of the span.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   The ending residue of the span.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_StoredResidueSubset_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Selects residues using a previously stored residue subset.
 </xs:documentation></xs:annotation>
 <xs:attribute name="subset_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a previously stored residue subset
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_SymmetricalResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The SymmetricalResidueSelector, when given a selector, will return all symmetrical copies (including the original selection) of those residues. While the packer is symmetry aware, not all filters are. This selector is useful when you need to explicitly give residue numbers but you are not sure which symmetry subunit you need.
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
 </xs:choice>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_Task_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Before residue selectors were introduced in Rosetta, task operations were commonly used as the means of selecting residues.  The TaskSelector provides an easy way to convert an old-style selection, made with task operations, to a new-style, residue selector-based selection.
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of task operations to use to generate a selection.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="designable" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, residues that the task operations designate as designable are selected.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packable" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, residues that the task operations designate as packable are selected.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fixed" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If ture, residues that the task operations designate as fixed (i.e. not designable or packable) are selected.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_True_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rs_Unsat_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  selects hbond acceptors or donors that are not satisfied
 </xs:documentation></xs:annotation>
 <xs:attribute name="check_acceptors" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   whether you want to count acceptors or donors
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="legacy" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   do you want the hbnet style hbond detection or legacy style
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hbond_energy_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   what is the hbond energy cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="consider_mainchain_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   should we consider just mainchains?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="res_selector_loader_RESIDUE_SELECTORS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  ResidueSelectors may be defined as subelements of the RESIDUE_SELECTORS element, and then will be placed into the DataMap for later retrieval by Movers and Filters or anything else that might use a ResidueSelector. All immediate subelements should have the 'name' attribute as that is how they will be identified in the DataMap. Subelements of the immediate subelements will not be loaded into the data map and do not need to be given a name; e.g. if an immediate subelemement is an 'And' ResidueSelector, and this 'And' ResidueSelector has a 'Chain' subelement, then the 'And' subelement must be given a name, but the 'Chain' subelement probably should not be given a name. Why not? The 'Chain' subelement will not end up as a member of the DataMap in any case, and if a name is given to it, then a user of the XML file may think it is reasonable to use the name for that Chain selector elsewhere in their script -- but their script would fail if they do so.
 </xs:documentation></xs:annotation>
 <xs:group ref="residue_selector" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:simpleType name="hbnet_bonus_function_allowed_types">
 <xs:restriction base="xs:string">
  <xs:enumeration value="quadratic"/>
  <xs:enumeration value="linear"/>
  <xs:enumeration value="logarithmic"/>
  <xs:enumeration value="squareroot"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="sfxn_loader_ScoreFunction_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Reweight">
   <xs:complexType mixed="true">
    <xs:attribute name="scoretype" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      The name of a score term to be reweighted.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="weight" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The score term weight to be assigned.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Set">
   <xs:complexType mixed="true">
    <xs:attribute name="exclude_DNA_DNA_hbond" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Do not score hydrogen bonds between DNA residues
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="use_hb_env_dep_DNA" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Enable environmental dependent weighting of hydrogen bonds involving DNA
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="use_hb_env_dep" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Enable environmental dependent weighting of hydrogen bond terms
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="smooth_hb_env_dep" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Smooth environmental dependence of hbond term
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="decompose_bb_hb_into_pair_energies" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Should backbone-backbone hydrogen bonds be split between the two participating residues?
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__hb_max_energy" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Max possible hbond energy. Under nearly all circumstances this should be set to 0.0.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__exclude_DNA_DNA_hbond" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Same as exclude_DNA_DNA_hbond
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__use_hb_env_dep_DNA" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Same as use_hb_env_dep_DNA
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__put_intra_into_total" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Include intra-res hbond score in total
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__exclude_self_hbonds" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Do not include intra-residue hydrogen bonds
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__use_hb_env_dep" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Same as use_hb_env_dep
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__smooth_hb_env_dep" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Same as smooth_hb_env_dep
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__decompose_bb_hb_into_pair_energies" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Same as decompose_bb_hb_into_pair_energies
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__exclude_intra_res_protein" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Do not include intra-residue protein hydrogen bonds
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__exclude_intra_res_RNA" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      exclude intra-residue RNA hydrogen bonds
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__bb_donor_acceptor_check" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__params_database_tag" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__use_sp2_chi_penalty" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__sp2_BAH180_rise" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__sp2_outer_width" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__measure_sp3acc_BAH_from_hvy" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__fade_energy" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__exclude_ether_oxygens" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__Mbhbond" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbonds__mphbond" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="lj_hbond_OH_donor_dis" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Lennard Jones sigma value for O in OH donor groups
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="lj_hbond_hdis" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Lennard Jones sigma value for hatms, classically it's been at 1.95 but the average A-H distance for hydrogen bonding is 1.75 from crystal structures
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="fa_max_dis" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Max distance for energy function calculations, in angstroms
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="aa_composition_setup_file" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      A list of one or more .comp files specifying desired amino acid compositions, used to set up the aa_composition score term.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="mhc_epitope_setup_file" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      A list of one or more .mhc files specifying epitope prediction details for the mhc_epitope score term.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="netcharge_setup_file" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      A list of one or more .charge files specifying desired net charges, used to set up the netcharge score term.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="softrep_etable" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Should this scorefunction use a softened energy table for the fa_rep score term?
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="fa_elec_min_dis" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The minimum distance for the fa_elec (Coulombic) score term.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="fa_elec_max_dis" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The maximum distance for the fa_elec (Coulombic) score term.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="fa_elec_dielectric" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The dielectric constant for the fa_elec (Coulombic) score term.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="fa_elec_no_dis_dep_die" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      If true, the distance dependence of the dielectric constant used for the fa_elec (Coulombic) term is disabled.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="exclude_protein_protein_fa_elec" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      If true, then the electrostatic interactions between protein residues are not calculated.  Used with exclude_DNA_DNA, this can be useful to speed up the calculation of DNA-protein interactions.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="exclude_DNA_DNA" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      If true, then the electrostatic interactions between DNA residues are not calculated.  Used with exclude_protein_protein, this can be useful to speed up the calculation of DNA-protein interactions.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="pb_bound_tag" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="pb_unbound_tag" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="scale_sc_dens" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="scale_sc_dens_byres" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="nmer_ref_seq_length" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Length of N-mers in nmer_ref score.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="nmer_svm_term_length" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      How many up/downstream residues to average and include in SVM sequence encodingin nmer_ref score.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="nmer_svm_pssm_feat" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Add pssm features to svm encoding in nmer_ref score?
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="nmer_svm_scorecut" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      N-mer SVM scorecut gate for ignoring low-scoring N-mers in nmer_ref score.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="nmer_svm_avg_rank_as_energy" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Use average of SVM score ranks as residue energy for NmerSVM scoring method (nmer_ref score term).  This option is good for normalizing across mhc/hla alleles.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="nmer_svm_aa_matrix" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      N-mer SVM sequence-encoding matrix filename for nmer_ref score.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="nmer_svm_list" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      File with list of N-mer SVM filenames (libsvm) for nmer_ref score.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="nmer_svm" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      N-mer SVM filename (libsvm) for nmer_ref score.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="nmer_svm_rank_list" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      File with list of N-mer svm rank scores filenames (libsvm) for nmer_ref score.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="nmer_svm_rank" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      N-mer SVM rank scores filename (libsvm) for nmer_ref score.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="approximate_buried_unsat_penalty_hbond_energy_threshold" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Energy threshold for a h-bond to be considered satisfying a buried polar. Should be a negative number. (Setting to -0.001 will be much faster than 0 at runtime)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="approximate_buried_unsat_penalty_burial_atomic_depth" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The atomic depth cutoff to determine whether or not a polar atom is buried. Measured from the Sasa surface.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="approximate_buried_unsat_penalty_burial_probe_radius" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The probe radius for the atomic depth calculation.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="approximate_buried_unsat_penalty_burial_resolution" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The resolution for the atomic depth calculation.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="approximate_buried_unsat_penalty_oversat_penalty" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The penalty between atoms that both satisfy the same atom. If we let X = weight_of_approximate_buried_unsat_penalty. Then in general, a buried unsat is worth X, a satisfied unsat is worth 0, a doubly satisfied unsat is worth X * ( setting-1.0 ), a triply satisfied unsat is worth X * ( -2 + 3 * setting ), a N-ly satisfied unsat is worth X * ( 1 - N + 0.5 * N * (N - 1) ).
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="approximate_buried_unsat_penalty_assume_const_backbone" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Should we assume that the backbone atoms will not change during a packing trajectory? (i.e. no positions that include normal aa and proline or n-methyl) If set to false, this energy method takes longer to compute. (~ 2X as long)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="approximate_buried_unsat_penalty_natural_corrections1" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Apply the following corrections to buried unsat penalty: nh2_wants_2, nh1_wants_1, hydroxyl_wants_h, carboxyl_wants_2
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="approximate_buried_unsat_penalty_hbond_bonus_cross_chain" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Apply a bonus factor to hydrogen bonds accross chains.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="approximate_buried_unsat_penalty_hbond_bonus_ser_to_helix_bb" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Apply a bonus factor to the classic SER/THR i - i-4 h-bond. OG/OG1 - O. Set this positive to penalize.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="buried_unsatisfied_penalty_cone_angle_exponent" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The angle exponent for calculating burial by the method of sidechain neighbor cones, used by the BuriedUnsatPenalty energy.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="buried_unsatisfied_penalty_cone_angle_shift_factor" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The angle shift factor for calculating burial by the method of sidechain neighbor cones, used by the BuriedUnsatPenalty energy.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="buried_unsatisfied_penalty_cone_dist_exponent" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The distance exponent for calculating burial by the method of sidechain neighbor cones, used by the BuriedUnsatPenalty energy.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="buried_unsatisfied_penalty_cone_dist_midpoint" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The distance midpoint for calculating burial by the method of sidechain neighbor cones, used by the BuriedUnsatPenalty energy.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="buried_unsatisfied_penalty_burial_threshold" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The number of cones in which a point must lie to be considered buried by the method of sidechain neighbor cones, used by the BuriedUnsatPenalty energy.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="buried_unsatisfied_penalty_hbond_energy_threshold" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The energy threshold above which a hydrogen bond is not counted, used by the BuriedUnsatPenalty energy.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="target_clash_pdb" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      The target pdb file for clash checking.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="dump_trajectory_prefix" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      If the dump_trajectory scoreterm is used, this is the prefix for the filename to which we're dumping.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="dump_trajectory_gz" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      If the dump_trajectory scoreterm is used, this determines whether we write to gzipped files.  False by defualt.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="dump_trajectory_stride" type="positive_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      If the dump_trajectory scoreterm is used, this is the frequency with which we write.  Every Nth evaluation of the score term, a pose will be written.  Default 1.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="voids_penalty_energy_containing_cones_cutoff" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      The minimum number of sidechain cones in which a voxel must lie in order for that voxel to be considered to be buried.  Defaults to 6 cones.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="voids_penalty_energy_voxel_size" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The voxel size (in Angstroms) used in the voids_penalty score term's calculation.  Default 0.5 Angstroms.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="voids_penalty_energy_voxel_grid_padding" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The voxel grid padding (in Angstroms) used in the voids_penalty score term's calculation.  The bounding box for the pose is enlarged on every side by this amount.  Default 1.0 Angstroms.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="voids_penalty_energy_cone_dotproduct_cutoff" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The dot product cutoff used in the voids_penalty score term's calculation.  This effectively sets the width of the cone projected along each side-chain when determining the number of neighbors to a test point in space.  The value can range from -1.0 to 1.0, though negative values are not recommended (since they yield cone angles greater than 180 degrees).  Default 0.1.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="voids_penalty_energy_cone_distance_cutoff" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      The cutoff distance used in the voids_penalty score term's calculation when determining whether a point lies near to a residue.  Default 8.0 Angstroms.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="voids_penalty_energy_disabled_except_during_packing" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      If true, then the voids_penalty score term is disabled outside of the context of the packer.  If false, then the voids_penalty score term is evaluated for packing and scoring (but not for minimizing).  True by default.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbnet_bonus_function_ramping" type="hbnet_bonus_function_allowed_types">
     <xs:annotation><xs:documentation xml:lang="en">
      The hbnet score term's bonus function can scale in different ways as the size of a network grows.  The default is quadratic growth, though linear, logarithmic, and square root growth are all allowed.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="hbnet_max_network_size" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      The maximum size of a hydrogen bond network, beyond which the hbnet score term no longer gives a bonus.  Defaults to 0 (unlimited).
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   A unique identifier given to this ScoreFunction for use in RosettaScripts.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weights" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A .wts file specifying the relative weights of score terms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="patch" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A patch file specifying how the relative weights of score terms given in a weights file should be modified.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetric" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, this scorefunction can be used to score symmetric poses.  If false, it can only be used on asymmetric poses.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hs_hash" type="xs:decimal">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="sfxn_loader_SCOREFXNS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="ScoreFunction" type="sfxn_loader_ScoreFunction_type"/>
 </xs:choice>
</xs:complexType>

<xs:group name="scoring_grid">
 <xs:choice>
  <xs:element name="AtrGrid" type="scoring_grid_AtrGrid_type"/>
  <xs:element name="ChargeGrid" type="scoring_grid_ChargeGrid_type"/>
  <xs:element name="ClassicGrid" type="scoring_grid_ClassicGrid_type"/>
  <xs:element name="HbaGrid" type="scoring_grid_HbaGrid_type"/>
  <xs:element name="HbdGrid" type="scoring_grid_HbdGrid_type"/>
  <xs:element name="LigandPropertyScore" type="scoring_grid_LigandPropertyScore_type"/>
  <xs:element name="PCSMultiGrid" type="scoring_grid_PCSMultiGrid_type"/>
  <xs:element name="PCSSingleGrid" type="scoring_grid_PCSSingleGrid_type"/>
  <xs:element name="RepGrid" type="scoring_grid_RepGrid_type"/>
  <xs:element name="ShapeGrid" type="scoring_grid_ShapeGrid_type"/>
  <xs:element name="SiteGrid" type="scoring_grid_SiteGrid_type"/>
  <xs:element name="SolvationGrid" type="scoring_grid_SolvationGrid_type"/>
  <xs:element name="SolvationMetaGrid" type="scoring_grid_SolvationMetaGrid_type"/>
  <xs:element name="VdwGrid" type="scoring_grid_VdwGrid_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="scoring_grid_AtrGrid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A scoring grid that gives bonuses for being within a certain distance range of an atom -- that is, between the inner radius to outer radius distances
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name used to insert the scoring grid into the GridSet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The value assigned to the grid for backbone atoms; negative values are considered favorable. If provided, then both 'sc' and 'ligand' attributes need to be provided also
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The value assigned to the grid for sidechain atoms; negative values are considered favorable. If provided, then both 'bb' and 'ligand' attributes need to be provided also
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ligand" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The value assigned to the grid for ligand atoms; negative values are considered favorable. If provided, then both 'bb' and 'sc' attributes need to be provided also
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="inner_radius" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The size of the inner radius used when defining the grid, in Angstroms; if provided, then 'outer_radius' attribute must be provided also; a default value of 2.25A is used if not provided
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="outer_radius" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The size of hte outer radius used when defining the grid, in Angstroms; if provided, then the 'inner_radius' attribute must be provided also; a default value of 4.75A
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="scoring_grid_ChargeGrid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A scoring grid that computes the electrostatic potential at a set of grid points; no parameters may be customized currently
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name used to insert the scoring grid into the GridSet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="scoring_grid_ClassicGrid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A scoring grid that treats all atoms as both attractive within 4.75A (getting a default score of -1) and repulsive within 2.25A (getting a default score of +1) atr and rep changes scoring weights; 
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name used to insert the scoring grid into the GridSet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atr" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Score for attractive term of grid (negative scoring is better)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rep" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Score for repulsive term of grid (negative scoring is better)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="scoring_grid_HbaGrid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A scoring grid that computes the hydrogen-bonding energy as given by the location of hydrogen-bond acceptors -- donor atoms can be queried against this grid; no parameters may be customized currently
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name used to insert the scoring grid into the GridSet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="scoring_grid_HbdGrid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A scoring grid that computes the hydrogen-bonding energy as given by the location of hydrogen-bond donors -- acceptor atoms can be queried against this grid; no parameters may be customized currently
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name used to insert the scoring grid into the GridSet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="scoring_grid_LigandPropertyScore_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A scoring grid that computes a score simply based on a static property of the ligand's chemical composition. Not exactly a grid -- but still capable of delivering a bonus or a penalty for a given ResidueType and fits smoothly within the scoring grid machinery
 </xs:documentation></xs:annotation>
 <xs:attribute name="parameter" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The numeric property that the ResidueType of the incoming Residue holds that the LigandPropertyScore is going to query for
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="scoring_grid_PCSMultiGrid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A collection of PCS scoring grids. For each grid, PCS values are calculated from fixed input tensor parameters and compared with the ligand PCS values.
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name used to insert the scoring grid into the GridManager
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pcs_input_file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Main PCS input file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pcs_weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Multiply the PCS grid score by this weight value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="scoring_grid_PCSSingleGrid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A scoring grid that contains PCS values which are calculated from the input tensor and compared with the ligand PCS values.
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name used to insert the scoring grid into the GridManager.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tensor" type="real_cslist" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of PCS tensor values from which the PCSSingleGrid is calculated. Tensor values should have the following order: Xax, Xrh, xM, yM, zM, alpha, beta, gamma.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pcs_file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Textfile with ligand PCS values.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pcs_weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Multiply the PCS grid score by this weight value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="scoring_grid_RepGrid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A scoring grid that gives penalties for being too close to an atom; the too close distance is 2.25A
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name used to insert the scoring grid into the GridSet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The repulsive value assigned to the grid for backbone atoms; positive values are considered unfavorable. If provided, then both 'sc' and 'ligand' attributes need to be provided also
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The repulsive value assigned to the grid for sidechain atoms; positive values are considered unfavorable. If provided, then both 'bb' and 'ligand' attributes need to be provided also
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ligand" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The repulsive value assigned to the grid for ligand atoms; positive values are considered unfavorable. If provided, then both 'bb' and 'sc' attributes need to be provided also
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="scoring_grid_ShapeGrid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A scoring grid that gives a bonus based on a knowledge-based potential looking at favorable scores to residues based on a distance, an angle, and a dihedral; no parameters may be customized for this grid
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name used to insert the scoring grid into the GridSet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="scoring_grid_SiteGrid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A scoring grid that treats selected residue atoms as both attractive within 4.75A (getting a default score of -1) and repulsive within 2.25A (getting a default score of +1) atr and rep changes scoring weights; 
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name used to insert the scoring grid into the GridManager
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue numbers to add additional attractive or repulsive term
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atr" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Score for attractive term of grid (negative scoring is better)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rep" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Score for repulsive term of grid (negative scoring is better)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="scoring_grid_SolvationGrid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A scoring grid based on the EEF1 (aka Lazaridis Karplus) solvation energy for a probe atom for this grid. DO NOT USE! The probe atom is not correctly initialized and this will give you garbage. Contact Sam Deluca for advice.
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name used to insert the scoring grid into the GridSet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="scoring_grid_SolvationMetaGrid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A collection of scoring grids based on the EEF1 (aka Lazaridis Karplus) solvation energy where each individual grid represents the desolvation energy of a particular atom type against the protein. This grid offers no customizable data.
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name used to insert the scoring grid into the GridSet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="scoring_grid_VdwGrid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A scoring grid that stores at each grid point the shortest distance to the closest surface point on any van der Waals sphere in the protein, and then uses that distance when scoring to evaluate a Lennard-Jones like potential created from a spline interpolation of a scoring table in the rosetta database: scoring/qsar/lj_table.txt. No parameters may be customized for this grid
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name used to insert the scoring grid into the GridSet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="grid_score_normalization">
 <xs:restriction base="xs:string">
  <xs:enumeration value="HeavyAtomNormalization"/>
  <xs:enumeration value="AllAtomNormalization"/>
  <xs:enumeration value="ChiAngleNormalization"/>
  <xs:enumeration value="MolecularWeightNormalization"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="scoring_grid_loader_SCORINGGRIDS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The ScoringGridLoader will populate a GridSet with the set of ScoringGrids that are given as subelements of the SCORINGGRIDS element. By default, the grids with be loaded into the 'default' GridSet.
 </xs:documentation></xs:annotation>
 <xs:group ref="scoring_grid" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="name" type="xs:string" default="default">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the GridSet for the listed set of grids
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="width" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The reach of the grid, in Angstroms
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resolution" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The distance between grid points, in Angstroms
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ligand_chain" type="char">
  <xs:annotation><xs:documentation xml:lang="en">
   The chain in the input Pose that the ligand will be
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normalize_mode" type="grid_score_normalization">
  <xs:annotation><xs:documentation xml:lang="en">
   The normalization function to use to aid the comparison of scores between different ligands.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="simple_metric">
 <xs:choice>
  <xs:element name="CalculatorMetric" type="simple_metric_CalculatorMetric_type"/>
  <xs:element name="CompositeEnergyMetric" type="simple_metric_CompositeEnergyMetric_type"/>
  <xs:element name="DihedralDistanceMetric" type="simple_metric_DihedralDistanceMetric_type"/>
  <xs:element name="ElectrostaticComplementarityMetric" type="simple_metric_ElectrostaticComplementarityMetric_type"/>
  <xs:element name="HbondMetric" type="simple_metric_HbondMetric_type"/>
  <xs:element name="InteractionEnergyMetric" type="simple_metric_InteractionEnergyMetric_type"/>
  <xs:element name="InteractionGraphSummaryMetric" type="simple_metric_InteractionGraphSummaryMetric_type"/>
  <xs:element name="PeptideFoldPropensityMetric" type="simple_metric_PeptideFoldPropensityMetric_type"/>
  <xs:element name="PeptideInternalHbondsMetric" type="simple_metric_PeptideInternalHbondsMetric_type"/>
  <xs:element name="PerResidueClashMetric" type="simple_metric_PerResidueClashMetric_type"/>
  <xs:element name="PerResidueDensityFitMetric" type="simple_metric_PerResidueDensityFitMetric_type"/>
  <xs:element name="PerResidueEnergyMetric" type="simple_metric_PerResidueEnergyMetric_type"/>
  <xs:element name="PerResidueGlycanLayerMetric" type="simple_metric_PerResidueGlycanLayerMetric_type"/>
  <xs:element name="PerResidueRMSDMetric" type="simple_metric_PerResidueRMSDMetric_type"/>
  <xs:element name="PerResidueSapScoreMetric" type="simple_metric_PerResidueSapScoreMetric_type"/>
  <xs:element name="PerResidueSasaMetric" type="simple_metric_PerResidueSasaMetric_type"/>
  <xs:element name="PolarGroupBurialPyMolStringMetric" type="simple_metric_PolarGroupBurialPyMolStringMetric_type"/>
  <xs:element name="ProtocolSettingsMetric" type="simple_metric_ProtocolSettingsMetric_type"/>
  <xs:element name="RDKitMetric" type="simple_metric_RDKitMetric_type"/>
  <xs:element name="RMSDMetric" type="simple_metric_RMSDMetric_type"/>
  <xs:element name="ResidueSummaryMetric" type="simple_metric_ResidueSummaryMetric_type"/>
  <xs:element name="SapScoreMetric" type="simple_metric_SapScoreMetric_type"/>
  <xs:element name="SasaMetric" type="simple_metric_SasaMetric_type"/>
  <xs:element name="SecondaryStructureMetric" type="simple_metric_SecondaryStructureMetric_type"/>
  <xs:element name="SelectedResidueCountMetric" type="simple_metric_SelectedResidueCountMetric_type"/>
  <xs:element name="SelectedResiduesMetric" type="simple_metric_SelectedResiduesMetric_type"/>
  <xs:element name="SelectedResiduesPyMOLMetric" type="simple_metric_SelectedResiduesPyMOLMetric_type"/>
  <xs:element name="SequenceMetric" type="simple_metric_SequenceMetric_type"/>
  <xs:element name="SequenceRecoveryMetric" type="simple_metric_SequenceRecoveryMetric_type"/>
  <xs:element name="SequenceSimilarityMetric" type="simple_metric_SequenceSimilarityMetric_type"/>
  <xs:element name="TestCompositeRealMetric" type="simple_metric_TestCompositeRealMetric_type"/>
  <xs:element name="TestCompositeStringMetric" type="simple_metric_TestCompositeStringMetric_type"/>
  <xs:element name="TestPerResidueRealMetric" type="simple_metric_TestPerResidueRealMetric_type"/>
  <xs:element name="TestPerResidueStringMetric" type="simple_metric_TestPerResidueStringMetric_type"/>
  <xs:element name="TestRealMetric" type="simple_metric_TestRealMetric_type"/>
  <xs:element name="TestStringMetric" type="simple_metric_TestStringMetric_type"/>
  <xs:element name="TimingProfileMetric" type="simple_metric_TimingProfileMetric_type"/>
  <xs:element name="TotalEnergyMetric" type="simple_metric_TotalEnergyMetric_type"/>
  <xs:element name="WaterMediatedHbondMetric" type="simple_metric_WaterMediatedHbondMetric_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="simple_metric_CalculatorMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculate a value based on an equation and the results of other simple metrics.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="VAR">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Unique name to identify value for use in equation.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Specifiy a constant value.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="metric" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Evaluate given filter at calculator evaluation time.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="reported" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Retrieve reported value. See 'report_at_end=false' documentation in ParsedProtocol.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Var">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Unique name to identify value for use in equation.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Specifiy a constant value.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="metric" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Evaluate given filter at calculator evaluation time.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="reported" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Retrieve reported value. See 'report_at_end=false' documentation in ParsedProtocol.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="var">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Unique name to identify value for use in equation.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Specifiy a constant value.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="metric" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Evaluate given filter at calculator evaluation time.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="reported" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Retrieve reported value. See 'report_at_end=false' documentation in ParsedProtocol.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:group ref="simple_metric"/>
 </xs:choice>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="equation" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Equation to evaluate filter value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_CompositeEnergyMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmai.com)
A metric to report/calculate all of the energies of a scorefunction that are not 0 or the delta of each energy between another input pose or the set native.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the native if present on the cmd-line.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a residue selector is present, we calculate each energy component for only these residues. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_DihedralDistanceMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Calculate DihedralDistance metric.
  This is the normalized metric in degrees
  Works on protein and carbohydrate backbones

 Metric described in:
   North B, Lehmann A, Dunbrack RL. A new clustering of antibody CDR loop conformations. J Mol Biol 2011;406:228-256.

 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_omega" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do we include protein omega in calculations?  Default false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the native if present on the cmd-line.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Calculate the RMSD for these residues for both reference and main pose. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector_ref" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector for the reference pose (input native or passed reference pose. ).  Residues selected must be same number of residues selected for the main selector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_ElectrostaticComplementarityMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculates the McCoy, Chandana, Colman Electrostatic complementarity using APBS.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_radius" type="real" default="20">
  <xs:annotation><xs:documentation xml:lang="en">
   How far away from the interface should atoms be ignored. -1 to keep everything. (15 Shows variation of about 0.001. 10 ~ 0.01)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_trim_radius" type="real" default="1.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Value for the SC filter. How far from the sasa surface should the molecular dots be trimmed? The original paper used 0 here.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="partially_solvated" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   If false, then fully solvated. When partially solvated, the other side of the pose is present but has 0 charge. If fully solvated, the other side of the pose is not present and solvent fills its place.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="xs:integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Which jump over which to calculate the interface.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_all_ec" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Do you want to see the sub correlations? (The normally reported values are the averages of interface 1 and 2)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Explicitly set which residues are on each side of the interface using residue_selectors.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Explicitly set which residues are on each side of the interface using residue_selectors.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_HbondMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
   A metric to report the total h-bonds residues from a selection to all [OTHER] residues, or from a set of residues to another set of residues.  If No selection is given, will report ALL vs ALL.

 TIPS:
  Use the SummaryMetric to get total hbonds of a selection or total number of residues having some number of hbonds. . See the WaterMediatedBridgedHBondMetric for water-mediated h-bonds.

  It is recommended to use -beta (-beta_nov16 and -genpot) as your scorefunction for better detection of hbonds.

  By default does not report self-self hbonds (but this is an option).

 AUTHORS:
  Jared Adolf-Bryfogle (jadolfbr@gmail.com)
   Citation: De-Novo Glycan Modeling in Rosetta (drafting)

 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_as_pdb_nums" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If outputting to scorefile use PDB numbering+chain instead of Rosetta (1 - N numbering)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a residue selector is present, we only calculate and output metrics for the subset of residues selected. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional Selector to measure hbonds between residues in each selection, instead of ANY between selector1 and the pose.  If NO selector is given, will calculate hbonds to all [OTHER] residues. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_self" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Set to include self-self hydrogen bonds: Ex: resJ - resJ
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_InteractionEnergyMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A metric for measuring the short and long range interaction energy between residues using two sets of residue selectors. Will use the current energies of the pose, unless force_rescore option is set.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scoretypes_only" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Include only this list of ScoreTypes
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scoretypes_skip" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Always skip these score types
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_rama_prepro_and_proclose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Include rama_prepro energy term AND pro_close? (Which are two-body backbone score terms) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="force_rescore" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we rescore the pose, even if it has an energies object?  This will force a pose copy and rescore and will not be as efficent as having a scored pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying first set of residues. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying second set of residues. Default is TrueResidueSelector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_InteractionGraphSummaryMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A metric for writing out a description of the Rosetta-calculated interaction graph, which can be read in by external annealers or optimizers.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_pose_reconstruction_info" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, then this metric only stores a summary of the interaction graph.  If false (the default), then it stores both the interaction graph summary and full information for reconstructing the pose.  False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_format" type="xs:string" default="standard">
  <xs:annotation><xs:documentation xml:lang="en">
   The output format for the metric.  Current allowed formats are: "standard", "toulbar2",  and "binary",.  The "standard" setting is a minimal list of one- and two-body interaction energies; the "toulbar2" setting produces output that can be read by Toulbar2, a slow but exact branch-and-bound solver.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_PeptideFoldPropensityMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A metric for estimating the propensity of a peptide to fold (PNear value), given the peptide's sequence and structure.  This uses a previously-trained Tensorflow neural network for the estimate.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="peptide_size" type="positive_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   The size, in residues, of the peptide macrocycle for which we will be predicting fold propensity.  This determines which Tensorflow model is loaded.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="model_version" type="positive_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   The version number of the model.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rescore_pose" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, we rescore the pose whenever the metric is calculated.  Slow, since the pose must be copied to be rescored.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If we are rescoring the pose, the scoring function to use.  The default scoring function is used if left blank.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A residue selector specifying which residues constitute the peptide to score. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_PeptideInternalHbondsMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A metric for counting the number of hydrogen bonds that are internal to a cyclic peptide or other residue selection.  Note that this metric does not count intra-residue hydrogen bonds.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="backbone_backbone" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, backbone-backbone hydrogen bonds are counted.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="backbone_sidechain" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, backbone-sidechain hydrogen bonds are counted.  False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sidechain_sidechain" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, sidechain-sidechain hydrogen bonds are counted.  False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclusion_distance" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Hydrogen bonds between residues that are N positions apart in terms of covalent connectivity will not be counted if this is set higher than 0.  Set to 1 by default to exclude hydrogen bonds between neighbouring residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hbond_energy_cutoff" type="real" default="-0.25">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum energy of a hydrogen bond, if that hydrogen bond is to be counted.  Defaults to -0.25
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The scorefunction to use for computing hydrogen bonds.  If not provided, the default scoring function is used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   An optional residue selector that selects the peptide.  If provided, hydrogen bonds within this selection will be counted.  If not, the entire pose will be considered. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_PerResidueClashMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A SimpleMetric that calculates the total number of atom-atom clashes from a residue in a residue selector
 to all other residues defined in a second residue selector using the LJ radius of each atom 
Can use a soft radius, which reduces it by 33% (by default - see dampening_percent option. 
DETAILS: 
  Does NOT calculate INTRA-RESIDUE clashes!

 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_as_pdb_nums" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If outputting to scorefile use PDB numbering+chain instead of Rosetta (1 - N numbering)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a residue selector is present, we only calculate and output metrics for the subset of residues selected. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_hydrogens" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use Hydrogens OR calculate only heavy atom clashes
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="soft_clash" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   IF TRUE, soften the clashing by a percent (dampening_percent).  When we calculate atom-atom distances using LJ distances, clash if distance less_than (atomI_LJ + atomJ_LJ)*(1 - dampening_percent)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dampening_percent" type="real" default=".33">
  <xs:annotation><xs:documentation xml:lang="en">
   If we use soft_clash, dampen by this percent.  Number is between 0 and .99. IE- When we calculate atom-atom distances using LJ distances, clash if distance less_then (atomI_LJ + atomJ_LJ)*(1 - dampening_percent)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue selector to use for calculating clashes TO for each residue of the primary selector.  Default is to calculate clashes of each residue to ALL OTHER residues (including those in the primary selector). The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_PerResidueDensityFitMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Authors: Jared Adolf-Bryfogle (jadolfbr@gmail.com) and Frank Dimaio (fdimaio@gmail.com)
Calculate either a correlation (match_res true) or zscore related to the fit to the density.  Uses internal density tools to do so.  Numbers and cutoffs match well with Coot's density fit analysis tool. Zscore uses weighted sum of density, density-compared-to-neighbors, rama (where applicable) and cart_bonded to compute)  Correlation is same values used to calculate density scores.  Zscore reference is here: eLife 2016, Dimaio
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_as_pdb_nums" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If outputting to scorefile use PDB numbering+chain instead of Rosetta (1 - N numbering)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a residue selector is present, we only calculate and output metrics for the subset of residues selected. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sliding_window_size" type="positive_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   Sliding window size for density calculation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="match_res" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use density correlation instead of a zscore to fit to density
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mixed_sliding_window" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a window size of 3 for protein and 1 for glycans.  May skew results.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_selector_as_zscore_mask" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the selector as true mask to calculate the Zscore.  Otherwise, use it just as a selection for computation.  Default true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="scoretypes">
 <xs:restriction base="xs:string">
  <xs:enumeration value="fa_atr"/>
  <xs:enumeration value="fa_rep"/>
  <xs:enumeration value="fa_sol"/>
  <xs:enumeration value="fa_intra_atr"/>
  <xs:enumeration value="fa_intra_rep"/>
  <xs:enumeration value="fa_intra_sol"/>
  <xs:enumeration value="fa_intra_atr_xover4"/>
  <xs:enumeration value="fa_intra_rep_xover4"/>
  <xs:enumeration value="fa_intra_sol_xover4"/>
  <xs:enumeration value="fa_intra_atr_nonprotein"/>
  <xs:enumeration value="fa_intra_rep_nonprotein"/>
  <xs:enumeration value="fa_intra_sol_nonprotein"/>
  <xs:enumeration value="fa_intra_RNA_base_phos_atr"/>
  <xs:enumeration value="fa_intra_RNA_base_phos_rep"/>
  <xs:enumeration value="fa_intra_RNA_base_phos_sol"/>
  <xs:enumeration value="fa_atr_dummy"/>
  <xs:enumeration value="fa_rep_dummy"/>
  <xs:enumeration value="fa_sol_dummy"/>
  <xs:enumeration value="fa_vdw_tinker"/>
  <xs:enumeration value="lk_hack"/>
  <xs:enumeration value="lk_ball"/>
  <xs:enumeration value="lk_ball_wtd"/>
  <xs:enumeration value="lk_ball_iso"/>
  <xs:enumeration value="lk_ball_bridge"/>
  <xs:enumeration value="lk_ball_bridge_uncpl"/>
  <xs:enumeration value="coarse_fa_atr"/>
  <xs:enumeration value="coarse_fa_rep"/>
  <xs:enumeration value="coarse_fa_sol"/>
  <xs:enumeration value="coarse_beadlj"/>
  <xs:enumeration value="mm_lj_intra_rep"/>
  <xs:enumeration value="mm_lj_intra_atr"/>
  <xs:enumeration value="mm_lj_inter_rep"/>
  <xs:enumeration value="mm_lj_inter_atr"/>
  <xs:enumeration value="mm_twist"/>
  <xs:enumeration value="mm_bend"/>
  <xs:enumeration value="mm_stretch"/>
  <xs:enumeration value="lk_costheta"/>
  <xs:enumeration value="lk_polar"/>
  <xs:enumeration value="lk_nonpolar"/>
  <xs:enumeration value="lk_polar_intra_RNA"/>
  <xs:enumeration value="lk_nonpolar_intra_RNA"/>
  <xs:enumeration value="fa_elec"/>
  <xs:enumeration value="fa_elec_bb_bb"/>
  <xs:enumeration value="fa_elec_bb_sc"/>
  <xs:enumeration value="fa_elec_sc_sc"/>
  <xs:enumeration value="fa_intra_elec"/>
  <xs:enumeration value="h2o_hbond"/>
  <xs:enumeration value="dna_dr"/>
  <xs:enumeration value="dna_bp"/>
  <xs:enumeration value="dna_bs"/>
  <xs:enumeration value="dna_ref"/>
  <xs:enumeration value="peptide_bond"/>
  <xs:enumeration value="pcs"/>
  <xs:enumeration value="pcsTs1"/>
  <xs:enumeration value="pcsTs2"/>
  <xs:enumeration value="pcsTs3"/>
  <xs:enumeration value="pcsTs4"/>
  <xs:enumeration value="pcs2"/>
  <xs:enumeration value="fastsaxs"/>
  <xs:enumeration value="saxs_score"/>
  <xs:enumeration value="saxs_cen_score"/>
  <xs:enumeration value="saxs_fa_score"/>
  <xs:enumeration value="pddf_score"/>
  <xs:enumeration value="fiberdiffraction"/>
  <xs:enumeration value="fiberdiffractiondens"/>
  <xs:enumeration value="epr_deer_score"/>
  <xs:enumeration value="fa_mbenv"/>
  <xs:enumeration value="fa_mbsolv"/>
  <xs:enumeration value="fa_elec_rna_phos_phos"/>
  <xs:enumeration value="fa_elec_rna_phos_sugr"/>
  <xs:enumeration value="fa_elec_rna_phos_base"/>
  <xs:enumeration value="fa_elec_rna_sugr_sugr"/>
  <xs:enumeration value="fa_elec_rna_sugr_base"/>
  <xs:enumeration value="fa_elec_rna_base_base"/>
  <xs:enumeration value="fa_elec_rna_phos_phos_fast"/>
  <xs:enumeration value="fa_elec_rna_phos_sugr_fast"/>
  <xs:enumeration value="fa_elec_rna_phos_base_fast"/>
  <xs:enumeration value="fa_elec_rna_sugr_sugr_fast"/>
  <xs:enumeration value="fa_elec_rna_sugr_base_fast"/>
  <xs:enumeration value="fa_elec_rna_base_base_fast"/>
  <xs:enumeration value="fa_elec_aro_aro"/>
  <xs:enumeration value="fa_elec_aro_all"/>
  <xs:enumeration value="hack_aro"/>
  <xs:enumeration value="rna_fa_atr_base"/>
  <xs:enumeration value="rna_fa_rep_base"/>
  <xs:enumeration value="rna_data_backbone"/>
  <xs:enumeration value="ch_bond"/>
  <xs:enumeration value="ch_bond_bb_bb"/>
  <xs:enumeration value="ch_bond_sc_sc"/>
  <xs:enumeration value="ch_bond_bb_sc"/>
  <xs:enumeration value="pro_close"/>
  <xs:enumeration value="rama2b"/>
  <xs:enumeration value="vdw"/>
  <xs:enumeration value="cenpack"/>
  <xs:enumeration value="cenpack_smooth"/>
  <xs:enumeration value="cen_hb"/>
  <xs:enumeration value="hybrid_vdw"/>
  <xs:enumeration value="gauss"/>
  <xs:enumeration value="rna_vdw"/>
  <xs:enumeration value="rnp_vdw"/>
  <xs:enumeration value="rna_base_backbone"/>
  <xs:enumeration value="rna_backbone_backbone"/>
  <xs:enumeration value="rna_repulsive"/>
  <xs:enumeration value="rna_base_pair_pairwise"/>
  <xs:enumeration value="rna_base_axis_pairwise"/>
  <xs:enumeration value="rna_base_stagger_pairwise"/>
  <xs:enumeration value="rna_base_stack_pairwise"/>
  <xs:enumeration value="rna_base_stack_axis_pairwise"/>
  <xs:enumeration value="rna_data_base"/>
  <xs:enumeration value="rna_base_pair"/>
  <xs:enumeration value="rna_base_axis"/>
  <xs:enumeration value="rna_base_stagger"/>
  <xs:enumeration value="rna_base_stack"/>
  <xs:enumeration value="rna_base_stack_axis"/>
  <xs:enumeration value="rnp_base_pair"/>
  <xs:enumeration value="rnp_stack"/>
  <xs:enumeration value="rnp_stack_xy"/>
  <xs:enumeration value="rnp_pair"/>
  <xs:enumeration value="rnp_pair_dist"/>
  <xs:enumeration value="rnp_aa_to_rna_backbone"/>
  <xs:enumeration value="rna_mg_point"/>
  <xs:enumeration value="rna_mg_point_indirect"/>
  <xs:enumeration value="mg"/>
  <xs:enumeration value="mg_lig"/>
  <xs:enumeration value="mg_sol"/>
  <xs:enumeration value="mg_ref"/>
  <xs:enumeration value="hoh_ref"/>
  <xs:enumeration value="rna_torsion"/>
  <xs:enumeration value="rna_torsion_sc"/>
  <xs:enumeration value="rna_suite"/>
  <xs:enumeration value="rna_jr_suite"/>
  <xs:enumeration value="suiteness_bonus"/>
  <xs:enumeration value="tna_suite"/>
  <xs:enumeration value="rna_sugar_close"/>
  <xs:enumeration value="fa_stack"/>
  <xs:enumeration value="fa_stack_lower"/>
  <xs:enumeration value="fa_stack_upper"/>
  <xs:enumeration value="fa_stack_aro"/>
  <xs:enumeration value="fa_stack_ext"/>
  <xs:enumeration value="fa_stack_sol"/>
  <xs:enumeration value="fa_stack_lr"/>
  <xs:enumeration value="fa_stack_rna_protein"/>
  <xs:enumeration value="fa_stack_rna_protein_aro"/>
  <xs:enumeration value="ss_contact_worst"/>
  <xs:enumeration value="stack_elec"/>
  <xs:enumeration value="stack_elec_base_base"/>
  <xs:enumeration value="stack_elec_base_bb"/>
  <xs:enumeration value="alignment"/>
  <xs:enumeration value="dna_bb_torsion"/>
  <xs:enumeration value="dna_sugar_close"/>
  <xs:enumeration value="dna_base_distance"/>
  <xs:enumeration value="geom_sol_fast"/>
  <xs:enumeration value="geom_sol_fast_intra_RNA"/>
  <xs:enumeration value="fa_cust_pair_dist"/>
  <xs:enumeration value="custom_atom_pair"/>
  <xs:enumeration value="orbitals_hpol_bb"/>
  <xs:enumeration value="pci_cation_pi"/>
  <xs:enumeration value="pci_pi_pi"/>
  <xs:enumeration value="pci_salt_bridge"/>
  <xs:enumeration value="pci_hbond"/>
  <xs:enumeration value="arg_cation_pi"/>
  <xs:enumeration value="python"/>
  <xs:enumeration value="fa_pair"/>
  <xs:enumeration value="fa_pair_aro_aro"/>
  <xs:enumeration value="fa_pair_aro_pol"/>
  <xs:enumeration value="fa_pair_pol_pol"/>
  <xs:enumeration value="hbond_sr_bb"/>
  <xs:enumeration value="hbond_lr_bb"/>
  <xs:enumeration value="hbond_bb_sc"/>
  <xs:enumeration value="hbond_sr_bb_sc"/>
  <xs:enumeration value="hbond_lr_bb_sc"/>
  <xs:enumeration value="hbond_sc"/>
  <xs:enumeration value="hbond_intra"/>
  <xs:enumeration value="hbond_wat"/>
  <xs:enumeration value="wat_entropy"/>
  <xs:enumeration value="hbond"/>
  <xs:enumeration value="npd_hbond_sr_bb"/>
  <xs:enumeration value="npd_hbond_lr_bb"/>
  <xs:enumeration value="npd_hbond_bb_sc"/>
  <xs:enumeration value="npd_hbond_sr_bb_sc"/>
  <xs:enumeration value="npd_hbond_lr_bb_sc"/>
  <xs:enumeration value="npd_hbond_sc"/>
  <xs:enumeration value="npd_hbond_intra"/>
  <xs:enumeration value="npd_hbond"/>
  <xs:enumeration value="fa_grpelec"/>
  <xs:enumeration value="interface_dd_pair"/>
  <xs:enumeration value="geom_sol"/>
  <xs:enumeration value="geom_sol_intra_RNA"/>
  <xs:enumeration value="occ_sol_fitted"/>
  <xs:enumeration value="occ_sol_fitted_onebody"/>
  <xs:enumeration value="occ_sol_exact"/>
  <xs:enumeration value="cen_rot_pair"/>
  <xs:enumeration value="cen_rot_pair_ang"/>
  <xs:enumeration value="cen_rot_pair_dih"/>
  <xs:enumeration value="pair"/>
  <xs:enumeration value="cen_pair_smooth"/>
  <xs:enumeration value="Mpair"/>
  <xs:enumeration value="mp_pair"/>
  <xs:enumeration value="fa_mpsolv"/>
  <xs:enumeration value="suck"/>
  <xs:enumeration value="rna_rg"/>
  <xs:enumeration value="rna_motif"/>
  <xs:enumeration value="facts_elec"/>
  <xs:enumeration value="facts_solv"/>
  <xs:enumeration value="facts_sasa"/>
  <xs:enumeration value="motif_dock"/>
  <xs:enumeration value="pointwater"/>
  <xs:enumeration value="goap"/>
  <xs:enumeration value="goap_dist"/>
  <xs:enumeration value="goap_angle"/>
  <xs:enumeration value="approximate_buried_unsat_penalty"/>
  <xs:enumeration value="interchain_pair"/>
  <xs:enumeration value="interchain_vdw"/>
  <xs:enumeration value="gb_elec"/>
  <xs:enumeration value="multipole_elec"/>
  <xs:enumeration value="fa_sasa"/>
  <xs:enumeration value="dslf_ss_dst"/>
  <xs:enumeration value="dslf_cs_ang"/>
  <xs:enumeration value="dslf_ss_dih"/>
  <xs:enumeration value="dslf_ca_dih"/>
  <xs:enumeration value="dslf_cbs_ds"/>
  <xs:enumeration value="dslf_fa13"/>
  <xs:enumeration value="dslfc_cen_dst"/>
  <xs:enumeration value="dslfc_cb_dst"/>
  <xs:enumeration value="dslfc_ang"/>
  <xs:enumeration value="dslfc_cb_dih"/>
  <xs:enumeration value="dslfc_bb_dih"/>
  <xs:enumeration value="dslfc_rot"/>
  <xs:enumeration value="dslfc_trans"/>
  <xs:enumeration value="dslfc_RT"/>
  <xs:enumeration value="atom_pair_constraint"/>
  <xs:enumeration value="base_pair_constraint"/>
  <xs:enumeration value="coarse_chainbreak_constraint"/>
  <xs:enumeration value="constant_constraint"/>
  <xs:enumeration value="coordinate_constraint"/>
  <xs:enumeration value="angle_constraint"/>
  <xs:enumeration value="dihedral_constraint"/>
  <xs:enumeration value="big_bin_constraint"/>
  <xs:enumeration value="dunbrack_constraint"/>
  <xs:enumeration value="site_constraint"/>
  <xs:enumeration value="metalhash_constraint"/>
  <xs:enumeration value="metalbinding_constraint"/>
  <xs:enumeration value="rna_stub_coord_hack"/>
  <xs:enumeration value="bond_geometry"/>
  <xs:enumeration value="rna_bond_geometry"/>
  <xs:enumeration value="Hpol_bond_geometry"/>
  <xs:enumeration value="rama"/>
  <xs:enumeration value="omega"/>
  <xs:enumeration value="fa_dun"/>
  <xs:enumeration value="fa_dun_dev"/>
  <xs:enumeration value="fa_dun_rot"/>
  <xs:enumeration value="fa_dun_semi"/>
  <xs:enumeration value="cen_rot_dun"/>
  <xs:enumeration value="dna_chi"/>
  <xs:enumeration value="p_aa_pp"/>
  <xs:enumeration value="p_aa_ss"/>
  <xs:enumeration value="yhh_planarity"/>
  <xs:enumeration value="hxl_tors"/>
  <xs:enumeration value="h2o_intra"/>
  <xs:enumeration value="ref"/>
  <xs:enumeration value="ref_nc"/>
  <xs:enumeration value="seqdep_ref"/>
  <xs:enumeration value="nmer_ref"/>
  <xs:enumeration value="nmer_pssm"/>
  <xs:enumeration value="nmer_svm"/>
  <xs:enumeration value="envsmooth"/>
  <xs:enumeration value="e_pH"/>
  <xs:enumeration value="rna_bulge"/>
  <xs:enumeration value="dna_dihedral_bb"/>
  <xs:enumeration value="dna_dihedral_chi"/>
  <xs:enumeration value="dna_dihedral_sugar"/>
  <xs:enumeration value="sugar_bb"/>
  <xs:enumeration value="free_suite"/>
  <xs:enumeration value="free_2HOprime"/>
  <xs:enumeration value="free_side_chain"/>
  <xs:enumeration value="free_base"/>
  <xs:enumeration value="free_res"/>
  <xs:enumeration value="free_dof"/>
  <xs:enumeration value="intermol"/>
  <xs:enumeration value="other_pose"/>
  <xs:enumeration value="special_rot"/>
  <xs:enumeration value="PB_elec"/>
  <xs:enumeration value="cen_env_smooth"/>
  <xs:enumeration value="cbeta_smooth"/>
  <xs:enumeration value="cen_rot_env"/>
  <xs:enumeration value="cen_rot_cbeta"/>
  <xs:enumeration value="env"/>
  <xs:enumeration value="cbeta"/>
  <xs:enumeration value="DFIRE"/>
  <xs:enumeration value="Menv"/>
  <xs:enumeration value="Mcbeta"/>
  <xs:enumeration value="Menv_non_helix"/>
  <xs:enumeration value="Menv_termini"/>
  <xs:enumeration value="Menv_tm_proj"/>
  <xs:enumeration value="Mlipo"/>
  <xs:enumeration value="rg"/>
  <xs:enumeration value="rg_local"/>
  <xs:enumeration value="co"/>
  <xs:enumeration value="hs_pair"/>
  <xs:enumeration value="ss_pair"/>
  <xs:enumeration value="rsigma"/>
  <xs:enumeration value="sheet"/>
  <xs:enumeration value="burial_v2"/>
  <xs:enumeration value="burial"/>
  <xs:enumeration value="abego"/>
  <xs:enumeration value="covalent_labeling"/>
  <xs:enumeration value="covalent_labeling_fa"/>
  <xs:enumeration value="hrf_ms_labeling"/>
  <xs:enumeration value="hrf_dynamics"/>
  <xs:enumeration value="rnp_env"/>
  <xs:enumeration value="loop_close"/>
  <xs:enumeration value="missing_res"/>
  <xs:enumeration value="mp_env"/>
  <xs:enumeration value="mp_cbeta"/>
  <xs:enumeration value="mp_lipo"/>
  <xs:enumeration value="mp_termini"/>
  <xs:enumeration value="mp_nonhelix"/>
  <xs:enumeration value="mp_tmproj"/>
  <xs:enumeration value="fa_mpenv"/>
  <xs:enumeration value="fa_mpenv_smooth"/>
  <xs:enumeration value="fa_water_to_bilayer"/>
  <xs:enumeration value="mp_res_lipo"/>
  <xs:enumeration value="span_ins"/>
  <xs:enumeration value="mp_span_ang"/>
  <xs:enumeration value="mp_helicality"/>
  <xs:enumeration value="natbias_ss"/>
  <xs:enumeration value="natbias_hs"/>
  <xs:enumeration value="natbias_hh"/>
  <xs:enumeration value="natbias_stwist"/>
  <xs:enumeration value="aa_cmp"/>
  <xs:enumeration value="dock_ens_conf"/>
  <xs:enumeration value="csa"/>
  <xs:enumeration value="dc"/>
  <xs:enumeration value="rdc"/>
  <xs:enumeration value="rdc_segments"/>
  <xs:enumeration value="rdc_rohl"/>
  <xs:enumeration value="nmr_pcs"/>
  <xs:enumeration value="nmr_rdc"/>
  <xs:enumeration value="nmr_pre"/>
  <xs:enumeration value="cen_pair_motifs"/>
  <xs:enumeration value="cen_pair_motif_degree"/>
  <xs:enumeration value="holes"/>
  <xs:enumeration value="holes_decoy"/>
  <xs:enumeration value="holes_resl"/>
  <xs:enumeration value="holes_min"/>
  <xs:enumeration value="holes_min_mean"/>
  <xs:enumeration value="rna_chem_shift"/>
  <xs:enumeration value="rna_chem_map"/>
  <xs:enumeration value="rna_chem_map_lores"/>
  <xs:enumeration value="rna_partition"/>
  <xs:enumeration value="dab_sasa"/>
  <xs:enumeration value="dab_sev"/>
  <xs:enumeration value="sa"/>
  <xs:enumeration value="d2h_sa"/>
  <xs:enumeration value="ProQM"/>
  <xs:enumeration value="ProQ"/>
  <xs:enumeration value="interchain_env"/>
  <xs:enumeration value="interchain_contact"/>
  <xs:enumeration value="chainbreak"/>
  <xs:enumeration value="linear_chainbreak"/>
  <xs:enumeration value="overlap_chainbreak"/>
  <xs:enumeration value="distance_chainbreak"/>
  <xs:enumeration value="dof_constraint"/>
  <xs:enumeration value="branch_conn"/>
  <xs:enumeration value="linear_branch_conn"/>
  <xs:enumeration value="rama_prepro"/>
  <xs:enumeration value="paa_abego3"/>
  <xs:enumeration value="cart_bonded"/>
  <xs:enumeration value="cart_bonded_angle"/>
  <xs:enumeration value="cart_bonded_length"/>
  <xs:enumeration value="cart_bonded_ring"/>
  <xs:enumeration value="cart_bonded_torsion"/>
  <xs:enumeration value="cart_bonded_proper"/>
  <xs:enumeration value="cart_bonded_improper"/>
  <xs:enumeration value="gen_bonded"/>
  <xs:enumeration value="gen_bonded_bond"/>
  <xs:enumeration value="gen_bonded_angle"/>
  <xs:enumeration value="gen_bonded_torsion"/>
  <xs:enumeration value="gen_bonded_improper"/>
  <xs:enumeration value="neigh_vect"/>
  <xs:enumeration value="neigh_count"/>
  <xs:enumeration value="neigh_vect_raw"/>
  <xs:enumeration value="symE_bonus"/>
  <xs:enumeration value="sym_lig"/>
  <xs:enumeration value="mhc_epitope"/>
  <xs:enumeration value="pack_stat"/>
  <xs:enumeration value="rms_energy"/>
  <xs:enumeration value="res_type_constraint"/>
  <xs:enumeration value="res_type_linking_constraint"/>
  <xs:enumeration value="pocket_constraint"/>
  <xs:enumeration value="backbone_stub_constraint"/>
  <xs:enumeration value="backbone_stub_linear_constraint"/>
  <xs:enumeration value="surface"/>
  <xs:enumeration value="p_aa"/>
  <xs:enumeration value="unfolded"/>
  <xs:enumeration value="split_unfolded_two_body"/>
  <xs:enumeration value="fa_atr_ref"/>
  <xs:enumeration value="fa_rep_ref"/>
  <xs:enumeration value="fa_sol_ref"/>
  <xs:enumeration value="fa_elec_ref"/>
  <xs:enumeration value="hbond_ref"/>
  <xs:enumeration value="dslf_fa13_ref"/>
  <xs:enumeration value="fa_intra_atr_ref"/>
  <xs:enumeration value="fa_intra_rep_ref"/>
  <xs:enumeration value="fa_intra_sol_ref"/>
  <xs:enumeration value="pro_close_ref"/>
  <xs:enumeration value="fa_dun_ref"/>
  <xs:enumeration value="fa_dun_dev_ref"/>
  <xs:enumeration value="fa_dun_rot_ref"/>
  <xs:enumeration value="fa_dun_semi_ref"/>
  <xs:enumeration value="rama_ref"/>
  <xs:enumeration value="p_aa_pp_ref"/>
  <xs:enumeration value="omega_ref"/>
  <xs:enumeration value="mm_lj_intra_rep_ref"/>
  <xs:enumeration value="mm_lj_intra_atr_ref"/>
  <xs:enumeration value="mm_twist_ref"/>
  <xs:enumeration value="elec_dens_fast"/>
  <xs:enumeration value="elec_dens_window"/>
  <xs:enumeration value="elec_dens_whole_structure_ca"/>
  <xs:enumeration value="elec_dens_whole_structure_allatom"/>
  <xs:enumeration value="elec_dens_atomwise"/>
  <xs:enumeration value="grid_vdw"/>
  <xs:enumeration value="xtal_ml"/>
  <xs:enumeration value="xtal_rwork"/>
  <xs:enumeration value="xtal_rfree"/>
  <xs:enumeration value="hpatch"/>
  <xs:enumeration value="Menv_smooth"/>
  <xs:enumeration value="wat_desolv"/>
  <xs:enumeration value="ring_close"/>
  <xs:enumeration value="aa_repeat"/>
  <xs:enumeration value="aa_composition"/>
  <xs:enumeration value="aspartimide_penalty"/>
  <xs:enumeration value="hbnet"/>
  <xs:enumeration value="buried_unsatisfied_penalty"/>
  <xs:enumeration value="netcharge"/>
  <xs:enumeration value="voids_penalty"/>
  <xs:enumeration value="sap_constraint"/>
  <xs:enumeration value="dna_env"/>
  <xs:enumeration value="dna_pair"/>
  <xs:enumeration value="dump_trajectory"/>
  <xs:enumeration value="sidechain_neighbors"/>
  <xs:enumeration value="target_clash"/>
  <xs:enumeration value="membrane_span_constraint"/>
  <xs:enumeration value="membrane_span_term_z_constraint"/>
  <xs:enumeration value="aromatic_restraint"/>
  <xs:enumeration value="total_score"/>
  <xs:enumeration value="dummy_score_type"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="simple_metric_PerResidueEnergyMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A per-residue metric that will calculate/output per residue total energies or a specific score component. WEIGHTED.Correctly decomposes energies to per-residue.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_as_pdb_nums" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If outputting to scorefile use PDB numbering+chain instead of Rosetta (1 - N numbering)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a residue selector is present, we only calculate and output metrics for the subset of residues selected. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the native if present on the cmd-line.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scoretype" type="scoretypes" default="total_score">
  <xs:annotation><xs:documentation xml:lang="en">
   ScoreType to calculate.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_PerResidueGlycanLayerMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A metric for getting the layer of glycan residues.  The layer is defined as the residue distance to the start of the glycan tree
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_as_pdb_nums" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If outputting to scorefile use PDB numbering+chain instead of Rosetta (1 - N numbering)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a residue selector is present, we only calculate and output metrics for the subset of residues selected. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="rmsd_types">
 <xs:restriction base="xs:string">
  <xs:enumeration value="rmsd_all"/>
  <xs:enumeration value="rmsd_all_heavy"/>
  <xs:enumeration value="rmsd_protein_bb_ca"/>
  <xs:enumeration value="rmsd_protein_bb_heavy"/>
  <xs:enumeration value="rmsd_protein_bb_heavy_including_O"/>
  <xs:enumeration value="rmsd_sc"/>
  <xs:enumeration value="rmsd_sc_heavy"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="simple_metric_PerResidueRMSDMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
	This is the RMSD for each residue between the input and the set comparison pose.
  If native is set on the cmd-line and use_native is true, we will use that.
  Default is to calculate all_heavy atoms - but this can be set
.
  Make sure that reference pose and set pose are the same length .   We match all corresponding atoms for each residue to match.   By default we do not fail and are robust - only matching what we can for each residue.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_as_pdb_nums" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If outputting to scorefile use PDB numbering+chain instead of Rosetta (1 - N numbering)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a residue selector is present, we only calculate and output metrics for the subset of residues selected. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector_ref" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional Selector for the reference pose (input native or passed reference pose. ).  Residues selected must be same number of residues selected for the main selector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector_super" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional selector for superposition. If not given will use residue_selector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector_super_ref" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional selector for superposition of reference pose. Residues selected must be same number of residues selected for the main selector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="robust" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Set whether we are robust to atom mismatches for selected residues.  By default we only match atoms that are corresponding. (True).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the native if present on the cmd-line.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="super" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Run a superposition on the residues in the residue_selector (or all) before RMSD calculation and the atoms slected for RMSD
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd_type" type="rmsd_types">
  <xs:annotation><xs:documentation xml:lang="en">
   Type of calculation.  Current choices are: 
[rmsd_all, rmsd_all_heavy, rmsd_protein_bb_ca, rmsd_protein_bb_heavy, rmsd_protein_bb_heavy_including_O, rmsd_sc, rmsd_sc_heavy]
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="desymmetrize_selector" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we desymmetrize the residue selector if we have a symmetric pose?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_PerResidueSapScoreMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A metric to report the SapScore of a specific region of a pose. Also see the AddSapConstraintMover. See this paper for more info on sap: Developability index: a rapid in silico tool for the screening of antibody aggregation propensity. Lauer, et. al. J Pharm Sci 2012
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_as_pdb_nums" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If outputting to scorefile use PDB numbering+chain instead of Rosetta (1 - N numbering)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a residue selector is present, we only calculate and output metrics for the subset of residues selected. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_selector" type="xs:string" default="true_selector">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residues should be included in the sap score? Optional, will default to full-pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sap_calculate_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residues should be present during the sap calculation? Only residues in the score_selector will have their values reported, but residues in this selector will still be assigned atom-saps which can affect the residues in score_selector. Optional, will default to score_selector.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sasa_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residues should be present during the sasa calculation? Optional, will default to sap_calculate_selector.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_PerResidueSasaMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A metric for measuring per-residue SASA and adding it to the resulting score file.  Virtual atoms are skipped completely. Modified 19 Aug. 2019 by Vikram K. Mulligan to add options for polar or hydrophobic SASA.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_as_pdb_nums" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If outputting to scorefile use PDB numbering+chain instead of Rosetta (1 - N numbering)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a residue selector is present, we only calculate and output metrics for the subset of residues selected. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mode" type="xs:string" default="all_sasa">
  <xs:annotation><xs:documentation xml:lang="en">
   Sets the behaviour of the calculator (the subset of the SASA that is counted).  Options include: all_sasa, polar_sasa, hydrophobic_sasa.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_PolarGroupBurialPyMolStringMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A string metric that generates a string of PyMol commands to colour a structure's polar groups based on burial.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, this metric outputs to tracer as well as to the pose.  False by default
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   A scorefunction, defined previously in the RosettaScripts XML, which will be used to extract the buried_unsaturated_penalty's definition of burial.  Required option.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_ProtocolSettingsMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
This Metric reports options that have been set in the command line and splits script_vars.  Each option name is the type and the setting is the value in the map.  This is primarily aimed at benchmarking and record-keeping for large-scale rosetta runs or experiments.
  It works with both the global and local OptionsCollection to enable its use in JD3.  
It is analogous to the ProtocolFeatures reporter, with more options for xml-based variables.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="base_name_only" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use only the base option name instead of the whole path
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="get_user_options" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Report all set cmd-line options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="get_script_vars" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Split script_vars and report
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="limit_to_options" type="string_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Limit reporting to these options (comma-separated list).  Can be user-set or script_vars, but works with the get_user_options and get_script_vars options.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_corrections" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Skip ScoreFunction Corrections, which are set in-code at the beginning of a run. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="job_tag" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Add a tag for this particular job.  Will be output as opt_job_tag. Used for benchmarking.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_RDKitMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Use RDKit to calculate metric values for a particular ResidueType.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="metric_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The RDKit metric to calculate.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector to pick which residues to use. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_RMSDMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
	This metric calculates the RMSD between the input and the set comparison pose.
  You may use the cmd-line native if the option use_native is true.
  Default is to calculate all_heavy atoms - but this can be set using the option rmsd_types.

   We match all corresponding atoms for each residue to match.   By default we do not fail and are robust to length mismatches - only matching what we can for each residue.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Calculate the RMSD for these residues for both reference and main pose. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector_ref" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional Selector for the reference pose (input native or passed reference pose. ).  Residues selected must be same number of residues selected for the main selector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector_super" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional selector for superposition. If not given will use residue_selector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector_super_ref" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional selector for superposition of reference pose. Residues selected must be same number of residues selected for the main selector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="robust" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Set whether we are robust to atom mismatches for selected residues.  By default we only match atoms that are corresponding. (True).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the native if present on the cmd-line.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="super" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Run a superposition on the residues in the residue_selector (or all) before RMSD calculation and the atoms selected for RMSD
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd_type" type="rmsd_types">
  <xs:annotation><xs:documentation xml:lang="en">
   Type of calculation.  Current choices are: 
[rmsd_all, rmsd_all_heavy, rmsd_protein_bb_ca, rmsd_protein_bb_heavy, rmsd_protein_bb_heavy_including_O, rmsd_sc, rmsd_sc_heavy]
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="summary_types">
 <xs:restriction base="xs:string">
  <xs:enumeration value="mean"/>
  <xs:enumeration value="n_res_eq"/>
  <xs:enumeration value="n_res_gt"/>
  <xs:enumeration value="n_res_gt_or_eq"/>
  <xs:enumeration value="n_res_lt"/>
  <xs:enumeration value="n_res_lt_or_eq"/>
  <xs:enumeration value="n_res_ne"/>
  <xs:enumeration value="sum"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="simple_metric_ResidueSummaryMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A SimpleMetric that takes a PerResidueRealMetric and calculates different summaries of the overall data.
  This metric can calculate means, totals, or the number of residues (n_res) matching certain criteria. 
  Useful for summarizing metrics or using more complex functionality in the SimpleMetricFilter

  Be sure to set a custom_type to label the summary type in which you are calculating!.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon" type="real" default=".0001">
  <xs:annotation><xs:documentation xml:lang="en">
   Significant digits used for equal operators

 IE:
  The absolute value of the difference between two numbers, below which they will be considered to be equal.
  Used when comparing numbers if action = n_res_eq or n_res_ne.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="metric" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The PerResidueRealMetric that we will summarize 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="action" type="summary_types" default="mean">
  <xs:annotation><xs:documentation xml:lang="en">
   Summary type that this metric should calculate.  Current choices are:
[mean, n_res_eq, n_res_gt, n_res_gt_or_eq, n_res_lt, n_res_lt_or_eq, n_res_ne, sum]
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="action_value" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Number to use for any summary metrics that calculate N residues based on a value. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_cached_data" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use any data stored in the datacache that matches the set metrics name (and any prefix/suffix.)  Data is stored during a SimpleMetric's apply function, which is called during RunSimpleMetrics
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Any prefix used during apply (RunSimpleMetrics), that we will match on if use_cache is true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_suffix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Any suffix used during apply (RunSimpleMetrics), that we will match on if use_cache is true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fail_on_missing_cache" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If use_cached_data is True and cache is not found, should we fail?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_SapScoreMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A metric to report the SapScore of a specific region of a pose. Also see the AddSapConstraintMover. See this paper for more info on sap: Developability index: a rapid in silico tool for the screening of antibody aggregation propensity. Lauer, et. al. J Pharm Sci 2012
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_selector" type="xs:string" default="true_selector">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residues should be included in the sap score? Optional, will default to full-pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sap_calculate_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residues should be present during the sap calculation? Only residues in the score_selector will have their values reported, but residues in this selector will still be assigned atom-saps which can affect the residues in score_selector. Optional, will default to score_selector.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sasa_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residues should be present during the sasa calculation? Optional, will default to sap_calculate_selector.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_SasaMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A metric for measuring SASA and adding it to the resulting score file. Virtual atoms are skipped completely. Modified 19 Aug. 2019 by Vikram K. Mulligan to add options for polar or hydrophobic SASA.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a residue selector is present, we calculate the total sasa of these residues. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sasa_metric_mode" type="xs:string" default="all_sasa">
  <xs:annotation><xs:documentation xml:lang="en">
   Sets the behaviour of the calculator (the subset of the SASA that is counted).  Options include: all_sasa, polar_sasa, hydrophobic_sasa.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_SecondaryStructureMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A metric getting the Secondary Structure string of a pose or subset of residues via residue selector using DSSP
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dssp_reduced" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the reduced DSSP alphabet (3 letters)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a residue selector to output the secondary structure of only residues in selection. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_SelectedResidueCountMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A metric for counting the number of residues in a pose or residue selection, and adding the count to the resulting score file.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A residue selector.  The number of residues selected by this selector will be returned as the count.  If not provided, the number of residues in the pose will be returned. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_SelectedResiduesMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A utility metric that outputs the residue selection in Pose or PDB numbering.  Comma-Separated.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rosetta_numbering" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Set to output in Rosetta numbering instead of PDB numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Required.  Output those residues selected. . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_SelectedResiduesPyMOLMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A utility metric that outputs the residue selection as a PyMOL selection. 
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Required.  Output those residues selected. . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_rosetta_numbering" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the output uses Rosetta numbers.  If false, it uses PDB numbers.  False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="SequenceMetric_output_modes">
 <xs:restriction base="xs:string">
  <xs:enumeration value="oneletter"/>
  <xs:enumeration value="threeletter"/>
  <xs:enumeration value="basename"/>
  <xs:enumeration value="fullname"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="simple_metric_SequenceMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A metric for measuring ... and adding it to the resulting score file.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="three_letter" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   DEPRECATED.  Use of this option will trigger a runtime error.  Use the output_mode option instead.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_mode" type="SequenceMetric_output_modes" default="oneletter">
  <xs:annotation><xs:documentation xml:lang="en">
   The format for the sequence.  Allowed output formats are: oneletter, threeletter, basename, or fullname.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Output the sequence of only the selected residues. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_SequenceRecoveryMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A metric for measuring sequence recovery and adding it to the resulting score file.

There's several options for how the sequence recovery is calculated, depending on what parameters are set.
Each metric is only calculated over the set of residues specified by the residue selector.

* Standard - Used when PSSM isn't set but reference pose is
     This is a strict match/no-match fraction.
* Pass/Fail PSSM - Used when PSSM is set and use_ave_pssm is not (does not use reference pose)
     This is the PSSM recovery metric from DeLuca, Dorr and Meiler 2011 Biochem 50(40):8521
     Residue identities with positive (or zero) values in the PSSM count as a match, those with negative vales as no-match.
* Ave PSSM - Used when PSSM is set, use_ave_pssm is true, and no reference PDB is given
     This value is the average of the values in the PSSM matrix for the residue identities.
* Delta PSSM - Used when PSSM is set, use_ave_pssm is true, and a reference PDB is provided.
     This value is the average of the change in value of the PSSM matrix (mut - ref)

For PSSM metrics, it's assumed that the Pose numbering of both the main and reference structure matches the numbering of the PSSM.

 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the native if present on the cmd-line.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pssm" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   a filename of a blast formatted pssm file containing the sequence profile to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_ave_pssm" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use an average value metric for PSSM, rather than a pass/fail
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Calculate the sequence recovery for these residues. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector_ref" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector for the reference pose. If not specified, assume there's a 1-to-1 correspondence between the active pose and the reference pose. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   As a convenience, instead of a residue_selector for selecting which residues to count, you can pass task operations and the design residues will be used. The use of the residue_selector attribute is prefered.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_SequenceSimilarityMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A metric for measuring sequence similarity between the trajectry pose and the native pose. Sums the score of each selected position using BLOSUM62 (note that the score of an unmutated pose is almost certainly not 0). Must use the -native flag for this to work correctly.
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apply_selector_to_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, apply the residue selector to the native pose instead of the given pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normalize" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Divide the final score by the number of positions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Choose which residues are to be counted. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_TestCompositeRealMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Test class for RealMetrics
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_TestCompositeStringMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Test class for CompositeStringMetrics
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_TestPerResidueRealMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Test class for PerResidueRealMetrics
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_TestPerResidueStringMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Test class for PerResidueStringMetrics
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_TestRealMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Test class for RealMetrics
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="value" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The value reported by the metric
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_TestStringMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Test class for StringMetrics
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_TimingProfileMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A metric for measuring a TimingProfile and adding it to the resulting score file.  The time is between construction and calls of apply.  If you use it in RosettaScripts, you can have multiple timings between mover sets and determine the time between them using separate TimingProfileMetrics.   Useful to get runtimes of new movers and applications. 
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hours" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Boolean to set whether we report in hours.  Default is minutes
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_TotalEnergyMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A metric to report the total energy of the system or the delta total energy between another input pose or the cmd-line set native.  
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the native as reference for DELTA score if present on the cmd-line.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scoretype" type="scoretypes" default="total_score">
  <xs:annotation><xs:documentation xml:lang="en">
   ScoreType to calculate.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a residue selector is present, we calculate the total energy of only these residues. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_WaterMediatedHbondMetric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A metric to measure hydrogen bonds between a set of residues that are water-mediated.

 DEPTH:
  Depth is set to a default of 1 (IE a single water mediates the hydrogen bond).  Make sure to set the -ignore_waters flag to false in order to have Rosetta include the HOH residues.

 SELECTION:
  If one residue selector is given, will calculate bridged water paths between residues of the selection and all [OTHER] residues that are not water, otherwise it will calculate bridges between one selection and another.

If NO SELECTION is give, will report ALL bridged hbonds in a pose [by default without self-water-self hbonds].
 HBONDS:
  Since these are bridged hbonds, and h-bond networks can be rather complex, the numbers
   reported here are the unique h-bond paths from sele1 to sele2.  If you give only a single residue selector, these are bridged hbonds from sele1 to OTHER residues in the pose not including water. Pass the same selection to get internal bridges of a selection.
   By default we do not include mediated hbonds back on itself, but this is an option.

 TIPS:
  It is generally recommended to repack the waters using the OptH TaskOperation before input into this metric, especially if only Oxygens were present.  

  Using the option -include_vrt false will keep all waters present in the resulting structure.  Use the option -corrections::water::wat_rot_sampling 10 to decrease the angle of sampling from a default of 30 to 10 or 15.  This will result in many more rotamers (and run-time), but will improve networks.

  Hydration shells can be calculated by passing selection1 as all waters in the pose, selection2 as the protein or chain, and then reporting only a single depth (with max_depth at 0 and 1) for the first and second shell waters. Post-processing will be needed.
  Finally, it is generally recommended to use the -beta_nov16 and -genpot scorefunctions as this can result in better h-bond detection.  Both of these have been published and can be turned on together using the -beta flag.

 AUTHORS:
  Jared Adolf-Bryfogle (jadolfbr@gmail.com)
   Citation: De-Novo Glycan Modeling in Rosetta (drafting)

  Ryan Pavlovicz (Rosetta-ECO: Explicit Consideration of cOordinated water)   Citation: 'Efficient consideration of coordinated water molecules improves computational protein- protein and protein-ligand docking', biorxiv, PLOS CB in-review
 </xs:documentation></xs:annotation>
 <xs:attribute name="custom_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows multiple configured SimpleMetrics of a single type to be called in a single RunSimpleMetrics and SimpleMetricFeatures. 
 The custom_type name will be added to the data tag in the scorefile or features database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_as_pdb_nums" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If outputting to scorefile use PDB numbering+chain instead of Rosetta (1 - N numbering)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a residue selector is present, we only calculate and output metrics for the subset of residues selected. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional Selector to measure water-mediated hbonds between residues in each selection, instead of between residues within a single selector.  If NO selector is given, will calculate ALL bridged hbonds between all residues. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="depth" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Depth we will go to find hbond (paths). A depth of one (default) means a single water mediates the hydrogen bond(s).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_only_set_depth" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Only calculate hbond paths AT the specific depth instead of UP TO AND INCLUDING that depth.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_self" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Set to include self-self hydrogen bonds: Ex: resJ - water - resJ
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_virt_waters" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   After (OptH) water packing, some waters become HOH_V if they don't match certain ref energy.
Set this option to true to incude them in our calculation if they are still virts.
Note: The option -include_vrt false will have them all be HOH during packing. Use if you are packing water oxygens from a crystal.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="simple_metric_loader_SIMPLE_METRICS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  SimpleMetrics may be defined as subelements of the SIMPLE_METRICS element, and then will be placed into the DataMap for later retrieval by Movers and Filters or anything else that might use a SimpleMetric. All immediate subelements should have the 'name' attribute as that is how they will be identified in the DataMap. Subelements of the immediate subelements will not be loaded into the data map and do not need to be given a name; e.g. if an immediate subelemement is an 'And' SimpleMetric, and this 'And' SimpleMetric has a 'Chain' subelement, then the 'And' subelement must be given a name, but the 'Chain' subelement probably should not be given a name. Why not? The 'Chain' subelement will not end up as a member of the DataMap in any case, and if a name is given to it, then a user of the XML file may think it is reasonable to use the name for that Chain selector elsewhere in their script -- but their script would fail if they do so.
 </xs:documentation></xs:annotation>
 <xs:group ref="simple_metric" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:group name="task_operation">
 <xs:choice>
  <xs:element name="AddCDRProfileSetsOperation" type="to_AddCDRProfileSetsOperation_type"/>
  <xs:element name="AddCDRProfilesOperation" type="to_AddCDRProfilesOperation_type"/>
  <xs:element name="AddLigandMotifRotamers" type="to_AddLigandMotifRotamers_type"/>
  <xs:element name="AddRigidBodyLigandConfs" type="to_AddRigidBodyLigandConfs_type"/>
  <xs:element name="AlignedThread" type="to_AlignedThread_type"/>
  <xs:element name="AppendRotamer" type="to_AppendRotamer_type"/>
  <xs:element name="AppendRotamerSet" type="to_AppendRotamerSet_type"/>
  <xs:element name="BuildingBlockInterface" type="to_BuildingBlockInterface_type"/>
  <xs:element name="ClashBasedRepackShell" type="to_ClashBasedRepackShell_type"/>
  <xs:element name="ConsensusLoopDesign" type="to_ConsensusLoopDesign_type"/>
  <xs:element name="ConservativeDesignOperation" type="to_ConservativeDesignOperation_type"/>
  <xs:element name="ConstrainHBondNetwork" type="to_ConstrainHBondNetwork_type"/>
  <xs:element name="CrystalContacts" type="to_CrystalContacts_type"/>
  <xs:element name="DatabaseThread" type="to_DatabaseThread_type"/>
  <xs:element name="DesignAround" type="to_DesignAround_type"/>
  <xs:element name="DesignByCavityProximityOperation" type="to_DesignByCavityProximityOperation_type"/>
  <xs:element name="DesignByResidueCentralityOperation" type="to_DesignByResidueCentralityOperation_type"/>
  <xs:element name="DesignCatalyticResiduesOperation" type="to_DesignCatalyticResiduesOperation_type"/>
  <xs:element name="DesignInterfacesOperation" type="to_DesignInterfacesOperation_type"/>
  <xs:element name="DesignRandomRegionOperation" type="to_DesignRandomRegionOperation_type"/>
  <xs:element name="DesignRestrictions" type="to_DesignRestrictions_type"/>
  <xs:element name="DetectProteinLigandInterface" type="to_DetectProteinLigandInterface_type"/>
  <xs:element name="DisableAntibodyRegionOperation" type="to_DisableAntibodyRegionOperation_type"/>
  <xs:element name="DisableCDRsOperation" type="to_DisableCDRsOperation_type"/>
  <xs:element name="DisableZnCoordinationResiduesTaskOp" type="to_DisableZnCoordinationResiduesTaskOp_type"/>
  <xs:element name="DisallowIfNonnative" type="to_DisallowIfNonnative_type"/>
  <xs:element name="DsspDesign" type="to_DsspDesign_type"/>
  <xs:element name="EnableMultiCoolAnnealer" type="to_EnableMultiCoolAnnealer_type"/>
  <xs:element name="EnableSmartAnnealer" type="to_EnableSmartAnnealer_type"/>
  <xs:element name="ExtraChiCutoff" type="to_ExtraChiCutoff_type"/>
  <xs:element name="ExtraRotamers" type="to_ExtraRotamers_type"/>
  <xs:element name="ExtraRotamersGeneric" type="to_ExtraRotamersGeneric_type"/>
  <xs:element name="FindEndpoints" type="to_FindEndpoints_type"/>
  <xs:element name="ImportUnboundRotamers" type="to_ImportUnboundRotamers_type"/>
  <xs:element name="IncludeCurrent" type="to_IncludeCurrent_type"/>
  <xs:element name="InitializeExtraRotsFromCommandline" type="to_InitializeExtraRotsFromCommandline_type"/>
  <xs:element name="InitializeFromCommandline" type="to_InitializeFromCommandline_type"/>
  <xs:element name="InitializeFromOptionCollection" type="to_InitializeFromOptionCollection_type"/>
  <xs:element name="InteractingRotamerExplosion" type="to_InteractingRotamerExplosion_type"/>
  <xs:element name="JointSequence" type="to_JointSequence_type"/>
  <xs:element name="KeepSequenceSymmetry" type="to_KeepSequenceSymmetry_type"/>
  <xs:element name="LayerDesign" type="to_LayerDesign_type"/>
  <xs:element name="LegacyReadNativeRotamersFile" type="to_LegacyReadNativeRotamersFile_type"/>
  <xs:element name="LegacyReadRepeatNativeRotamersFile" type="to_LegacyReadRepeatNativeRotamersFile_type"/>
  <xs:element name="LimitAromaChi2" type="to_LimitAromaChi2_type"/>
  <xs:element name="LinkResidues" type="to_LinkResidues_type"/>
  <xs:element name="MaximizePeptideFoldPropensity" type="to_MaximizePeptideFoldPropensity_type"/>
  <xs:element name="ModifyAnnealer" type="to_ModifyAnnealer_type"/>
  <xs:element name="NoRepackDisulfides" type="to_NoRepackDisulfides_type"/>
  <xs:element name="OperateOnCertainResidues" type="to_OperateOnCertainResidues_type"/>
  <xs:element name="OperateOnResidueSubset" type="to_OperateOnResidueSubset_type"/>
  <xs:element name="OptCysHG" type="to_OptCysHG_type"/>
  <xs:element name="OptH" type="to_OptH_type"/>
  <xs:element name="PreserveCBeta" type="to_PreserveCBeta_type"/>
  <xs:element name="PreventChainFromRepacking" type="to_PreventChainFromRepacking_type"/>
  <xs:element name="PreventRepacking" type="to_PreventRepacking_type"/>
  <xs:element name="PreventResiduesFromRepacking" type="to_PreventResiduesFromRepacking_type"/>
  <xs:element name="ProhibitResidueProperties" type="to_ProhibitResidueProperties_type"/>
  <xs:element name="ProhibitSpecifiedBaseResidueTypes" type="to_ProhibitSpecifiedBaseResidueTypes_type"/>
  <xs:element name="ProteinInterfaceDesign" type="to_ProteinInterfaceDesign_type"/>
  <xs:element name="ProteinLigandInterfaceUpweighter" type="to_ProteinLigandInterfaceUpweighter_type"/>
  <xs:element name="ProteinProteinInterfaceUpweighter" type="to_ProteinProteinInterfaceUpweighter_type"/>
  <xs:element name="PruneBuriedUnsats" type="to_PruneBuriedUnsats_type"/>
  <xs:element name="ReadResfile" type="to_ReadResfile_type"/>
  <xs:element name="ReadResfileAndObeyLengthEvents" type="to_ReadResfileAndObeyLengthEvents_type"/>
  <xs:element name="ReadResfileFromDB" type="to_ReadResfileFromDB_type"/>
  <xs:element name="RemodelRotamerLinks" type="to_RemodelRotamerLinks_type"/>
  <xs:element name="ResfileCommandOperation" type="to_ResfileCommandOperation_type"/>
  <xs:element name="ResidueProbDesignOperation" type="to_ResidueProbDesignOperation_type"/>
  <xs:element name="RestrictAbsentCanonicalAAS" type="to_RestrictAbsentCanonicalAAS_type"/>
  <xs:element name="RestrictByCalculators" type="to_RestrictByCalculators_type"/>
  <xs:element name="RestrictChainToRepacking" type="to_RestrictChainToRepacking_type"/>
  <xs:element name="RestrictConservedLowDdg" type="to_RestrictConservedLowDdg_type"/>
  <xs:element name="RestrictDesignToProteinDNAInterface" type="to_RestrictDesignToProteinDNAInterface_type"/>
  <xs:element name="RestrictIdentities" type="to_RestrictIdentities_type"/>
  <xs:element name="RestrictIdentitiesAtAlignedPositions" type="to_RestrictIdentitiesAtAlignedPositions_type"/>
  <xs:element name="RestrictInterGroupVectorOperation" type="to_RestrictInterGroupVectorOperation_type"/>
  <xs:element name="RestrictInteractionGraphThreadsOperation" type="to_RestrictInteractionGraphThreadsOperation_type"/>
  <xs:element name="RestrictNativeResidues" type="to_RestrictNativeResidues_type"/>
  <xs:element name="RestrictNonSurfaceToRepacking" type="to_RestrictNonSurfaceToRepacking_type"/>
  <xs:element name="RestrictResidueToRepacking" type="to_RestrictResidueToRepacking_type"/>
  <xs:element name="RestrictResiduesToRepacking" type="to_RestrictResiduesToRepacking_type"/>
  <xs:element name="RestrictToAlignedSegments" type="to_RestrictToAlignedSegments_type"/>
  <xs:element name="RestrictToCDRH3Loop" type="to_RestrictToCDRH3Loop_type"/>
  <xs:element name="RestrictToCDRsAndNeighbors" type="to_RestrictToCDRsAndNeighbors_type"/>
  <xs:element name="RestrictToInterface" type="to_RestrictToInterface_type"/>
  <xs:element name="RestrictToInterfaceOperation" type="to_RestrictToInterfaceOperation_type"/>
  <xs:element name="RestrictToInterfaceVector" type="to_RestrictToInterfaceVector_type"/>
  <xs:element name="RestrictToLoops" type="to_RestrictToLoops_type"/>
  <xs:element name="RestrictToLoopsAndNeighbors" type="to_RestrictToLoopsAndNeighbors_type"/>
  <xs:element name="RestrictToNeighborhood" type="to_RestrictToNeighborhood_type"/>
  <xs:element name="RestrictToRepacking" type="to_RestrictToRepacking_type"/>
  <xs:element name="RestrictToResidueProperties" type="to_RestrictToResidueProperties_type"/>
  <xs:element name="RestrictToSpecifiedBaseResidueTypes" type="to_RestrictToSpecifiedBaseResidueTypes_type"/>
  <xs:element name="RestrictToTermini" type="to_RestrictToTermini_type"/>
  <xs:element name="RestrictYSDesign" type="to_RestrictYSDesign_type"/>
  <xs:element name="RetrieveStoredTask" type="to_RetrieveStoredTask_type"/>
  <xs:element name="RotamerExplosionCreator" type="to_RotamerExplosionCreator_type"/>
  <xs:element name="SampleRotamersFromPDB" type="to_SampleRotamersFromPDB_type"/>
  <xs:element name="SelectByDeltaScore" type="to_SelectByDeltaScore_type"/>
  <xs:element name="SelectByDensityFit" type="to_SelectByDensityFit_type"/>
  <xs:element name="SelectBySASA" type="to_SelectBySASA_type"/>
  <xs:element name="SelectResiduesWithinChain" type="to_SelectResiduesWithinChain_type"/>
  <xs:element name="SeqprofConsensus" type="to_SeqprofConsensus_type"/>
  <xs:element name="SequenceMotifTaskOperation" type="to_SequenceMotifTaskOperation_type"/>
  <xs:element name="SetCatalyticResPackBehavior" type="to_SetCatalyticResPackBehavior_type"/>
  <xs:element name="SetIGType" type="to_SetIGType_type"/>
  <xs:element name="SetRotamerCouplings" type="to_SetRotamerCouplings_type"/>
  <xs:element name="SetRotamerLinks" type="to_SetRotamerLinks_type"/>
  <xs:element name="ThreadSequence" type="to_ThreadSequence_type"/>
  <xs:element name="UseMultiCoolAnnealer" type="to_UseMultiCoolAnnealer_type"/>
  <xs:element name="WatsonCrickRotamerCouplings" type="to_WatsonCrickRotamerCouplings_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="to_AddCDRProfileSetsOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
  Add CDR profiles based on whole sequences.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdrs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   CDRs to apply this operation to.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="limit_only_to_length" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Limit only to length, and not cluster
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="force_north_paper_db" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Force the use of the original db. Used for benchmarking.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_outliers" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use cluster outliers in the profiles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_native_restype" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Include the native restype
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="picking_rounds" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of times we sample from the sequence distribution.  Increase this to increase variability
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutoff" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of cluster members for which to use CDR profiles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_ab_scheme" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The Input Antibody Scheme
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdr_definition" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The CDR Definition used
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_AddCDRProfilesOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
@brief Add Cluster-based CDR Profiles as the task operation for the set of CDRs by default.
 See ResidueProbTaskOperation for more.

 CDR definitions used are North/Dunbrack as the clusters are defined using it.

 @details If Cluster-based profiles cannot be used, will use the fallback strategy.
 This can happen if the the CDR is of an unknown cluster or there is too little data
 about the cluster to use profiles.


 FALLBACK STRATEGIES:
    seq_design_conservative adds a conservative mutation set to the possible residue types (blosum62 default),
    seq_design_basic will do nothing (as the default for design is to allow all residue positions);
    seq_design_none will disable design for that CDR (essentially your saying that if it doesn't have profiles, don't design it)


 This TaskOperation is not currently recommended for H3 as it does not cluster well.

 Optionally sample whole CDR sequences via the primary strategy of:
 seq_design_profile_sets (use sets instead of profile probability)
     seq_design_profile_sets_combined (use profile sets and profile probability)
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdrs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which CDRs 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fallback_strategy" type="xs:string" default="seq_design_conservative">
  <xs:annotation><xs:documentation xml:lang="en">
   Strategy to use when there is not enough data to use profiles for a particular CDR cluster
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_native_restype" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we include the native AA at the position, or not?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="picking_rounds" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   How many times should we choose an AA from the probabilities?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="force_north_paper_db" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we only use the North Paper database, or use newer data if present?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_outliers" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we use data for probabilities that includes outliers?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stats_cutoff" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   If the number of data points for a particular cluster is below this value, we use the fallback strategy instead of cluster sequence profiles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_zero_probs_at" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   If a particular AA has 0 as a probility, whould we keep it at zero or sample it at some probability?  Used to increase variability of designs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cons_design_data_source" type="xs:string" default="blosum62">
  <xs:annotation><xs:documentation xml:lang="en">
   For conservative design, which blosum matrix should we use?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_probabilities" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we sample ALL AA that does not have prob of 0 at 1.0 instead?  This basically works to add ALL AA seen at a given position in a particular cluster to the set of design residues.  Used to increase variability of designs or for testing purposes
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_ab_scheme" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Input Antibody Numbering Scheme.  If not set, uses the cmd-line default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdr_definition" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Input CDR Definition - only works with North currently
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_AddLigandMotifRotamers_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_AddRigidBodyLigandConfs_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_AlignedThread_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A task operation that enables threading of aligned residues between a query and a template. receives a FASTA format sequence alignment (file may hold multiple sequences), and allows the threading only of residues that are aligned between query and structure. positions where either the template structure or the query sequence have a gap '-' are skipped. suitable for when you wish to model a sequence over a structure, and they are of different lengths
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="alignment_file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the alignment file in FASTA format. Should be in the usual -'[right-pointing-angle-bracket]name_of_sequence' followed by the amino acid single letter sequence on the next line or lines- for this to work.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="query_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the query sequence, as written in the alignment file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the template sequence, as written in the alignment file. the same sequence as that of the structure passed with -s.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_res" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue at which to start threading. Useful for threading the non-first chain.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_AppendRotamer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Appends a rotamer opteration to the packer task (cannot currently be specified through RosettaScripts). Under development and untested. Use at your own risk.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_AppendRotamerSet_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Appends a rotamer set operation to the packer task (cannot currently be specified through RosettaScripts).  Under development and untested. Use at your own risk.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_BuildingBlockInterface_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  For use when designing with symmetric building blocks. Prevents repacking at residues that are: 1) distant from the inter-building block interface, or 2) near the inter-building block interface, but also make intra-building block interface contacts that are not clashing.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nsub_bblock" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of subunits in the symmetric building block (e.g., 3 for a trimer). This option is not needed for multicomponent systems.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bblock_reference_pdb" type="xs:string" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   A reference PDB for defining the bblock interface. NOT COMPATIBLE with multicomponent symmetry.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_names" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   Names of the sym_dofs corresponding to the symmetric building blocks. (Eventually replace the need for this option by having is_singlecomponent or is_multicomponent utility functions). If no sym_dof_names are specified, then they will be extracted from the pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="contact_dist" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Residues with beta carbons not within this distance of any beta carbon from another building block are prevented from repacking.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bblock_dist" type="real" default="5.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The all-heavy atom cutoff distance used to specify residues that are making inter-subunit contacts within the building block. Because these residues are making presumably important intra-building block interactions, they are prevented from repacking unless they are clashing.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fa_rep_cut" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The cutoff used to determine whether residues making inter-subunit contacts within the building block are clashing.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_intrabb" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter intra-building block interactions?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="intrabb_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Only intra-building block residues?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="multicomp" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, system has more than one component. If false, it is a single component system.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ClashBasedRepackShell_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The ClashBasedShellSelector identifies all residues that clash with at least one rotamer of a given residue selection.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   The residues to build the shell around.  These can also be specified via the 'selector' or 'task_operations' options, or via a ResidueSelector subtag.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Select the residues that @b aren't part of the clash-based shell.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_shells" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of shells to calculate.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_focus" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, include the focus residues in the ultimate selection.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="focus_on_designable" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Only applies if 'task_operations' is given.  By default, only residues that can design are considered when building the shell.  Set to 'false' to also consider residues that can repack.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bump_overlap_factor" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Two atoms are considered to clash when the squared distance between them is less than: bump_overlap_factor * {sum of Lennard-Jones radii}^2
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ConsensusLoopDesign_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  ConsensusLoopDesign restricts amino acid identities in loops based on the ABEGO torsion bins of the loop residues and the common sequence profiles from natives for loops with the same ABEGO bins.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_dssp" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, DSSP will be used to determine which residues are loops. If false, the secondary structure stored in the pose will be used to determine loops. Has no effect if the "secstruct" option is set.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows the user to force a particular secondary structure onto the pose. If  set, use_dssp will be ignored. The length of the secondary structure must match the length of the pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a blueprint filename is given, the blueprint will be read and its secondary structure will be used to set the "secstruct" option.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   By default, ConsensusLoopDesign works on all residues deemed "loops" by DSSP in the pose. If set, a residue selector is used to select regions of the protein in which to disallow residues. The selector can be used to choose one or two loops in the pose rather than all of them. Note that the residues flanking loop regions are also restricted according to the sequence profiles. By default, this task operation works on all loops in the pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_adjacent_residues" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, amino acids allowed at the non-loop positions joined by each loop will also be restricted via their frequencies in native structures. For example, some loops which follow helices strongly prefer proline as the last position in the helix.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="enrichment_threshold" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If the enrichment value of an amino acid at a particular position is below this number, it will be disallowed. 0.5 is more stringent than 0.0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ConservativeDesignOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
TaskOperation to allow only conservative mutations at designable residues
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector that indicates to which residues the operation will be applied. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="data_source" type="xs:string" default="blosum62">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the source of the data used to define what is conservative. Options are: chothia_76 and the Blosum matrices from 30 to 100; designated as blosum30, 62, etc. Default is blosum62.  The higher the number, the more conservative the set of mutations (numbers are sequence identity cutoffs).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_native_aa" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Include native amino acid in the allowed_aas list
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ConstrainHBondNetwork_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_CrystalContacts_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Exclude crystal contacts from design.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="all_gap" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   add this to all calculated distances
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="polar_gap" type="real" default="2.5">
  <xs:annotation><xs:documentation xml:lang="en">
   if either residue is polar - add this to calculated distances
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_buried_sasa" type="real" default="0.01">
  <xs:annotation><xs:documentation xml:lang="en">
   ignore buried residues as defined by maximum allowed sasa
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   design residues in contact
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nbr_radius_to_nbr_radius" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   contact determined by nbr radius overlap. CBeta to CBeta
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nbr_radius_to_atoms" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   contact determined by nbr radius to atom distance. CBeta to any atom on symmetric partner
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atoms_to_atoms" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   contact determined by atom to atom distances. Any atom to any atom.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DatabaseThread_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This task operation is designed to deal with situations in which a pose is changed in a way that adds or removes residues. This creates a problem for normal threading that requires a constant start and stop positions. This task operation can use a database of sequences or a single target sequence. It also need a template pdb to find on the pose a user defined start and end residues. A sequence length and threading start position are calculated and then a correct length sequence is randomly chosen from the database and threaded onto the pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_sequence" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The desired sequence if there is only one desired sequence (this can happen if the pose is changed during design such that the start and end positions are not constant. In such cases ThreadSequence is not useful). The task operation expects either a database or a target sequence and will fail if neither are provided. If both are provided the database will be ignored.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   a pdb that serves as a constant template to map the start and end residues onto the pose in case that the length of the pose is altered during design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The database should be a text file with a list of single letter amino acids (not fasta)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="itterative" type="xs:boolean">
  <xs:annotation><xs:documentation xml:lang="en">
   if true go over db iteratively and not randomly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_res" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   the residue to start threading from. This is a residue in the template pdb. It is used to find the closest residue on the source pdb.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_res" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   the residue to end the threading. This is a residue in the template pdb. It is used to find the closest residue on the source pdb. The delta between the end and start residue is used to find the desired sequence length in the database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_design_around" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   if set to false, only design the region that is threaded. The rest is set to repack.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_residues" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   the same as placing 'X' in the target sequence. This trumps the sequence in the database so if a residue has a different identity in the database it is changed to 'X'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_original_identity" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   the same as placing a ' ' or a '_' in the sequence. The pose residue is marked for repacking only. This trumps both the database sequence and the list from design_residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DesignAround_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   can be a list of pdb numbers, such as 291B,101A.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   what sphere to design around the target residues. Must be at least as large as design_shell.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_design" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   allow design in the sphere, else restrict to repacking.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums_allow_design" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   allow design in the resnums list, else restrict to repacking.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   what sphere to pack around the target residues. Must be at least as large as design_shell.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DesignByCavityProximityOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region_shell" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="regions_to_design" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_non_selected" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DesignByResidueCentralityOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region_shell" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="regions_to_design" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_non_selected" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DesignCatalyticResiduesOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region_shell" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="regions_to_design" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_non_selected" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DesignInterfacesOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_shell" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Radius of residues for design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Radius of residues for repacking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_to_repacking_chain1" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Restrict the first chain to repacking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_to_repacking_chain2" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Restrict the second chain to repacking
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DesignRandomRegionOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region_shell" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="regions_to_design" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_non_selected" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DesignRestrictions_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Concise way to combine residue selectors and residue-level task operations. The Action subtags allow you to specify several modifications to a packer task simultaneously. Using the 'selector_logic' attribute, you can combine as many previously-defined ResidueSelectors as you would like using AND, OR, ! (not), and parentheses or you can choose a particular, previously defined ResidueSelector using the 'residue_selector' attribute. One of the two must be provided. Then you may specify the set of canonical amino acids you'd like to restrict the indicated set of residues using the 'aas' attribute and/or by listing a set of previously-declared ResidueLevelTaskOperations.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Action">
   <xs:complexType mixed="true">
    <xs:attribute name="residue_selector" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="selector_logic" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Logically combine already-delcared ResidueSelectors using boolean AND, OR, and ! (not) operators. As convnetional, ! (not) has the highest precedence, then AND, then OR. Parentheses may be used to group operations together.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="aas" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      A list of the canonical L amino acids that are to be allowed for the selected residues. Either upper or lower case letters are accepted. Note that if an amino acid is allowed for a residue that is selected by one action, but disallowed for that residue selected by a second action, the amino acid will not be allowed.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="residue_level_operations" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      A comma-separated list of residue-level-task operations that will be retrieved from the DataMap.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DetectProteinLigandInterface_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cut1" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Design all residues with Calphas within this distance to the ligand
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cut2" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Design all residues with Calpha-Cbeta vectors pointing toward the ligand, and with Calphas within this distance to the ligand
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cut3" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Repack all residues with Calphas within this distance to the ligand
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cut4" type="real" default="12.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Repack all residues with Calpha-Cbeta vectors pointing toward the ligand, and with Calphas within this distance to the ligand
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="arg_sweep_cutoff" type="real" default="3.7">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Enable design of residues?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Use behavior specified in resfile, autodetecting only those residues with property AUTO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_to_cys" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Permit changing non-cysteine residues to cysteine?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segment_interface" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="catres_interface" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Consider catalytic (enzdes constrained) residues as part of the interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="arg_sweep_interface" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use arginine-reachability to interface as the criterion for defining designable positions instead of distance
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="catres_only_interface" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Consider only neighbors of catalytic residues (not ligand) for defining interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_cstids" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of particular constrained residues to be considered as exclusive targets for interface detection (e.g. 1B,2B,3B)
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DisableAntibodyRegionOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
 Disable specific antibody regions in an antibody
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Region to apply this to: antibody_region, cdr_region, or framework_region
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disable_packing_and_design" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Disable packing AND design to this region
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdr_definition" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The CDR Definition used for this operation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_ab_scheme" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The antibody scheme used for this operation
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DisableCDRsOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
 Disable specific CDRs
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdrs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   List of CDR regions (string) devided by one of the following characters: ":,'`~+*|;. "Recognized CDRs: "Aroop|Chothia|Kabat|Martin|North|"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disable_packing_and_design" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Disable packing AND design of these CDRs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdr_definition" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The specific CDR definition
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_ab_scheme" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The numbering scheme of the antibody
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DisableZnCoordinationResiduesTaskOp_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DisallowIfNonnative_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restrict design to not include a residue as an possibility in the task at a position unless it is the starting residue.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnum" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If resnum is left as 0, the restriction will apply throughout the pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disallow_aas" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Disallow_aas takes a string of one letter amino acid codes, no separation needed. For example disallow_aas=GCP would prevent Gly, Cys, and Pro from being designed unless they were the native amino acid at a position.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="dsspdo_subelement_LoopType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  allowed loop residues. default: ACDEFGHIKLMNPQRSTVWY
 </xs:documentation></xs:annotation>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   define the set of residues allowed for the defined secondary structure type; the string is composed of one letter amino acid codes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   append the following residues to the set of allowed residues for the defined secondary structure type.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   opposite of append.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="dsspdo_subelement_StrandType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  allowed strand residues. default: DEFHIKLNQRSTVWY
 </xs:documentation></xs:annotation>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   define the set of residues allowed for the defined secondary structure type; the string is composed of one letter amino acid codes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   append the following residues to the set of allowed residues for the defined secondary structure type.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   opposite of append.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="dsspdo_subelement_HelixType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  allowed helix residues. default: ADEFIKLNQRSTVWY
 </xs:documentation></xs:annotation>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   define the set of residues allowed for the defined secondary structure type; the string is composed of one letter amino acid codes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   append the following residues to the set of allowed residues for the defined secondary structure type.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   opposite of append.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="dsspdo_subelement_HelixStartType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  allowed helix start residues. default: ADEFHIKLNPQRSTVWY
 </xs:documentation></xs:annotation>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   define the set of residues allowed for the defined secondary structure type; the string is composed of one letter amino acid codes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   append the following residues to the set of allowed residues for the defined secondary structure type.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   opposite of append.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="dsspdo_subelement_HelixCappingType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  allowed helix capping residues. default: DNST
 </xs:documentation></xs:annotation>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   define the set of residues allowed for the defined secondary structure type; the string is composed of one letter amino acid codes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   append the following residues to the set of allowed residues for the defined secondary structure type.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   opposite of append.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="dsspdo_subelement_NtermType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  allowed n terminal residues. default: ACDEFGHIKLMNPQRSTVWY
 </xs:documentation></xs:annotation>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   define the set of residues allowed for the defined secondary structure type; the string is composed of one letter amino acid codes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   append the following residues to the set of allowed residues for the defined secondary structure type.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   opposite of append.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="dsspdo_subelement_CtermType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  allowed c terminal residues. default: ACDEFGHIKLMNPQRSTVWY
 </xs:documentation></xs:annotation>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   define the set of residues allowed for the defined secondary structure type; the string is composed of one letter amino acid codes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   append the following residues to the set of allowed residues for the defined secondary structure type.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   opposite of append.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="dsspdo_subelement_allType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  allowed residues for all secstruct tyes: ACDEFGHIKLMNPQRSTVWY
 </xs:documentation></xs:annotation>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   define the set of residues allowed for the defined secondary structure type; the string is composed of one letter amino acid codes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   append the following residues to the set of allowed residues for the defined secondary structure type.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   opposite of append.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_DsspDesign_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Design residues with selected amino acids depending on the local secondary structure. The secondary structure at each residue is determined by DSSP (or read from a blueprint file).
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Loop" type="dsspdo_subelement_LoopType"/>
  <xs:element name="Strand" type="dsspdo_subelement_StrandType"/>
  <xs:element name="Helix" type="dsspdo_subelement_HelixType"/>
  <xs:element name="HelixStart" type="dsspdo_subelement_HelixStartType"/>
  <xs:element name="HelixCapping" type="dsspdo_subelement_HelixCappingType"/>
  <xs:element name="Nterm" type="dsspdo_subelement_NtermType"/>
  <xs:element name="Cterm" type="dsspdo_subelement_CtermType"/>
  <xs:element name="all" type="dsspdo_subelement_allType"/>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the operation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   a blueprint file which specifies the secondary structure at each position
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pose_secstruct" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   a secondary structure string that will be used as the pose secondary structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_EnableMultiCoolAnnealer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This task operation will turn on the MultiCoolAnnealer when invoking pack_rotamers; the MultiCoolAnnealer produces much lower energies than the regular annealer by spending more time at lower temperatures, and by quenching from many different low-energy rotamer assignments that it encounters during an initial cooling trajectory. See Leaver-Fay, Jacak, Stranges and Kuhlman, PLoS One 2011
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="history_size" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of low-energy states that the MultiCoolAnnealer will keep from its initial cooling trajectory that will be explored at very low temperature during the final optimization phase. Default of 10.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_EnableSmartAnnealer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The smart annealer uses tensorflow to decrease the sample space of a typical packing run
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="model" type="xs:string" default="generation2">
  <xs:annotation><xs:documentation xml:lang="en">
   Choose which neural network to use for the smart annealer. Look at database/protocol_data/tensorflow_graphs/smart_annealer/ to see the options.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutoff" type="real" default="0.25">
  <xs:annotation><xs:documentation xml:lang="en">
   Choose a number from 0 to 1 to tune how aggressive the smart annealer is. Higher numbers are more agressive (risky) but have a potentially greater speedup (speedup requires pick_again=false)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pick_again" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   f disabled, the smart annealer just skips unfruitful amino acids. Enabling this option tells the annealer to pick a fruitful rotamer to sample this round instead of skipping the round. Will not give you a speedup but may give you a better final outcome.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disable_during_quench" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Run the final quenching stage as normal, regardless of how bad an amino acid may be.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ExtraChiCutoff_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Assign a chi cutoff to specific or all residues.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resid" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue ID of specific residues or =0, all residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extrachi_cutoff" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Extra rotamers chi cutoff.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="one_to_four">
 <xs:restriction base="xs:integer">
  <xs:minInclusive value="1"/>
  <xs:maxInclusive value="4"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="to_ExtraRotamers_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The ability to add various levels of extra rotamers to specific or all residues.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resid" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Apply to specific residues, or =0, apply to all residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="one_to_four" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Chi value between 1 and 4.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="level" type="exchi_sample_level" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The level of extra rotamers you want.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ExtraRotamersGeneric_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  During packing, extra rotamers can be used to increase sampling. Use this TaskOperation to specify for all residues at once what extra rotamers should be used.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex1" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi1 sub-rotamers for all residues that pass the extrachi_cutof
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex2" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi2 sub-rotamers for all residues that pass the extrachi_cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex3" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi3 sub-rotamers for all residues that pass the extrachi_cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex4" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi4 sub-rotamers for all residues that pass the extrachi_cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex1aro" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi1 sub-rotamers for aromatic residues that pass the extrachi_cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex2aro" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi2 sub-rotamers for aromatic residues that pass the extrachi_cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex1aro_exposed" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi1 sub-rotamers for all aromatic residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex2aro_exposed" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use extra chi2 sub-rotamers for all aromatic residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex1_sample_level" type="exchi_sample_level" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for chi1 sampling; all include the current chi dihedral. There are currently 8 options: NO_EXTRA_CHI_SAMPLES (0) (original only); EX_ONE_STDDEV (1) (default, +- one sd, 3 samples); EX_ONE_HALF_STEP_STDDEV (2)(+- 0.5 sd, 3 samples); EX_TWO_FULL_STEP_STDDEVS(3) ( +- 1 and 2 sd, 5 samples); EX_TWO_HALF_STEP_STDDEVS(4) ( +- 0.5 and +- 1 sd, 5 samples); EX_FOUR_HALF_STEP_STDDEVS(5) ( +- 0.5, 1, 1.5, 2 sd, 9 samples); EX_THREE_THIRD_STEP_STDDEVS (6) ( +- 0.33, 0.67, 1 sd; 7 samples); EX_SIX_QUARTER_STEP_STDDEVS (7) ( += 0.25, 0.5, 0.75, 1.25, 1.5 sd; 13 samples)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex2_sample_level" type="exchi_sample_level" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for chi2 sampling; see ex1_sample_level for available options.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex3_sample_level" type="exchi_sample_level" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for chi3 sampling; see ex1_sample_level for available options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex4_sample_level" type="exchi_sample_level" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for chi4 sampling; see ex1_sample_level for available options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex1aro_sample_level" type="exchi_sample_level" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for aromatic chi1 sampling; see ex1_sample_level for available options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex2aro_sample_level" type="exchi_sample_level" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for aromatic chi2 sampling; see ex1_sample_level for available options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex1aro_exposed_sample_level" type="exchi_sample_level" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for aromatic chi1 sampling; see ex1_sample_level for available options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex2aro_exposed_sample_level" type="exchi_sample_level" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling level for aromatic chi1 sampling; see ex1_sample_level for available options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extrachi_cutoff" type="non_negative_integer" default="18">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of neighbors a residue must have before extra rotamers are used. Default 18
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_FindEndpoints_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="Cterm_offset" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="Nterm_offset" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="even" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="odd" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbors" type="non_negative_integer" default="6">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_cutoff" type="real" default="18.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="point_inside" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sequence_separation" type="non_negative_integer" default="15">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ImportUnboundRotamers_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Import unbound rotamers from a given PDB file. Specify the unbound/native PDB file using the flag: -packing::unboundrot
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_IncludeCurrent_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Includes current rotamers (eg - from input pdb) in the rotamer set. These rotamers will be lost after a packing run, so they are only effective upon initial loading of a pdb!
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_InitializeExtraRotsFromCommandline_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Creates extra rotamer operations from command line options. Under development and untested. Use at your own risk.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_InitializeFromCommandline_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Reads commandline options. For example, -ex1 -ex2 (does not read resfile from command line options) This taskoperation will complain about an unimplemented method, but you can safely ignore the message.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_InitializeFromOptionCollection_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Initializes task operations from an option collection. Similar to InitializeFromCommandLine, but uses a specified option collection object instead of basic::option::options.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="option_collection" type="xs:string" default="job_options">
  <xs:annotation><xs:documentation xml:lang="en">
   Options in datamap.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_InteractingRotamerExplosion_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Task Operation that oversamples rotamers that score well with a specified target residue (or set thereof). Note that this TaskOP by itself does not select or deselect any residue positions for design. Rather, it builds extra rotamers of the residue types and at positions that were allowed by previously used TaskOPs. This means that this TaskOP should be used in conjunction with other TaskOPs that take care of which regions to design. This TaskOP can be considered to work like the old rotamer explosion protocols in Rosetta 2.x
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_seqpos" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   target residue which interacts well with another residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_cutoff" type="real" default="-0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum or better interaction score with target seqpos
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ex_level" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   rotamer sampling level
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debug" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   write extra rotamers sampled to disk
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude_radius" type="real" default="20.0">
  <xs:annotation><xs:documentation xml:lang="en">
   distance from target residue 
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_JointSequence_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Prohibit designing to residue identities that aren't found at that position in any of the listed structures:
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_current" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use residue identities from the current structure (input pose to apply() of the taskoperation)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_natro" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   the task operation also adds the rotamers from the native structures (use_native/native) in the rotamer library.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   to which chain to apply, 0 is all chains
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_chain" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   given an additional input pdb, such as through in:file:native, which chain should the sequence be derived from. 0 is all chains.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use residue identities from the structure listed with -in:file:native
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_starting_as_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   use starting pose as native pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Use residue identities from the listed file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   use this file path as the native pdb
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_fasta" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use residue identities from a native sequence given by a FASTA file (specify the path to the FASTA file with the -in:file:fasta flag at the command line)
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_KeepSequenceSymmetry_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  If true, Rosetta will activate the SequenceSymmetricAnnealer. Use this when you give Rosetta a multimer to design and you want the sequences of the chains to be the same but you don't need strict physical symmetry.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="setting" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, Rosetta will activate the SequenceSymmetricAnnealer. Use this when you give Rosetta a multimer to design and you want the sequences of the chains to be the same but you don't need strict physical symmetry.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="layer_design_operation_behavior">
 <xs:restriction base="xs:string">
  <xs:enumeration value="design"/>
  <xs:enumeration value="no_design"/>
  <xs:enumeration value="omit"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="layer_design_specification_behavior">
 <xs:restriction base="xs:string">
  <xs:enumeration value="designable"/>
  <xs:enumeration value="repackable"/>
  <xs:enumeration value="fixed"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="layer_design_ss_layer_all_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="copy_layer" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="operation" type="layer_design_operation_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="specification" type="layer_design_specification_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="layer_design_ss_layer_Helix_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="copy_layer" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="operation" type="layer_design_operation_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="specification" type="layer_design_specification_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="layer_design_ss_layer_HelixCapping_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="copy_layer" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="operation" type="layer_design_operation_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="specification" type="layer_design_specification_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="layer_design_ss_layer_HelixStart_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="copy_layer" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="operation" type="layer_design_operation_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="specification" type="layer_design_specification_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="layer_design_ss_layer_Loop_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="copy_layer" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="operation" type="layer_design_operation_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="specification" type="layer_design_specification_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="layer_design_ss_layer_Strand_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="copy_layer" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="operation" type="layer_design_operation_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="specification" type="layer_design_specification_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="layer_design_ss_layer">
 <xs:choice>
  <xs:element name="all" type="layer_design_ss_layer_all_type"/>
  <xs:element name="Helix" type="layer_design_ss_layer_Helix_type"/>
  <xs:element name="HelixCapping" type="layer_design_ss_layer_HelixCapping_type"/>
  <xs:element name="HelixStart" type="layer_design_ss_layer_HelixStart_type"/>
  <xs:element name="Loop" type="layer_design_ss_layer_Loop_type"/>
  <xs:element name="Strand" type="layer_design_ss_layer_Strand_type"/>
 </xs:choice>
</xs:group>

<xs:group name="layer_design_ss_layer_or_taskop">
 <xs:choice>
  <xs:element name="all" type="layer_design_ss_layer_all_type"/>
  <xs:element name="Helix" type="layer_design_ss_layer_Helix_type"/>
  <xs:element name="HelixCapping" type="layer_design_ss_layer_HelixCapping_type"/>
  <xs:element name="HelixStart" type="layer_design_ss_layer_HelixStart_type"/>
  <xs:element name="Loop" type="layer_design_ss_layer_Loop_type"/>
  <xs:element name="Strand" type="layer_design_ss_layer_Strand_type"/>
  <xs:group ref="task_operation"/>
 </xs:choice>
</xs:group>

<xs:complexType name="layer_design_ss_layer_TaskLayer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:sequence>
  <xs:group ref="task_operation" minOccurs="1" maxOccurs="1"/>
  <xs:group ref="layer_design_ss_layer" minOccurs="0" maxOccurs="unbounded"/>
 </xs:sequence>
</xs:complexType>

<xs:complexType name="layer_design_ss_layer_core_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="layer_design_ss_layer" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="layer_design_ss_layer_boundary_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="layer_design_ss_layer" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="layer_design_ss_layer_surface_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="layer_design_ss_layer" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="layer_design_ss_layer_Nterm_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="layer_design_ss_layer" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="layer_design_ss_layer_Cterm_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="layer_design_ss_layer" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="layer_design_ss_layer_CombinedTasks_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="layer_design_ss_layer_or_taskop" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_LayerDesign_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Note: The LayerDesign TaskOperation will likely be deprecated at some point in the future in favour of the LayerSelector ResidueSelector. It is strongly recommended that users start to switch over to the LayerSelector ResidueSelector, which permits greater flexibility in selecting residues. Design residues with selected amino acids depending on the enviroment--accessible surface area. The layer of each residue is assigned to one of the three basic layers--core, boundary or surface-- depending on the accessible surface area of mainchain + CB, or depending on the number of neighbours in a cone extending along the CA-CB vector --if the use_sidechain_neighbors option is used.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="core" type="layer_design_ss_layer_core_type"/>
  <xs:element name="boundary" type="layer_design_ss_layer_boundary_type"/>
  <xs:element name="surface" type="layer_design_ss_layer_surface_type"/>
  <xs:element name="Nterm" type="layer_design_ss_layer_Nterm_type"/>
  <xs:element name="Cterm" type="layer_design_ss_layer_Cterm_type"/>
  <xs:element name="CombinedTasks" type="layer_design_ss_layer_CombinedTasks_type"/>
  <xs:element name="TaskLayer" type="layer_design_ss_layer_TaskLayer_type"/>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_original_non_designed_layer" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Restrict to repacking the non design layers
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="layer" type="xs:string" default="core_boundary_surface_Nterm_Cterm">
  <xs:annotation><xs:documentation xml:lang="en">
   Layer to be designed, other ex. core_surface means only design core and surface layer, other refers to the additional layers defined with packertasks
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_non_design" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, side chains will be repacked, left untouched if otherwise.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_pikaa_natro" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, and if a resfile is read before applying this TaskOperation, ignore any residues that have been set in the resfile with the PIKAA, NATRO, or NATAA commands.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sidechain_neighbors" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, assign a residue's layers based on counting the number CA atoms from other residues within a cone in front of the residue's ca-cb vector. Because this option is no longer SASA based, the layer assignments will always be identical regardless of the protein sequence; i.e. layers could be assigned based on a polyalanine backbone and it would make no difference. This option changes the defaults for core and surface to neighbors less than 2 --surface-- and neighbors greater than 5.2 --core. HOWEVER, these defaults will be overwritten if core and surface are manually specified in declaring the taskoperation! So make sure you do not specify new core and surface settings appropriate for SASA when you are actually counting neighboring residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_neighbor_dist_midpoint" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   These values fine-tune the behavior of the sidechain neighbors residue-counting logic. Typically, a user need not change these from default values. For details on these, see the LayerSelector ResidueSelector's documentation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_neighbor_denominator" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   These values fine-tune the behavior of the sidechain neighbors residue-counting logic. Typically, a user need not change these from default values. For details on these, see the LayerSelector ResidueSelector's documentation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_neighbor_angle_shift_factor" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   These values fine-tune the behavior of the sidechain neighbors residue-counting logic. Typically, a user need not change these from default values. For details on these, see the LayerSelector ResidueSelector's documentation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_neighbor_angle_exponent" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   These values fine-tune the behavior of the sidechain neighbors residue-counting logic. Typically, a user need not change these from default values. For details on these, see the LayerSelector ResidueSelector's documentation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_neighbor_dist_exponent" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   These values fine-tune the behavior of the sidechain neighbors residue-counting logic. Typically, a user need not change these from default values. For details on these, see the LayerSelector ResidueSelector's documentation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pore_radius" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   pore radius for calculating accessible surface area
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="core" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   residues of which asa is less than core are defined as core
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="surface" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   residues of which asa is greater than surface are defined as surface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="core_E" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="core_L" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="core_H" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="surface_E" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="surface_L" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="surface_H" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="make_rasmol_script" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   if true, write a rasmol script coloring the residues by the three basic layers, core, boundary and surface.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_symmetry" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   More recently, the use_symmetry option has been added to permit LayerDesign to be symmetry-aware. If use_symmetry is set to true --the default, layers are defined for symmetric poses using the full, symmetric pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   print to tracer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_restypes" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="make_pymol_script" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if true, write a pymol script coloring the residues by the three basic layer and the aditional taskoperation defined layers..
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_LegacyReadNativeRotamersFile_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Reads/parses native rotamers file and adds the native rotamers for both native amino acids to the rotamer set
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of native rotamer file
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_LegacyReadRepeatNativeRotamersFile_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Reads/parses native rotamers file and adds the native rotamers for both native amino acids to the rotamer set; use this version for repeat proteins
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of native rotamer file
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_LimitAromaChi2_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Prevent to use the rotamers of PHE, TYR and HIS that have chi2 far from 90.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi2max" type="real" default="110.0">
  <xs:annotation><xs:documentation xml:lang="en">
   max value of chi2 to be used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi2min" type="real" default="70.0">
  <xs:annotation><xs:documentation xml:lang="en">
   min value of chi2 to be used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_trp" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   also impose chi2 limits for tryptophans
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="linkres_LinkGroupType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A group of residues should keep the same amino acid identity. Use the group=(some string) option to specify a comma-separated list of residue numbers (in rosetta numbering) which residues make up the group. For example, group="1,2" ensures that the first and second residues will keep the same identity. You can make as many groups as you like by specifying multiple LinkGroup subtags.
 </xs:documentation></xs:annotation>
 <xs:attribute name="group" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   group amino acids that should mutate together
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="linkres_linkgroupType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A group of residues should keep the same amino acid identity. Use the group=(some string) option to specify a comma-separated list of residue numbers (in rosetta numbering) which residues make up the group. For example, group="1,2" ensures that the first and second residues will keep the same identity. You can make as many groups as you like by specifying multiple LinkGroup subtags.
 </xs:documentation></xs:annotation>
 <xs:attribute name="group" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   group amino acids that should mutate together
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_LinkResidues_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Specify groups of residues that should be mutated together. For example, if one residue in the group is mutated to Cys, all the residues in that group will be mutated to Cys. This task operation is meant for situations where you want to design a homo-multimer, but you don't want to use symmetry mode (perhaps because your monomers aren't geometrically symmetrical).
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="LinkGroup" type="linkres_LinkGroupType"/>
  <xs:element name="linkgroup" type="linkres_linkgroupType"/>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_group" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_MaximizePeptideFoldPropensity_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A task operation that operates on a cyclic peptide, and limits design to residue types at each position that are predicted to increase the propensity to favour the designed conformation.  Recommended for use with a full palette of amino acid types (see PackerPalette documentation).  Requires extras=tensorflow or extras=tensorflow_gpu, since this uses a Tensorflow-trained ML model.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="deriv_threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   A threshold value for an entry in the dPNear/dResType gradient vector, above which we allow a given residue type.  Set this higher to allow fewer residue types.  Only used in threshold mode.  Defaults to 0.0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_types_to_allow" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of residue types to allow at each position.  Only used in top_n and random modes.  Defaults to 3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="peptide_size" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The size of the cyclic peptide, in amino acids.  This is needed to load the correct Tensorflow model.  Default 10.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="model_version" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The model number of the Tensorflow model to load.  The model must include support for gradient (derivative) calculation.  Default 3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rescore_pose" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the pose is rescored before the Tensorflow model is applied.  If false, the prior energies are used.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_current" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the current residue type is still allowed at each position.  If false, it is only allowed if the derivative exceeds the threshold (like other residue types).  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mode" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The mode for this task operation.  Allowed modes are: threshold (allow all residue types with derivative values above a given threshold), random (select N residue types randomly -- used as a control for testing effect of ML approach), and top_n (allow the top N residue types at each position).  Default is top_n.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A residue selector used to select the cyclic peptide.  Needed if the number of residues in the pose is different than the number supported by the model.  If not specified, the whole pose is used. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The scorefunction for rescoring the pose.  If not specified, a default scorefunction for the ML protocol that was loaded will be used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ModifyAnnealer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Allows modification of the temperatures and quench used by the annealer during packing.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disallow_quench" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   quench accepts every change that lowers the energy. If you want more diversity it could be prudent to disallow the quench step. Quench is on by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="high_temp" type="real" default="100.0">
  <xs:annotation><xs:documentation xml:lang="en">
    the starting high temperature for the annealer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="low_temp" type="real" default="0.3">
  <xs:annotation><xs:documentation xml:lang="en">
   the temperature that the annealer cools to
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_NoRepackDisulfides_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Do not allow disulfides to repack.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="res_filter">
 <xs:choice>
  <xs:element name="AllResFilter" type="resfilter_AllResFilter_type"/>
  <xs:element name="AnyResFilter" type="resfilter_AnyResFilter_type"/>
  <xs:element name="ChainIs" type="resfilter_ChainIs_type"/>
  <xs:element name="ChainIsnt" type="resfilter_ChainIsnt_type"/>
  <xs:element name="NoResFilter" type="resfilter_NoResFilter_type"/>
  <xs:element name="ProteinCore" type="resfilter_ProteinCore_type"/>
  <xs:element name="ResidueHasProperty" type="resfilter_ResidueHasProperty_type"/>
  <xs:element name="ResidueIndexIs" type="resfilter_ResidueIndexIs_type"/>
  <xs:element name="ResidueIndexIsnt" type="resfilter_ResidueIndexIsnt_type"/>
  <xs:element name="ResidueLacksProperty" type="resfilter_ResidueLacksProperty_type"/>
  <xs:element name="ResidueName3Is" type="resfilter_ResidueName3Is_type"/>
  <xs:element name="ResidueName3Isnt" type="resfilter_ResidueName3Isnt_type"/>
  <xs:element name="ResiduePDBInfoHasLabel" type="resfilter_ResiduePDBInfoHasLabel_type"/>
  <xs:element name="ResidueType" type="resfilter_ResidueType_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="resfilter_AllResFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Compound filter. Select all residues.
 </xs:documentation></xs:annotation>
 <xs:group ref="res_filter" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="resfilter_AnyResFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Compound filter. Any number of subfilters may be declared.
 </xs:documentation></xs:annotation>
 <xs:group ref="res_filter" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:simpleType name="chain_character">
 <xs:restriction base="xs:string">
  <xs:pattern value="[a-zA-Z]"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="resfilter_ChainIs_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="chain_character" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Select chain by chain ID.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="resfilter_ChainIsnt_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="chain_character" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Select chain by chain ID.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="resfilter_NoResFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Compound filter. Excludes residues specified in sub-tags from a task.
 </xs:documentation></xs:annotation>
 <xs:group ref="res_filter" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="resfilter_ProteinCore_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="distance_threshold" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_cutoff" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_count_cutoff" type="non_negative_integer" default="6">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="resfilter_ResidueHasProperty_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="property" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Select residues based on the give properties (DNA, PROTEIN, POLAR, CHARGED))
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="resfilter_ResidueIndexIs_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="indices" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of residues to be selected.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="resfilter_ResidueIndexIsnt_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="indices" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of residues to be selected.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="resfilter_ResidueLacksProperty_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="property" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Select residues based on the give properties (DNA, PROTEIN, POLAR, CHARGED))
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="resfilter_ResidueName3Is_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name3" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Select resides by three letter code, e.g ARG,LYS
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="resfilter_ResidueName3Isnt_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name3" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Select resides by three letter code, e.g ARG,LYS
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="resfilter_ResiduePDBInfoHasLabel_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="property" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Select residues based on ther pose::ResidueRecord.label
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="resfilter_ResidueType_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="polar" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Select polar residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apolar" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Select apolar residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aromatic" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Select aromatic residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="charged" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Select chared residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_OperateOnCertainResidues_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Applies the specified residue-level task operations to residues selected in the provided residue selectors.
 </xs:documentation></xs:annotation>
 <xs:sequence>
  <xs:group ref="res_filter"/>
  <xs:group ref="res_lvl_task_op"/>
 </xs:sequence>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_OperateOnResidueSubset_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  OperateOnResidueSubset is a TaskOperation that applies one or more ResLevelTaskOperations to the residues indicated by a ResidueSelector. The ResidueSelector can either be previously defined, or constructed as a subtag beneath the main tag, or can be composed using boolean AND, OR, and ! (not) operations using the selector_logic attribute.
 </xs:documentation></xs:annotation>
 <xs:sequence>
  <xs:group ref="residue_selector" minOccurs="0" maxOccurs="1"/>
  <xs:group ref="res_lvl_task_op" minOccurs="0" maxOccurs="unbounded"/>
 </xs:sequence>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector that indicates to which residues the operation will be applied. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selector_logic" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Logically combine already-delcared ResidueSelectors using boolean AND, OR, and ! (not) operators. As convnetional, ! (not) has the highest precedence, then AND, then OR. Parentheses may be used to group operations together.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_level_operations" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of residue-level-task operations that will be retrieved from the DataMap.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_OptCysHG_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  run optH on non-disulfided bonded CYS only; meant to relieve any clashes caused by swapping of CYD to CYS after calling conformation::detect_disulfides
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_OptH_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Optimize hydrogen placement at the time of a PDB load.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_PreserveCBeta_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Under development and untested. Use at your own risk.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_PreventChainFromRepacking_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_PreventRepacking_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Do not allow repacking at all for the specified residues. Freezes residues.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnum" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_PreventResiduesFromRepacking_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Do not allow repacking at all for a string of residues to repacking. Use comma-delimited list of residues
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_pdb_id" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   translate residues to reference pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma delimited list of residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ProhibitResidueProperties_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restrict the palette of ResidueTypes to those without the given properties.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="properties" type="string_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of ResidueProperties, none of which may be present in a ResidueType to design with it.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If provided, the TaskOperation will apply to the subset of residues specified. If not provided, the TaskOperation will apply to all residues in the Pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ProhibitSpecifiedBaseResidueTypes_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Prohibit the base ResidueTypes provided by name from the palette of ResidueTypes.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="base_types" type="string_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of ResidueTypes (by full base name).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If provided, the TaskOperation will apply to the subset of residues specified. If not provided, the TaskOperation will apply to all residues in the Pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ProteinInterfaceDesign_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restricts to the task that is the basis for protein-interface design.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_chain1" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   first chain to repack
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_chain2" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   2ndchain to repack
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_chain1" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   first chain to design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_chain2" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   2nd chain to design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_all_aas" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   allow all amino acid types for design. default: do not design to G/C/P
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_all_aas" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   design all amino acids. default: do not design G/C/P
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   residue with the jump
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_distance_cutoff" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Cbeta distance of chain where design/repack is allowed on other chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="modify_before_jump" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   change residues before the jump. For instance, if you want set repack on chain2 interfacial residues to true, and the rest of chain2 to false, and yet not change the task for chain1, then use this taskoperation with modify_before_jump=0
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="modify_after_jump" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   change residues after the jump
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ProteinLigandInterfaceUpweighter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="catres_interface_weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ProteinProteinInterfaceUpweighter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  scaling factor for the interaction energy of the residue pairs across the interface.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   scaling factor for the interaction energy of the residue pairs across the interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_loop_in_chain" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma seperated chain idenfitiers for chains that the weight related to its loops are retained to 1.0
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_PruneBuriedUnsats_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Eliminate rotamers that contain a sidechain buried unsat and make no other sidechain h-bonds.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_even_trades" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow residues that satisfy an unsat and create a new unsatisfiable one.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomic_depth_probe_radius" type="real" default="2.3">
  <xs:annotation><xs:documentation xml:lang="en">
   Probe radius for atomic depth calculation to determine burial.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomic_depth_resolution" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Voxel resolution with which to calculate atomic depth.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomic_depth_cutoff" type="real" default="4.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Atomic depth at which atoms are considered buried.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimum_hbond_energy" type="real" default="-0.2">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum energy (out of the typical rosetta -2.0) for a hbond to be considered to satisfy a polar.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ReadResfile_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Read a resfile.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a filename is given, read from that file. Otherwise, read the file specified on the commandline with -packing:resfile.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optionally, a previously-defined ResidueSelector may be specified using the selector=(some string) option. If this is used, then the ResidueSelector is used as a mask, and the ReadResfile TaskOperation is applied only to those residues selected by the ResidueSelector, even if the resfile lists other residues as well. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ReadResfileAndObeyLengthEvents_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Read resfile and obey length events. IMPORTANT: only use this if any length changes are not reflected in the pose's pdb info, such as seems to be the case after vlb not quite certain on the ideal approach yet. it's prolly best to parse the resfile, and then apply the ResfileCommands to the remapped residues. this necessitates getting the ResfileContents. the code under 2. here is some duplication of ResfileReader::parse_resfile/parse_resfile_string, ideally this and ResfileReader should be refactored a bit.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a filename is given, read from that file. Otherwise, read the file specified on the commandline with -packing:resfile.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optionally, a previously-defined ResidueSelector may be specified using the selector=(some string) option. If this is used, then the ResidueSelector is used as a mask, and the ReadResfile TaskOperation is applied only to those residues selected by the ResidueSelector, even if the resfile lists other residues as well. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="default_commands_for_inserts" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   apply the ResfileCommands to the remapped seqpos.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ReadResfileFromDB_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This task operation will query a database for a resfile string. The table in the database should have a column named 'resfile' and a (key) column named 'tag'. The 'selection_tag' attribute for this task operation should be used to say which row to query from the database.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If this is used, then the ResidueSelector is used as a mask, and the ReadResfile TaskOperation is applied only to those residues selected by the ResidueSelector, even if the resfile lists other residues as well. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_table" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The table in the database from which to read
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="table" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The table in the database from which to read (same as database_table)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selection_tag" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The tag to use to identify the row in the indicated table that will be read from for the indicated job. In JD3, this can/should be combined with the script_vars flag so that different jobs can read different resfiles. This is a marked departure from the JD2 functionality which relied on the global data representing the currently-running job. That functionality is now removed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="db_session_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name for the (previously declared) DatabaseSession object to retrieve from the DataMap; if this option is given, then it will take precedence over the other database-session-defining attributes that are also allowed for this element. DatabaseSession objects are declared in the DATABASE_SESSIONS top-level block in RosettaScripts.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="transaction_mode" type="database_transaction_mode_string" default="standard">
  <xs:annotation><xs:documentation xml:lang="en">
   Transaction mode for database output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_mode" type="database_mode_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which type of output database to use?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of output database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_pq_schema" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Schema name within the database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_separate_db_per_mpi_process" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a separate database for each MPI process? (sqlite3 only.) Incompatible with database_partition.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_partition" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Database partition to use. (sqlite3 only.) Incompatible with database_separate_db_per_mpi_process.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_read_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Is the database read-only? (sqlite3 only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_host" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   URI to the database server (postgres and mysql only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_user" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Username for database access( postgres and mysql only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_password" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Password for database access (postgres and mysql only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_port" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Port to use for access to database server (postgres only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="batch_description" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Description of features database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="protocol_id" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Manually controls protocol_id associated with this ReportToDB tag. Autoincrements by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="batch_id" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Manually controls the batch_id associated with this ReportToDB tag. Autoincrements by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_transactions" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use transactions to group database i/o to be more efficient. Turning them off can help debugging.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_size" type="non_negative_integer" default="2000">
  <xs:annotation><xs:documentation xml:lang="en">
   Specify the maximum number 1k pages to keep in memory before writing to disk.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_xray_virt" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Remove virtual residue attached during xray refine process
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relevant_residues_mode" type="report_to_db_relevant_residues_mode" default="explicit">
  <xs:annotation><xs:documentation xml:lang="en">
   Determine what features are reported given the relevant residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RemodelRotamerLinks_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO: no documentation online, setup RemodelRotamerLinks.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ResfileCommandOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Applies the equivalent of a resfile line (without the resnums) to residues specified in a residue selector.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="command" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   @brief A resfile command string without any numbers in the front.
Example:
 POLAR
 PIKAA X[R2]X[T6]X[OP5] 

   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ResidueProbDesignOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Randomly adds allowed residue types to the PackerTask. Based on the user specified weights [0.0-1.0] for each residue type per position this operation will add the residue type to the list of allowed design residues in a non-deterministic manner.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weights_file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to a file containting weights for each residue type at each position in the following format:
POSNUM RESIDUETYPE WEIGHT
With weight as a real number between 0.0 and 1.0. Unspecified residues and/or residue types will automatically default to a weight of 1.0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_native_restype" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   The native residue type is always an allowed residue type.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_zero_probs" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Overwrite the sampling probability for all residue types with a weight of zero with the given weight. For example, if you have a probability of zero, you can sample this instead at like .3 or .5 or whatever you want. The idea is that you don't need to go and change your input data to add some variability in the data - useful if you have a very low sampling rate of the input data.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_probabilities" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we sample ALL AA that does not have prob of 0 at 1.0 instead?  This basically works to add ALL AA seen at a given position in a particular cluster to the set of design residues.  Used to increase variability of designs or for testing purposes
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="picking_rounds" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Allowed residue types can be sampled multiple times.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictAbsentCanonicalAAS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restrict design to user-specified residues. If resnum is left as 0, the restriction will apply throughout the pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnum" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Restrict design to user-specified residues. If =0, all residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_aas" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Canonical amino acids to keep.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictByCalculators_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictChainToRepacking_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rtas_subelement_AlignedSegmentType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="source_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictToAlignedSegments_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="AlignedSegment" type="rtas_subelement_AlignedSegmentType"/>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="source_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_shell" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictConservedLowDdg_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:all>
  <xs:element name="ProteinInterfaceDesign" type="to_ProteinInterfaceDesign_type" minOccurs="0" maxOccurs="1"/>
  <xs:element name="RestrictToAlignedSegments" type="to_RestrictToAlignedSegments_type" minOccurs="0" maxOccurs="1"/>
 </xs:all>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_occurrence_data" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we restrict positions to mutations that have occurrence larger than zero
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_to_repacking" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="convert_scores_to_probabilities" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_aa_probability" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_native" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="probability_larger_than_current" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_pose_profile_length_mismatch" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debug" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="conservation_cutoff_aligned_segments" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="conservation_cutoff_protein_interface_design" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ddG_filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="conservation_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ddG_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictDesignToProteinDNAInterface_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restrict Design and repacking to protein residues around the defined DNA bases
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dna_defs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   dna positions to design around, separated by comma (e.g. C.405.THY,C.406.GUA). The definitions should refer only to one DNA chain, the complementary bases are automatically retrieved. Bases are ADE, CYT, GUA, THY. The base (and its complementary) in the starting structure will be mutated according to the definition, if not prevented from another task operation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="base_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   only residues within reach of the DNA bases are considered
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   limit the protein interface positions to the ones that have a projection of their distance vector on DNA axis lower than this threshold. It prevents designs that are too far away along the helical axis
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="close_threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   C-Beta (except Glycine) to baes atom-atom distance threshold not including ribose or phosphate backbone. Used to determine residues close to DNA
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="contact_threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold of contacting residues with DNA
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="forget_chains_and_interface" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Abandon existing dna chains and interface info to prevent accumulation of state
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictIdentities_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="identities" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prevent_repacking" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictIdentitiesAtAlignedPositions_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="source_pdb" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Template pdb to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="int_cslist" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   residue numbers to restrcit
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   chain attribute
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_only_target_residues" type="xs:boolean" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   should we design only target residues?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prevent_repacking" type="xs:boolean" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Don't repack these positions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_aas" type="xs:string" default="ACDEFGHIKLMNPQRSTVWY">
  <xs:annotation><xs:documentation xml:lang="en">
   Which AA's to keep
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_shell" type="xs:string" default="0.01">
  <xs:annotation><xs:documentation xml:lang="en">
   Design_shell
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_shell" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Repack_chell
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictInterGroupVectorOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictInteractionGraphThreadsOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The RestrictInteractionGraphThreadsOperation limits the number of threads allowed for interaction graph pre-computation.  By default, all available threads are used.  Note that this only has an effect in the multi-threaded build of Rosetta (built with the "extras=cxx11thread" option).
This TaskOperation was written on Saturday, 19 October 2019 by Vikram K. Mulligan, Flatiron Institute (vmulligan@flatironinstitute.org).
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="thread_limit" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum number of threads allowed for interaction graph precomputation.  Setting this to 0 imposes no limit.  Note that this task operation will only lower the number of allowed threads.  That is, if other flags or task operations limit the allowed threads to fewer than this task operation allows, the minimum value will be used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictNativeResidues_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prevent_repacking" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdbname" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictNonSurfaceToRepacking_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="surface_exposed_nb_count_cutoff" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictResidueToRepacking_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restrict a single residue to repacking. No design.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnum" type="positive_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Single residue number.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictResiduesToRepacking_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_pdb_id" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictToCDRH3Loop_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictToCDRsAndNeighbors_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
  Restrict (design and/or packing) to specific CDRs and neighbors
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdrs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   List of CDR regions (string) devided by one of the following characters: ":,'`~+*|;. "Recognized CDRs: "Aroop|Chothia|Kabat|Martin|North|"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_dis" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Neighbor detection distance
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_cdrs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we allow design to the CDRs?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_antigen" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Shoule we allow design to neighboring antigen residues?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_framework" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Shoule we allow design to neighboring framework residues?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stem_size" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Length of the stem to also select
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdr_definition" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The Specific CDR definition to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_ab_scheme" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The Sepcific input antibody scheme to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictToInterface_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   compute interface for this jump number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   compute interface for jump associated with this chain number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance" type="real" default="8">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_all_water" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   add all water to interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictToInterfaceOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictToInterfaceVector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain1_num" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain2_num" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="CB_dist_cutoff" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nearby_atom_cutoff" type="real" default="5.5">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="vector_angle_cutoff" type="real" default="75.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="vector_dist_cutoff" type="real" default="9.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_all_water" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   add all waters to interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictToLoops_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_only_design_to_loops" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictToLoopsAndNeighbors_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A TaskOp that restricts packing and/or design to the loops specified and optionally the neighbors.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_only_design_to_loops" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_neighbors" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we include neighbors?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_neighbors" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we design neighbors?  Default False.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutoff_dist" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance for neighbor detection. default 10.0
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictToNeighborhood_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictToRepacking_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Only allow residues to repack. No design at any position.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictToResidueProperties_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restrict the palette of ResidueTypes to those with the given properties.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="properties" type="string_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of ResidueProperties, all of which must be present in a ResidueType to design with it.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If provided, the TaskOperation will apply to the subset of residues specified. If not provided, the TaskOperation will apply to all residues in the Pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictToSpecifiedBaseResidueTypes_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restrict the palette of ResidueTypes to the base ResidueTypes provided by name.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="base_types" type="string_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of ResidueTypes (by full base name).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If provided, the TaskOperation will apply to the subset of residues specified. If not provided, the TaskOperation will apply to all residues in the Pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictToTermini_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_n_terminus" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_c_terminus" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RestrictYSDesign_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restrict amino acid choices during design to Tyr and Ser. This is similar to the restricted YS alphabet used by Sidhu's group during in vitro evolution experiments. Under development and untested. Use at your own risk.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="pose_cached_task_operation">
 <xs:restriction base="xs:string">
  <xs:pattern value="[A-Za-z][A-Za-z0-9\-_]*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="to_RetrieveStoredTask_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Retrieves a task operation that has been cached in the datacache of a Pose object.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_name" type="pose_cached_task_operation">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-stored task operation to retrieve from the datacache of a Pose object.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_RotamerExplosionCreator_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sample residue chi angles much more finely during packing. Currently hardcoded to use three 1/3 step standard deviation.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnum" type="positive_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Chi level 0-3?
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subsubtag_Srfp_Segment_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  individual segment tag
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb_profile_match" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   text file matching pdb name to profile
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rot_lib" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_Srfp_Segments_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Wrapper for multiple segments tags
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Segment" type="subsubtag_Srfp_Segment_type"/>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_SampleRotamersFromPDB_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restrict rotamer selctions to ones derived from natural PDBs
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Segments" type="subtag_Srfp_Segments_type"/>
 </xs:choice>
 <xs:attribute name="add_rotamer" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, add the sampled rotamer to rotamer vector, otherwise just delete rotamers that are not in input pdbs/rotamaer database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debug" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   make output more verbose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ccd" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   do not modify residues with CUT_LOWER/CUT_UPPER property
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aligned_positions" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   only apply to this taskoperation to specific positions.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_SelectByDeltaScore_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restrict design to residues passing a user-specified threshold on a given score type.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_type" type="xs:string" default="total_score">
  <xs:annotation><xs:documentation xml:lang="en">
   Loop over the independent residues, assess score_type for each residue.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Restrict residues to repack based on whether they pass this threshold.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lower" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Higher or lower than threshold.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="individual_hbonds" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, get Hbond set.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Reference pdb filename.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_SelectByDensityFit_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restrict design to residues with electron density correlation above threshold value.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="0.72">
  <xs:annotation><xs:documentation xml:lang="en">
   threshold value, electron density correlation must be above to pass
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   invert_ flips the Boolean when true
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="SelectBySASAOperation_mode_choices">
 <xs:restriction base="xs:string">
  <xs:enumeration value="mc"/>
  <xs:enumeration value="sc"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="SelectBySASAOperation_state_choices">
 <xs:restriction base="xs:string">
  <xs:enumeration value="monomer"/>
  <xs:enumeration value="bound"/>
  <xs:enumeration value="unbound"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="to_SelectBySASA_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Select residues by their solvent accessible surface area in either the monomeric, bound, or unbound state of the pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mode" type="SelectBySASAOperation_mode_choices" default="sc">
  <xs:annotation><xs:documentation xml:lang="en">
   Options: 'mc' or 'sc'. Atoms to be evaluated during the SASA calculation. The default is to consider the total SASA of the sidechain atoms of each residue --mode='sc', but one can alternatively consider the total SASA of the mainchain + CB atoms of each residue --mode='mc'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="state" type="SelectBySASAOperation_state_choices" default="monomer">
  <xs:annotation><xs:documentation xml:lang="en">
   Options: 'monomer', 'bound', or 'unbound'. Specify the state you would like the SASA to be evaluate in. If state='monomer', then each chain will be extracted from the pose and the SASA evaluated separately on each of these monomeric poses. If state='bound', then the pose is not modified before evaluating SASAs. If state='unbound', then the chains are translated 1000 angstroms along the user specified jumps or sym_dofs prior to evaluating SASAs.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="probe_radius" type="real" default="2.2">
  <xs:annotation><xs:documentation xml:lang="en">
   Probe radius for calculating the solvent accessible surface area. Note: the default is larger than the typical used to represent water of 1.4 angstroms, but has been found to work well with the other default parameters for protein redesign purposes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="core_asa" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Upper accessible surface area cutoff for a residue to be considered core. Any residue with a value below core_asa will be selected as core.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="surface_asa" type="real" default="30">
  <xs:annotation><xs:documentation xml:lang="en">
   Lower accessible surface area cutoff for a residue to be considered surface. Any residue with a value above surface_asa will be selected as surface. Any residue with a value between core_asa and surface_asa will be considered boundary.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jumps" type="int_cslist" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of jumps to be translated along if mode='unbound'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_names" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of sym_dof_names controlling master symmetric DOFs to be translated along if mode='unbound'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="core" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should core positions be designable? If yes, then set core=true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="boundary" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should boundary positions be designable? If yes, then set boundary=true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="surface" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should surface positions be designable? If yes, then set surface=true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to true, then extra information will be output to the tracer, including PyMOL selections of the residues considered to be core, boundary, and surface. Aids in testing out appropriate parameters for a given system and verifying that the positions are being selected as desired.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_SelectResiduesWithinChain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Selects a list of residues within a chain for design/repacking according to internal chain numbering.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Which chain. Use only sequential numbering: 1, 2..
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resid" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residues within the chain. Again, only numbering: 24,35.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_design" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, allows design at selected positions.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_repacking" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, allows repacking at selected positions.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="modify_unselected_residues" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If modify_unselected_residues is true all other residues are set to norepack.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_SeqprofConsensus_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:all>
  <xs:element name="ProteinInterfaceDesign" type="to_ProteinInterfaceDesign_type" minOccurs="0" maxOccurs="1"/>
  <xs:element name="RestrictToAlignedSegments" type="to_RestrictToAlignedSegments_type" minOccurs="0" maxOccurs="1"/>
 </xs:all>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_occurrence_data" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we restrict positions to mutations that have occurrence larger than zero
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_to_repacking" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="convert_scores_to_probabilities" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_aa_probability" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_native" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="probability_larger_than_current" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_pose_profile_length_mismatch" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debug" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="conservation_cutoff_aligned_segments" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="conservation_cutoff_protein_interface_design" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_SequenceMotifTaskOperation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A TaskOp that takes a regex-like pattern and turns it into a set of design residues.  The string should identify what to do for each position.  Does not TURN OFF design or packing for ANY residue other than those specified in the motif as '-' or with specific resfile command!
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="motif" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
     This is slightly similar to a regex, but not quite. We are not matching a sequence,
   we are designing in a motif regardless of the current sequence, anywhere in a protein.

   - Each letter corresponds to a position. Using [ ] indicates a more complicated expression for that position.
   - An X indicates it can be anything, and that we are designing here.
   - An AA Letter, like V, indicates that that position will be designed to a V.
   - A - charactor indicates that that position stays with whatever it is currently.  We essentially skip this position.
   - An expression like: [^PAV] indicates that we will design anything except Proline, Alanine, and Valine 
   - An expression like: [NTS] indicates that that position can be Asparigine, Threonine, or Serine and 
      only of these will be enabled during the design.
   - RESFILE commands are accepted as well. These require a % charactor in from of the whole expression.
     For example [%POLAR] would set that position to only polar design.

 EXAMPLE:
  Glycosylation N-Linked motif design: N[^P][ST]


   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_SetCatalyticResPackBehavior_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Ensures that catalytic residues as specified in a match/constraint file do not get designed. If no option is specified the constrained residues will be set to repack only (not design).
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fix_catalytic_aa" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to 1, the catalytic residues will be set to fixed (non-repacking).  Otherwise they will be set to repack only (not design).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="behavior_non_catalytic" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Pass a resfile-style command to apply to non-catalytic residues.  For example, NATRO, PIKAA, etc.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_SetIGType_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Task operation to set interaction graph type -linmem, lazy or double lazy.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lin_mem_ig" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Interaction graph type lin_mem-ig.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lazy_ig" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Interaction graph type lazy_ig.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="double_lazy_ig" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Interaction graph type double_lazy_ig.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="precompute_ig" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Interaction graph type precompute_ig.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_SetRotamerCouplings_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Rotamer couplings cannot currently be provided through the RosettaScripts interface. Under development and untested. Use at your own risk.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_SetRotamerLinks_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Rotamer links cannot currently be specified through the RosettaScripts interface (C++/PyRosetta only). Sets rotamer links
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_ThreadSequence_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Threads a single letter sequence onto the source pdb.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_sequence" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The target sequence can contain two types of 'wildcards'. Placing 'x' in the sequence results in design at this position: target_sequence='TFYxxxHFS' will thread the two specified tripeptides and allow design in the intervening tripeptide. Placing ' ' (space) or '_' (underscore), however, restricts this position to repacking: the string 'TFY HFS' (three spaces between the two triplets) will thread the two tripeptides and will repack the pose's original intervening tripeptide. The string 'TFY___HFS' -three underscores between the two triplets- will also only repack the original intervening tripeptide.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_res" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue at which to start.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_design_around" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to false, only design the region that is threaded. The rest is set to repack.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Which chain to apply the sequence to. If 0 - the entire structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_non_aas" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to true non amino acid residues will not be threaded
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_UseMultiCoolAnnealer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="states" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of states
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="to_WatsonCrickRotamerCouplings_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Ensures Watson-Crick base pairing of DNA which may be lost during repacking otherwise.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="task_op_loader_TASKOPERATIONS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="task_operation" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:group name="mover">
 <xs:choice>
  <xs:element name="AbscriptLoopCloserCM" type="mover_AbscriptLoopCloserCM_type"/>
  <xs:element name="AbscriptMover" type="mover_AbscriptMover_type"/>
  <xs:element name="AcceptToBestMover" type="mover_AcceptToBestMover_type"/>
  <xs:element name="AddChain" type="mover_AddChain_type"/>
  <xs:element name="AddChainBreak" type="mover_AddChainBreak_type"/>
  <xs:element name="AddCompositionConstraintMover" type="mover_AddCompositionConstraintMover_type"/>
  <xs:element name="AddConstraints" type="mover_AddConstraints_type"/>
  <xs:element name="AddConstraintsToCurrentConformationMover" type="mover_AddConstraintsToCurrentConformationMover_type"/>
  <xs:element name="AddEncounterConstraintMover" type="mover_AddEncounterConstraintMover_type"/>
  <xs:element name="AddFoldPropensityRestypeConstraints" type="mover_AddFoldPropensityRestypeConstraints_type"/>
  <xs:element name="AddHelixSequenceConstraints" type="mover_AddHelixSequenceConstraints_type"/>
  <xs:element name="AddHydrogens" type="mover_AddHydrogens_type"/>
  <xs:element name="AddJobPairData" type="mover_AddJobPairData_type"/>
  <xs:element name="AddMHCEpitopeConstraintMover" type="mover_AddMHCEpitopeConstraintMover_type"/>
  <xs:element name="AddMPLigandMover" type="mover_AddMPLigandMover_type"/>
  <xs:element name="AddMembraneMover" type="mover_AddMembraneMover_type"/>
  <xs:element name="AddMembraneSpanConstraint" type="mover_AddMembraneSpanConstraint_type"/>
  <xs:element name="AddMembraneSpanTermZConstraint" type="mover_AddMembraneSpanTermZConstraint_type"/>
  <xs:element name="AddMover" type="mover_AddMover_type"/>
  <xs:element name="AddNetChargeConstraintMover" type="mover_AddNetChargeConstraintMover_type"/>
  <xs:element name="AddOrRemoveMatchCsts" type="mover_AddOrRemoveMatchCsts_type"/>
  <xs:element name="AddPDBInfoMover" type="mover_AddPDBInfoMover_type"/>
  <xs:element name="AddResidueCouplingConstraint" type="mover_AddResidueCouplingConstraint_type"/>
  <xs:element name="AddResidueLabel" type="mover_AddResidueLabel_type"/>
  <xs:element name="AddSapConstraintMover" type="mover_AddSapConstraintMover_type"/>
  <xs:element name="AddSapMathConstraintMover" type="mover_AddSapMathConstraintMover_type"/>
  <xs:element name="AddSegmentDataMover" type="mover_AddSegmentDataMover_type"/>
  <xs:element name="AddSidechainConstraintsToHotspots" type="mover_AddSidechainConstraintsToHotspots_type"/>
  <xs:element name="AlignByResidueSelectorMover" type="mover_AlignByResidueSelectorMover_type"/>
  <xs:element name="AlignChain" type="mover_AlignChain_type"/>
  <xs:element name="AlignEnds" type="mover_AlignEnds_type"/>
  <xs:element name="AlignPDBInfoToSequences" type="mover_AlignPDBInfoToSequences_type"/>
  <xs:element name="AlignResiduesMover" type="mover_AlignResiduesMover_type"/>
  <xs:element name="AnalyzeLoopModeling" type="mover_AnalyzeLoopModeling_type"/>
  <xs:element name="AnchoredGraftMover" type="mover_AnchoredGraftMover_type"/>
  <xs:element name="AntibodyCDRGrafter" type="mover_AntibodyCDRGrafter_type"/>
  <xs:element name="AntibodyDesignMover" type="mover_AntibodyDesignMover_type"/>
  <xs:element name="AntibodyNumberingConverterMover" type="mover_AntibodyNumberingConverterMover_type"/>
  <xs:element name="AppendAssemblyMover" type="mover_AppendAssemblyMover_type"/>
  <xs:element name="AssemblyMover" type="mover_AssemblyMover_type"/>
  <xs:element name="AsymFoldandDockMoveRbJumpMover" type="mover_AsymFoldandDockMoveRbJumpMover_type"/>
  <xs:element name="AsymFoldandDockRbTrialMover" type="mover_AsymFoldandDockRbTrialMover_type"/>
  <xs:element name="AtomCoordinateCstMover" type="mover_AtomCoordinateCstMover_type"/>
  <xs:element name="AtomTree" type="mover_AtomTree_type"/>
  <xs:element name="Auction" type="mover_Auction_type"/>
  <xs:element name="BBGaussian" type="mover_BBGaussian_type"/>
  <xs:element name="BackboneGridSampler" type="mover_BackboneGridSampler_type"/>
  <xs:element name="BackboneSampler" type="mover_BackboneSampler_type"/>
  <xs:element name="BackboneTorsionPerturbation" type="mover_BackboneTorsionPerturbation_type"/>
  <xs:element name="BackboneTorsionSampler" type="mover_BackboneTorsionSampler_type"/>
  <xs:element name="Backrub" type="mover_Backrub_type"/>
  <xs:element name="BackrubDD" type="mover_BackrubDD_type"/>
  <xs:element name="BackrubProtocol" type="mover_BackrubProtocol_type"/>
  <xs:element name="BackrubSidechain" type="mover_BackrubSidechain_type"/>
  <xs:element name="BenchmarkBuildRotamersMover" type="mover_BenchmarkBuildRotamersMover_type"/>
  <xs:element name="BestHotspotCst" type="mover_BestHotspotCst_type"/>
  <xs:element name="BfactorFitting" type="mover_BfactorFitting_type"/>
  <xs:element name="BluePrintBDR" type="mover_BluePrintBDR_type"/>
  <xs:element name="BoltzmannRotamerMover" type="mover_BoltzmannRotamerMover_type"/>
  <xs:element name="BridgeChains" type="mover_BridgeChains_type"/>
  <xs:element name="BuildDeNovoBackboneMover" type="mover_BuildDeNovoBackboneMover_type"/>
  <xs:element name="BundleGridSampler" type="mover_BundleGridSampler_type"/>
  <xs:element name="CAcstGenerator" type="mover_CAcstGenerator_type"/>
  <xs:element name="CCDEndsGraftMover" type="mover_CCDEndsGraftMover_type"/>
  <xs:element name="CCDLoopCloser" type="mover_CCDLoopCloser_type"/>
  <xs:element name="CCDLoopClosureMover" type="mover_CCDLoopClosureMover_type"/>
  <xs:element name="CDRDihedralConstraintMover" type="mover_CDRDihedralConstraintMover_type"/>
  <xs:element name="CartesianMD" type="mover_CartesianMD_type"/>
  <xs:element name="CartesianSampler" type="mover_CartesianSampler_type"/>
  <xs:element name="ChangeAndResetFoldTreeMover" type="mover_ChangeAndResetFoldTreeMover_type"/>
  <xs:element name="CircularPermutation" type="mover_CircularPermutation_type"/>
  <xs:element name="ClearCompositionConstraintsMover" type="mover_ClearCompositionConstraintsMover_type"/>
  <xs:element name="ClearConstraintsMover" type="mover_ClearConstraintsMover_type"/>
  <xs:element name="CloseFold" type="mover_CloseFold_type"/>
  <xs:element name="CoMTrackerCM" type="mover_CoMTrackerCM_type"/>
  <xs:element name="CompoundTranslate" type="mover_CompoundTranslate_type"/>
  <xs:element name="ComputeLigandRDF" type="mover_ComputeLigandRDF_type"/>
  <xs:element name="ConcatenatePosesMover" type="mover_ConcatenatePosesMover_type"/>
  <xs:element name="ConformerSwitchMover" type="mover_ConformerSwitchMover_type"/>
  <xs:element name="ConnectChainsMover" type="mover_ConnectChainsMover_type"/>
  <xs:element name="ConnectJumps" type="mover_ConnectJumps_type"/>
  <xs:element name="ConsensusDesignMover" type="mover_ConsensusDesignMover_type"/>
  <xs:element name="ConstraintPreparer" type="mover_ConstraintPreparer_type"/>
  <xs:element name="ConstraintSetMover" type="mover_ConstraintSetMover_type"/>
  <xs:element name="ContactMap" type="mover_ContactMap_type"/>
  <xs:element name="ContingentAccept" type="mover_ContingentAccept_type"/>
  <xs:element name="ConvertRealToVirtualMover" type="mover_ConvertRealToVirtualMover_type"/>
  <xs:element name="ConvertVirtualToRealMover" type="mover_ConvertVirtualToRealMover_type"/>
  <xs:element name="CoordinateCst" type="mover_CoordinateCst_type"/>
  <xs:element name="CopyRotamer" type="mover_CopyRotamer_type"/>
  <xs:element name="CoupledMover" type="mover_CoupledMover_type"/>
  <xs:element name="CoupledMovesProtocol" type="mover_CoupledMovesProtocol_type"/>
  <xs:element name="CreateAngleConstraint" type="mover_CreateAngleConstraint_type"/>
  <xs:element name="CreateDistanceConstraint" type="mover_CreateDistanceConstraint_type"/>
  <xs:element name="CreateGlycanSequonMover" type="mover_CreateGlycanSequonMover_type"/>
  <xs:element name="CreateSequenceMotifMover" type="mover_CreateSequenceMotifMover_type"/>
  <xs:element name="CreateTorsionConstraint" type="mover_CreateTorsionConstraint_type"/>
  <xs:element name="CrosslinkerMover" type="mover_CrosslinkerMover_type"/>
  <xs:element name="CrystRMS" type="mover_CrystRMS_type"/>
  <xs:element name="CstInfoMover" type="mover_CstInfoMover_type"/>
  <xs:element name="CutOutDomain" type="mover_CutOutDomain_type"/>
  <xs:element name="DNAMethyltransferaseMover" type="mover_DNAMethyltransferaseMover_type"/>
  <xs:element name="DeclareBond" type="mover_DeclareBond_type"/>
  <xs:element name="DeclareStructureDataCovalentBondMover" type="mover_DeclareStructureDataCovalentBondMover_type"/>
  <xs:element name="DefineMovableLoops" type="mover_DefineMovableLoops_type"/>
  <xs:element name="DeleteChain" type="mover_DeleteChain_type"/>
  <xs:element name="DeleteChainsMover" type="mover_DeleteChainsMover_type"/>
  <xs:element name="DeleteRegionMover" type="mover_DeleteRegionMover_type"/>
  <xs:element name="DesignMinimizeHbonds" type="mover_DesignMinimizeHbonds_type"/>
  <xs:element name="DesignProteinBackboneAroundDNA" type="mover_DesignProteinBackboneAroundDNA_type"/>
  <xs:element name="DetectSymmetry" type="mover_DetectSymmetry_type"/>
  <xs:element name="DirectSegmentLookupMover" type="mover_DirectSegmentLookupMover_type"/>
  <xs:element name="DisplayPoseLabelsMover" type="mover_DisplayPoseLabelsMover_type"/>
  <xs:element name="DisulfideInsertion" type="mover_DisulfideInsertion_type"/>
  <xs:element name="DisulfideMover" type="mover_DisulfideMover_type"/>
  <xs:element name="DisulfideOptimizationMover" type="mover_DisulfideOptimizationMover_type"/>
  <xs:element name="Disulfidize" type="mover_Disulfidize_type"/>
  <xs:element name="DnaInterfaceMinMover" type="mover_DnaInterfaceMinMover_type"/>
  <xs:element name="DnaInterfaceMultiStateDesign" type="mover_DnaInterfaceMultiStateDesign_type"/>
  <xs:element name="DnaInterfacePacker" type="mover_DnaInterfacePacker_type"/>
  <xs:element name="DockLatticeMover" type="mover_DockLatticeMover_type"/>
  <xs:element name="DockMCMProtocol" type="mover_DockMCMProtocol_type"/>
  <xs:element name="DockMinMover" type="mover_DockMinMover_type"/>
  <xs:element name="DockSetupMover" type="mover_DockSetupMover_type"/>
  <xs:element name="DockWithHotspotMover" type="mover_DockWithHotspotMover_type"/>
  <xs:element name="Docking" type="mover_Docking_type"/>
  <xs:element name="DockingHighResLegacy" type="mover_DockingHighResLegacy_type"/>
  <xs:element name="DockingInitialPerturbation" type="mover_DockingInitialPerturbation_type"/>
  <xs:element name="DockingPrepackProtocol" type="mover_DockingPrepackProtocol_type"/>
  <xs:element name="DockingProtocol" type="mover_DockingProtocol_type"/>
  <xs:element name="DockingSlideIntoContact" type="mover_DockingSlideIntoContact_type"/>
  <xs:element name="DomainAssembly" type="mover_DomainAssembly_type"/>
  <xs:element name="Dssp" type="mover_Dssp_type"/>
  <xs:element name="DumpPdb" type="mover_DumpPdb_type"/>
  <xs:element name="DumpSingleResidueRotamers" type="mover_DumpSingleResidueRotamers_type"/>
  <xs:element name="DumpStatsSS" type="mover_DumpStatsSS_type"/>
  <xs:element name="ERRASER2Protocol" type="mover_ERRASER2Protocol_type"/>
  <xs:element name="Environment" type="mover_Environment_type"/>
  <xs:element name="EnzRepackMinimize" type="mover_EnzRepackMinimize_type"/>
  <xs:element name="EnzdesRemodelMover" type="mover_EnzdesRemodelMover_type"/>
  <xs:element name="ErraserMinimizerMover" type="mover_ErraserMinimizerMover_type"/>
  <xs:element name="EvolutionaryDynamics" type="mover_EvolutionaryDynamics_type"/>
  <xs:element name="ExplicitWaterMover" type="mover_ExplicitWaterMover_type"/>
  <xs:element name="ExtendChain" type="mover_ExtendChain_type"/>
  <xs:element name="ExtendedPoseMover" type="mover_ExtendedPoseMover_type"/>
  <xs:element name="ExternalPackerResultLoader" type="mover_ExternalPackerResultLoader_type"/>
  <xs:element name="ExtractAsymmetricPose" type="mover_ExtractAsymmetricPose_type"/>
  <xs:element name="ExtractAsymmetricUnit" type="mover_ExtractAsymmetricUnit_type"/>
  <xs:element name="ExtractSubposeMover" type="mover_ExtractSubposeMover_type"/>
  <xs:element name="FastDesign" type="mover_FastDesign_type"/>
  <xs:element name="FastRelax" type="mover_FastRelax_type"/>
  <xs:element name="FavorNativeResidue" type="mover_FavorNativeResidue_type"/>
  <xs:element name="FavorNonNativeResidue" type="mover_FavorNonNativeResidue_type"/>
  <xs:element name="FavorSequenceProfile" type="mover_FavorSequenceProfile_type"/>
  <xs:element name="FavorSymmetricSequence" type="mover_FavorSymmetricSequence_type"/>
  <xs:element name="FilterReportAsPoseExtraScoresMover" type="mover_FilterReportAsPoseExtraScoresMover_type"/>
  <xs:element name="FinalMinimizer" type="mover_FinalMinimizer_type"/>
  <xs:element name="FitBfactors" type="mover_FitBfactors_type"/>
  <xs:element name="FitSimpleHelix" type="mover_FitSimpleHelix_type"/>
  <xs:element name="FixAllLoopsMover" type="mover_FixAllLoopsMover_type"/>
  <xs:element name="FlexPepDock" type="mover_FlexPepDock_type"/>
  <xs:element name="FlipChiralityMover" type="mover_FlipChiralityMover_type"/>
  <xs:element name="FlipMover" type="mover_FlipMover_type"/>
  <xs:element name="FlxbbDesign" type="mover_FlxbbDesign_type"/>
  <xs:element name="FoldTreeFromLoops" type="mover_FoldTreeFromLoops_type"/>
  <xs:element name="FoldTreeFromMotif" type="mover_FoldTreeFromMotif_type"/>
  <xs:element name="ForceDisulfides" type="mover_ForceDisulfides_type"/>
  <xs:element name="FragmentCM" type="mover_FragmentCM_type"/>
  <xs:element name="FragmentExtension" type="mover_FragmentExtension_type"/>
  <xs:element name="FragmentJumpCM" type="mover_FragmentJumpCM_type"/>
  <xs:element name="FragmentLoopInserter" type="mover_FragmentLoopInserter_type"/>
  <xs:element name="FusePosesNtoCMover" type="mover_FusePosesNtoCMover_type"/>
  <xs:element name="GALigandDock" type="mover_GALigandDock_type"/>
  <xs:element name="GenMeanFieldMover" type="mover_GenMeanFieldMover_type"/>
  <xs:element name="GeneralizedKIC" type="mover_GeneralizedKIC_type"/>
  <xs:element name="GenericMonteCarlo" type="mover_GenericMonteCarlo_type"/>
  <xs:element name="GenericSimulatedAnnealer" type="mover_GenericSimulatedAnnealer_type"/>
  <xs:element name="GenericSymmetricSampler" type="mover_GenericSymmetricSampler_type"/>
  <xs:element name="GlycanInfoMover" type="mover_GlycanInfoMover_type"/>
  <xs:element name="GlycanSampler" type="mover_GlycanSampler_type"/>
  <xs:element name="GlycanTreeMinMover" type="mover_GlycanTreeMinMover_type"/>
  <xs:element name="GlycanTreeModeler" type="mover_GlycanTreeModeler_type"/>
  <xs:element name="GlycosyltransferaseMover" type="mover_GlycosyltransferaseMover_type"/>
  <xs:element name="GraftSwitchMover" type="mover_GraftSwitchMover_type"/>
  <xs:element name="GreedyOptMutationMover" type="mover_GreedyOptMutationMover_type"/>
  <xs:element name="GreedyPeptideFoldPropensityOptimization" type="mover_GreedyPeptideFoldPropensityOptimization_type"/>
  <xs:element name="GrowLigand" type="mover_GrowLigand_type"/>
  <xs:element name="GrowPeptides" type="mover_GrowPeptides_type"/>
  <xs:element name="HBNet" type="mover_HBNet_type"/>
  <xs:element name="HBNetStapleInterface" type="mover_HBNetStapleInterface_type"/>
  <xs:element name="HamiltonianExchange" type="mover_HamiltonianExchange_type"/>
  <xs:element name="HighResDocker" type="mover_HighResDocker_type"/>
  <xs:element name="HighResEnsemble" type="mover_HighResEnsemble_type"/>
  <xs:element name="HotspotDisjointedFoldTree" type="mover_HotspotDisjointedFoldTree_type"/>
  <xs:element name="HotspotHasher" type="mover_HotspotHasher_type"/>
  <xs:element name="Hybridize" type="mover_Hybridize_type"/>
  <xs:element name="Idealize" type="mover_Idealize_type"/>
  <xs:element name="IdealizeAnomericHydrogens" type="mover_IdealizeAnomericHydrogens_type"/>
  <xs:element name="IdealizeHelices" type="mover_IdealizeHelices_type"/>
  <xs:element name="If" type="mover_If_type"/>
  <xs:element name="InitializeByBins" type="mover_InitializeByBins_type"/>
  <xs:element name="InsertPoseIntoPoseMover" type="mover_InsertPoseIntoPoseMover_type"/>
  <xs:element name="InsertResMover" type="mover_InsertResMover_type"/>
  <xs:element name="InsertZincCoordinationRemarkLines" type="mover_InsertZincCoordinationRemarkLines_type"/>
  <xs:element name="InsertionSiteTestMover" type="mover_InsertionSiteTestMover_type"/>
  <xs:element name="InstallFarnesylMover" type="mover_InstallFarnesylMover_type"/>
  <xs:element name="InterfaceAnalyzerMover" type="mover_InterfaceAnalyzerMover_type"/>
  <xs:element name="InterfaceDdGMover" type="mover_InterfaceDdGMover_type"/>
  <xs:element name="InterfaceRecapitulation" type="mover_InterfaceRecapitulation_type"/>
  <xs:element name="InterfaceScoreCalculator" type="mover_InterfaceScoreCalculator_type"/>
  <xs:element name="InterlockAroma" type="mover_InterlockAroma_type"/>
  <xs:element name="InverseRotamersCstGenerator" type="mover_InverseRotamersCstGenerator_type"/>
  <xs:element name="InvrotTreeCstGenerator" type="mover_InvrotTreeCstGenerator_type"/>
  <xs:element name="IteratedConvergence" type="mover_IteratedConvergence_type"/>
  <xs:element name="IterativeLoophashLoopInserter" type="mover_IterativeLoophashLoopInserter_type"/>
  <xs:element name="JacobiLoopClosureMover" type="mover_JacobiLoopClosureMover_type"/>
  <xs:element name="JumpRotamerSidechain" type="mover_JumpRotamerSidechain_type"/>
  <xs:element name="KeepRegionMover" type="mover_KeepRegionMover_type"/>
  <xs:element name="KicMover" type="mover_KicMover_type"/>
  <xs:element name="KinaseMover" type="mover_KinaseMover_type"/>
  <xs:element name="LabelPoseFromResidueSelectorMover" type="mover_LabelPoseFromResidueSelectorMover_type"/>
  <xs:element name="LegacyAddStartnodeFragments" type="mover_LegacyAddStartnodeFragments_type"/>
  <xs:element name="LegacyAppendAssemblyMover" type="mover_LegacyAppendAssemblyMover_type"/>
  <xs:element name="LegacyAssemblyConstraintsMover" type="mover_LegacyAssemblyConstraintsMover_type"/>
  <xs:element name="LegacyEnumerateAssemblyMover" type="mover_LegacyEnumerateAssemblyMover_type"/>
  <xs:element name="LegacyGivenPathAssemblyMover" type="mover_LegacyGivenPathAssemblyMover_type"/>
  <xs:element name="LegacyGreedyAssemblyMover" type="mover_LegacyGreedyAssemblyMover_type"/>
  <xs:element name="LegacyKicSampler" type="mover_LegacyKicSampler_type"/>
  <xs:element name="LegacyMonteCarloAssemblyMover" type="mover_LegacyMonteCarloAssemblyMover_type"/>
  <xs:element name="LegacyRepeatAssemblyMover" type="mover_LegacyRepeatAssemblyMover_type"/>
  <xs:element name="LigandBindingAssemblyMover" type="mover_LigandBindingAssemblyMover_type"/>
  <xs:element name="LigandDesign" type="mover_LigandDesign_type"/>
  <xs:element name="LinkageConformerMover" type="mover_LinkageConformerMover_type"/>
  <xs:element name="LoadDensityMap" type="mover_LoadDensityMap_type"/>
  <xs:element name="LoadPDB" type="mover_LoadPDB_type"/>
  <xs:element name="LoadVarSolDistSasaCalculatorMover" type="mover_LoadVarSolDistSasaCalculatorMover_type"/>
  <xs:element name="LoadZnCoordNumHbondCalculatorMover" type="mover_LoadZnCoordNumHbondCalculatorMover_type"/>
  <xs:element name="LocalBackboneMover" type="mover_LocalBackboneMover_type"/>
  <xs:element name="LocalRelax" type="mover_LocalRelax_type"/>
  <xs:element name="LoopAnalyzerMover" type="mover_LoopAnalyzerMover_type"/>
  <xs:element name="LoopBuilder" type="mover_LoopBuilder_type"/>
  <xs:element name="LoopCM" type="mover_LoopCM_type"/>
  <xs:element name="LoopCreationMover" type="mover_LoopCreationMover_type"/>
  <xs:element name="LoopFinder" type="mover_LoopFinder_type"/>
  <xs:element name="LoopHash" type="mover_LoopHash_type"/>
  <xs:element name="LoopHashDiversifier" type="mover_LoopHashDiversifier_type"/>
  <xs:element name="LoopHashLoopClosureMover" type="mover_LoopHashLoopClosureMover_type"/>
  <xs:element name="LoopLengthChange" type="mover_LoopLengthChange_type"/>
  <xs:element name="LoopModeler" type="mover_LoopModeler_type"/>
  <xs:element name="LoopMoverFromCommandLine" type="mover_LoopMoverFromCommandLine_type"/>
  <xs:element name="LoopMover_Perturb_CCD" type="mover_LoopMover_Perturb_CCD_type"/>
  <xs:element name="LoopMover_Perturb_KIC" type="mover_LoopMover_Perturb_KIC_type"/>
  <xs:element name="LoopMover_Perturb_QuickCCD" type="mover_LoopMover_Perturb_QuickCCD_type"/>
  <xs:element name="LoopMover_Perturb_QuickCCD_Moves" type="mover_LoopMover_Perturb_QuickCCD_Moves_type"/>
  <xs:element name="LoopMover_Refine_Backrub" type="mover_LoopMover_Refine_Backrub_type"/>
  <xs:element name="LoopMover_Refine_CCD" type="mover_LoopMover_Refine_CCD_type"/>
  <xs:element name="LoopMover_Refine_KIC" type="mover_LoopMover_Refine_KIC_type"/>
  <xs:element name="LoopMover_SlidingWindow" type="mover_LoopMover_SlidingWindow_type"/>
  <xs:element name="LoopOver" type="mover_LoopOver_type"/>
  <xs:element name="LoopProtocol" type="mover_LoopProtocol_type"/>
  <xs:element name="LoopRefineInnerCycleContainer" type="mover_LoopRefineInnerCycleContainer_type"/>
  <xs:element name="LoopRelaxMover" type="mover_LoopRelaxMover_type"/>
  <xs:element name="LoopRemodel" type="mover_LoopRemodel_type"/>
  <xs:element name="LoophashLoopInserter" type="mover_LoophashLoopInserter_type"/>
  <xs:element name="LoopmodelWrapper" type="mover_LoopmodelWrapper_type"/>
  <xs:element name="MPDockingMover" type="mover_MPDockingMover_type"/>
  <xs:element name="MPDockingSetupMover" type="mover_MPDockingSetupMover_type"/>
  <xs:element name="MPFastRelaxMover" type="mover_MPFastRelaxMover_type"/>
  <xs:element name="MPLipidAccessibility" type="mover_MPLipidAccessibility_type"/>
  <xs:element name="MPSymDockMover" type="mover_MPSymDockMover_type"/>
  <xs:element name="MakeAsymmetricStructureDataMover" type="mover_MakeAsymmetricStructureDataMover_type"/>
  <xs:element name="MakeBundle" type="mover_MakeBundle_type"/>
  <xs:element name="MakeBundleHelix" type="mover_MakeBundleHelix_type"/>
  <xs:element name="MakeCanonicalHelix" type="mover_MakeCanonicalHelix_type"/>
  <xs:element name="MakeJunctionsMover" type="mover_MakeJunctionsMover_type"/>
  <xs:element name="MakeLatticeMover" type="mover_MakeLatticeMover_type"/>
  <xs:element name="MakeLayerMover" type="mover_MakeLayerMover_type"/>
  <xs:element name="MakePolyX" type="mover_MakePolyX_type"/>
  <xs:element name="MakeStarTopology" type="mover_MakeStarTopology_type"/>
  <xs:element name="MapHotspot" type="mover_MapHotspot_type"/>
  <xs:element name="MatDesGreedyOptMutationMover" type="mover_MatDesGreedyOptMutationMover_type"/>
  <xs:element name="MatchResiduesMover" type="mover_MatchResiduesMover_type"/>
  <xs:element name="MatcherMover" type="mover_MatcherMover_type"/>
  <xs:element name="MembraneEnergyLandscapeSampler" type="mover_MembraneEnergyLandscapeSampler_type"/>
  <xs:element name="MembranePositionFromTopologyMover" type="mover_MembranePositionFromTopologyMover_type"/>
  <xs:element name="MembraneTopology" type="mover_MembraneTopology_type"/>
  <xs:element name="MergePDB" type="mover_MergePDB_type"/>
  <xs:element name="MergePDBatOverlapMover" type="mover_MergePDBatOverlapMover_type"/>
  <xs:element name="MetricRecorder" type="mover_MetricRecorder_type"/>
  <xs:element name="MetropolisHastings" type="mover_MetropolisHastings_type"/>
  <xs:element name="MinMover" type="mover_MinMover_type"/>
  <xs:element name="MinPackMover" type="mover_MinPackMover_type"/>
  <xs:element name="MinimizationRefiner" type="mover_MinimizationRefiner_type"/>
  <xs:element name="MinimizeBackbone" type="mover_MinimizeBackbone_type"/>
  <xs:element name="ModifyVariantType" type="mover_ModifyVariantType_type"/>
  <xs:element name="ModulatedMover" type="mover_ModulatedMover_type"/>
  <xs:element name="MonteCarloRecover" type="mover_MonteCarloRecover_type"/>
  <xs:element name="MonteCarloReset" type="mover_MonteCarloReset_type"/>
  <xs:element name="MonteCarloTest" type="mover_MonteCarloTest_type"/>
  <xs:element name="MotifDnaPacker" type="mover_MotifDnaPacker_type"/>
  <xs:element name="MotifGraft" type="mover_MotifGraft_type"/>
  <xs:element name="MoveMapFactoryToNamedMoveMapMover" type="mover_MoveMapFactoryToNamedMoveMapMover_type"/>
  <xs:element name="MultipleOutputWrapper" type="mover_MultipleOutputWrapper_type"/>
  <xs:element name="MultiplePoseMover" type="mover_MultiplePoseMover_type"/>
  <xs:element name="MutateResidue" type="mover_MutateResidue_type"/>
  <xs:element name="NTerminalAcetyltransferaseMover" type="mover_NTerminalAcetyltransferaseMover_type"/>
  <xs:element name="NcbbDockDesign" type="mover_NcbbDockDesign_type"/>
  <xs:element name="NearNativeLoopCloser" type="mover_NearNativeLoopCloser_type"/>
  <xs:element name="NormalModeMinimizer" type="mover_NormalModeMinimizer_type"/>
  <xs:element name="NormalModeRelax" type="mover_NormalModeRelax_type"/>
  <xs:element name="NtoCConstraintGenerator" type="mover_NtoCConstraintGenerator_type"/>
  <xs:element name="NubInitioLoopClosureMover" type="mover_NubInitioLoopClosureMover_type"/>
  <xs:element name="NubInitioMover" type="mover_NubInitioMover_type"/>
  <xs:element name="NucleotideMutation" type="mover_NucleotideMutation_type"/>
  <xs:element name="OopCreatorMover" type="mover_OopCreatorMover_type"/>
  <xs:element name="OopDockDesign" type="mover_OopDockDesign_type"/>
  <xs:element name="OptimizeThreading" type="mover_OptimizeThreading_type"/>
  <xs:element name="PCSLigandTransformMover" type="mover_PCSLigandTransformMover_type"/>
  <xs:element name="PDBDiagnosticMover" type="mover_PDBDiagnosticMover_type"/>
  <xs:element name="PDBReload" type="mover_PDBReload_type"/>
  <xs:element name="PDBTrajectoryRecorder" type="mover_PDBTrajectoryRecorder_type"/>
  <xs:element name="PREMover" type="mover_PREMover_type"/>
  <xs:element name="PSSM2Bfactor" type="mover_PSSM2Bfactor_type"/>
  <xs:element name="PackRotamersMover" type="mover_PackRotamersMover_type"/>
  <xs:element name="PackRotamersMoverPartGreedy" type="mover_PackRotamersMoverPartGreedy_type"/>
  <xs:element name="ParaNMRScoreMover" type="mover_ParaNMRScoreMover_type"/>
  <xs:element name="ParallelTempering" type="mover_ParallelTempering_type"/>
  <xs:element name="ParatopeEpitopeConstraintMover" type="mover_ParatopeEpitopeConstraintMover_type"/>
  <xs:element name="ParatopeSiteConstraintMover" type="mover_ParatopeSiteConstraintMover_type"/>
  <xs:element name="ParsedProtocol" type="mover_ParsedProtocol_type"/>
  <xs:element name="PatchdockTransform" type="mover_PatchdockTransform_type"/>
  <xs:element name="PeptideCyclizeMover" type="mover_PeptideCyclizeMover_type"/>
  <xs:element name="PeptideOrientationMover" type="mover_PeptideOrientationMover_type"/>
  <xs:element name="PeptideStubMover" type="mover_PeptideStubMover_type"/>
  <xs:element name="PeriodicBoxMover" type="mover_PeriodicBoxMover_type"/>
  <xs:element name="PertMinMover" type="mover_PertMinMover_type"/>
  <xs:element name="PerturbBundle" type="mover_PerturbBundle_type"/>
  <xs:element name="PerturbBundleHelix" type="mover_PerturbBundleHelix_type"/>
  <xs:element name="PerturbByBins" type="mover_PerturbByBins_type"/>
  <xs:element name="PerturbChiSidechain" type="mover_PerturbChiSidechain_type"/>
  <xs:element name="PerturbRotamerSidechain" type="mover_PerturbRotamerSidechain_type"/>
  <xs:element name="PlaceOnLoop" type="mover_PlaceOnLoop_type"/>
  <xs:element name="PlaceSimultaneously" type="mover_PlaceSimultaneously_type"/>
  <xs:element name="PlaceStub" type="mover_PlaceStub_type"/>
  <xs:element name="PlaceSurfaceProbe" type="mover_PlaceSurfaceProbe_type"/>
  <xs:element name="PlacementMinimization" type="mover_PlacementMinimization_type"/>
  <xs:element name="PoseFromPoseResourceMover" type="mover_PoseFromPoseResourceMover_type"/>
  <xs:element name="PoseFromSequenceMover" type="mover_PoseFromSequenceMover_type"/>
  <xs:element name="PredesignPerturbMover" type="mover_PredesignPerturbMover_type"/>
  <xs:element name="Prepack" type="mover_Prepack_type"/>
  <xs:element name="PrepareForCentroid" type="mover_PrepareForCentroid_type"/>
  <xs:element name="PrepareForFullatom" type="mover_PrepareForFullatom_type"/>
  <xs:element name="ProtLigEnsemble" type="mover_ProtLigEnsemble_type"/>
  <xs:element name="ProteinInterfaceMS" type="mover_ProteinInterfaceMS_type"/>
  <xs:element name="PyMOLMover" type="mover_PyMOLMover_type"/>
  <xs:element name="RBIn" type="mover_RBIn_type"/>
  <xs:element name="RBOut" type="mover_RBOut_type"/>
  <xs:element name="RDKitMetricsMover" type="mover_RDKitMetricsMover_type"/>
  <xs:element name="RNAIdealizeMover" type="mover_RNAIdealizeMover_type"/>
  <xs:element name="RNA_DeNovoProtocol" type="mover_RNA_DeNovoProtocol_type"/>
  <xs:element name="RampingMover" type="mover_RampingMover_type"/>
  <xs:element name="RandomConformers" type="mover_RandomConformers_type"/>
  <xs:element name="RandomMover" type="mover_RandomMover_type"/>
  <xs:element name="RandomMutation" type="mover_RandomMutation_type"/>
  <xs:element name="RandomOmegaFlipMover" type="mover_RandomOmegaFlipMover_type"/>
  <xs:element name="RandomTorsionMover" type="mover_RandomTorsionMover_type"/>
  <xs:element name="RandomizeBBByRamaPrePro" type="mover_RandomizeBBByRamaPrePro_type"/>
  <xs:element name="RecomputeDensityMap" type="mover_RecomputeDensityMap_type"/>
  <xs:element name="ReleaseConstraintFromResidueMover" type="mover_ReleaseConstraintFromResidueMover_type"/>
  <xs:element name="RemodelMover" type="mover_RemodelMover_type"/>
  <xs:element name="RemoveConstraints" type="mover_RemoveConstraints_type"/>
  <xs:element name="RemoveMetalConnectionsMover" type="mover_RemoveMetalConnectionsMover_type"/>
  <xs:element name="RemoveRemodelCsts" type="mover_RemoveRemodelCsts_type"/>
  <xs:element name="RenderGridsToKinemage" type="mover_RenderGridsToKinemage_type"/>
  <xs:element name="RepackMinimize" type="mover_RepackMinimize_type"/>
  <xs:element name="RepackTrial" type="mover_RepackTrial_type"/>
  <xs:element name="RepackingRefiner" type="mover_RepackingRefiner_type"/>
  <xs:element name="RepeatPropagationMover" type="mover_RepeatPropagationMover_type"/>
  <xs:element name="RepeatProteinRelax" type="mover_RepeatProteinRelax_type"/>
  <xs:element name="ReplaceRegionMover" type="mover_ReplaceRegionMover_type"/>
  <xs:element name="ReportEffectivePKA" type="mover_ReportEffectivePKA_type"/>
  <xs:element name="ReportFSC" type="mover_ReportFSC_type"/>
  <xs:element name="ReportGradients" type="mover_ReportGradients_type"/>
  <xs:element name="ReportToDB" type="mover_ReportToDB_type"/>
  <xs:element name="ReportXYZ" type="mover_ReportXYZ_type"/>
  <xs:element name="ResetBaseline" type="mover_ResetBaseline_type"/>
  <xs:element name="ResetFoldTree" type="mover_ResetFoldTree_type"/>
  <xs:element name="ResetFullModelInfoMover" type="mover_ResetFullModelInfoMover_type"/>
  <xs:element name="ResidueLabelsToPymolSelectionMover" type="mover_ResidueLabelsToPymolSelectionMover_type"/>
  <xs:element name="ResidueReplacementRebuildMover" type="mover_ResidueReplacementRebuildMover_type"/>
  <xs:element name="ResidueTypeConstraintMover" type="mover_ResidueTypeConstraintMover_type"/>
  <xs:element name="ResidueVicinityCstCreator" type="mover_ResidueVicinityCstCreator_type"/>
  <xs:element name="RestrictRegion" type="mover_RestrictRegion_type"/>
  <xs:element name="RigidBodyPerturbNoCenter" type="mover_RigidBodyPerturbNoCenter_type"/>
  <xs:element name="RigidBodyTiltMover" type="mover_RigidBodyTiltMover_type"/>
  <xs:element name="RigidBodyTransMover" type="mover_RigidBodyTransMover_type"/>
  <xs:element name="RigidChunkCM" type="mover_RigidChunkCM_type"/>
  <xs:element name="RingConformationMover" type="mover_RingConformationMover_type"/>
  <xs:element name="RingPlaneFlipMover" type="mover_RingPlaneFlipMover_type"/>
  <xs:element name="RollMover" type="mover_RollMover_type"/>
  <xs:element name="RotLibOut" type="mover_RotLibOut_type"/>
  <xs:element name="RotamerRecoveryMover" type="mover_RotamerRecoveryMover_type"/>
  <xs:element name="RotamerTrialsMinMover" type="mover_RotamerTrialsMinMover_type"/>
  <xs:element name="RotamerTrialsMover" type="mover_RotamerTrialsMover_type"/>
  <xs:element name="RotamerTrialsRefiner" type="mover_RotamerTrialsRefiner_type"/>
  <xs:element name="Rotate" type="mover_Rotate_type"/>
  <xs:element name="Rotates" type="mover_Rotates_type"/>
  <xs:element name="RunSimpleMetrics" type="mover_RunSimpleMetrics_type"/>
  <xs:element name="SampleFarnesylMover" type="mover_SampleFarnesylMover_type"/>
  <xs:element name="SampleTiltAngles" type="mover_SampleTiltAngles_type"/>
  <xs:element name="SaneMinMover" type="mover_SaneMinMover_type"/>
  <xs:element name="SaveAndRetrieveSidechains" type="mover_SaveAndRetrieveSidechains_type"/>
  <xs:element name="SavePDBInfoMover" type="mover_SavePDBInfoMover_type"/>
  <xs:element name="SavePoseMover" type="mover_SavePoseMover_type"/>
  <xs:element name="SaveSequenceToCommentsMover" type="mover_SaveSequenceToCommentsMover_type"/>
  <xs:element name="ScaleMapIntensities" type="mover_ScaleMapIntensities_type"/>
  <xs:element name="SchemePlaceMotifs" type="mover_SchemePlaceMotifs_type"/>
  <xs:element name="ScoreMover" type="mover_ScoreMover_type"/>
  <xs:element name="ScriptCM" type="mover_ScriptCM_type"/>
  <xs:element name="SecStructMinimizeMover" type="mover_SecStructMinimizeMover_type"/>
  <xs:element name="SeedFoldTree" type="mover_SeedFoldTree_type"/>
  <xs:element name="SeedSetupMover" type="mover_SeedSetupMover_type"/>
  <xs:element name="SegmentHybridizer" type="mover_SegmentHybridizer_type"/>
  <xs:element name="SegmentSequenceProfileMover" type="mover_SegmentSequenceProfileMover_type"/>
  <xs:element name="SeparateDnaFromNonDna" type="mover_SeparateDnaFromNonDna_type"/>
  <xs:element name="SetAACompositionPotential" type="mover_SetAACompositionPotential_type"/>
  <xs:element name="SetChiMover" type="mover_SetChiMover_type"/>
  <xs:element name="SetCrystWeight" type="mover_SetCrystWeight_type"/>
  <xs:element name="SetMembranePositionMover" type="mover_SetMembranePositionMover_type"/>
  <xs:element name="SetRefinementOptions" type="mover_SetRefinementOptions_type"/>
  <xs:element name="SetResidueAlias" type="mover_SetResidueAlias_type"/>
  <xs:element name="SetSecStructEnergies" type="mover_SetSecStructEnergies_type"/>
  <xs:element name="SetTemperatureFactor" type="mover_SetTemperatureFactor_type"/>
  <xs:element name="SetTorsion" type="mover_SetTorsion_type"/>
  <xs:element name="SetupCoiledCoilFoldTreeMover" type="mover_SetupCoiledCoilFoldTreeMover_type"/>
  <xs:element name="SetupForDensityScoring" type="mover_SetupForDensityScoring_type"/>
  <xs:element name="SetupForSequenceSymmetryMover" type="mover_SetupForSequenceSymmetryMover_type"/>
  <xs:element name="SetupForSymmetry" type="mover_SetupForSymmetry_type"/>
  <xs:element name="SetupHotspotConstraints" type="mover_SetupHotspotConstraints_type"/>
  <xs:element name="SetupHotspotConstraintsLoops" type="mover_SetupHotspotConstraintsLoops_type"/>
  <xs:element name="SetupMetalsMover" type="mover_SetupMetalsMover_type"/>
  <xs:element name="SetupNCS" type="mover_SetupNCS_type"/>
  <xs:element name="SetupPoissonBoltzmannPotential" type="mover_SetupPoissonBoltzmannPotential_type"/>
  <xs:element name="Shear" type="mover_Shear_type"/>
  <xs:element name="ShearMinCCDTrial" type="mover_ShearMinCCDTrial_type"/>
  <xs:element name="SheetCstGenerator" type="mover_SheetCstGenerator_type"/>
  <xs:element name="ShortBackrubMover" type="mover_ShortBackrubMover_type"/>
  <xs:element name="ShoveResidueMover" type="mover_ShoveResidueMover_type"/>
  <xs:element name="Sidechain" type="mover_Sidechain_type"/>
  <xs:element name="SidechainMC" type="mover_SidechainMC_type"/>
  <xs:element name="SilentTrajectoryRecorder" type="mover_SilentTrajectoryRecorder_type"/>
  <xs:element name="SimpleGlycosylateMover" type="mover_SimpleGlycosylateMover_type"/>
  <xs:element name="SimpleThreadingMover" type="mover_SimpleThreadingMover_type"/>
  <xs:element name="SimulatedTempering" type="mover_SimulatedTempering_type"/>
  <xs:element name="SingleFragmentMover" type="mover_SingleFragmentMover_type"/>
  <xs:element name="SliceToMiniProteinMover" type="mover_SliceToMiniProteinMover_type"/>
  <xs:element name="SlideTogether" type="mover_SlideTogether_type"/>
  <xs:element name="Small" type="mover_Small_type"/>
  <xs:element name="SmallMinCCDTrial" type="mover_SmallMinCCDTrial_type"/>
  <xs:element name="SnugDock" type="mover_SnugDock_type"/>
  <xs:element name="SpinMover" type="mover_SpinMover_type"/>
  <xs:element name="Splice" type="mover_Splice_type"/>
  <xs:element name="SpliceIn" type="mover_SpliceIn_type"/>
  <xs:element name="SpliceInAntibody" type="mover_SpliceInAntibody_type"/>
  <xs:element name="SpliceInTail" type="mover_SpliceInTail_type"/>
  <xs:element name="SpliceOut" type="mover_SpliceOut_type"/>
  <xs:element name="SpliceOutAntibody" type="mover_SpliceOutAntibody_type"/>
  <xs:element name="SpliceOutTail" type="mover_SpliceOutTail_type"/>
  <xs:element name="SplitAndMixPoseMover" type="mover_SplitAndMixPoseMover_type"/>
  <xs:element name="StapleMover" type="mover_StapleMover_type"/>
  <xs:element name="StartFrom" type="mover_StartFrom_type"/>
  <xs:element name="StoreCombinedStoredTasksMover" type="mover_StoreCombinedStoredTasksMover_type"/>
  <xs:element name="StoreCompoundTaskMover" type="mover_StoreCompoundTaskMover_type"/>
  <xs:element name="StorePoseSnapshot" type="mover_StorePoseSnapshot_type"/>
  <xs:element name="StoreQuasiSymmetricTaskMover" type="mover_StoreQuasiSymmetricTaskMover_type"/>
  <xs:element name="StoreResidueSubset" type="mover_StoreResidueSubset_type"/>
  <xs:element name="StoreTaskMover" type="mover_StoreTaskMover_type"/>
  <xs:element name="StructFragmentMover" type="mover_StructFragmentMover_type"/>
  <xs:element name="StructPerturberCM" type="mover_StructPerturberCM_type"/>
  <xs:element name="StructProfileMover" type="mover_StructProfileMover_type"/>
  <xs:element name="Subroutine" type="mover_Subroutine_type"/>
  <xs:element name="Superimpose" type="mover_Superimpose_type"/>
  <xs:element name="SwapSegment" type="mover_SwapSegment_type"/>
  <xs:element name="SwitchChainOrder" type="mover_SwitchChainOrder_type"/>
  <xs:element name="SwitchMover" type="mover_SwitchMover_type"/>
  <xs:element name="SwitchResidueTypeSetMover" type="mover_SwitchResidueTypeSetMover_type"/>
  <xs:element name="SymDockProtocol" type="mover_SymDockProtocol_type"/>
  <xs:element name="SymDofMover" type="mover_SymDofMover_type"/>
  <xs:element name="SymFoldandDockMoveRbJumpMover" type="mover_SymFoldandDockMoveRbJumpMover_type"/>
  <xs:element name="SymFoldandDockRbTrialMover" type="mover_SymFoldandDockRbTrialMover_type"/>
  <xs:element name="SymFoldandDockSlideTrialMover" type="mover_SymFoldandDockSlideTrialMover_type"/>
  <xs:element name="SymMinMover" type="mover_SymMinMover_type"/>
  <xs:element name="SymPackRotamersMover" type="mover_SymPackRotamersMover_type"/>
  <xs:element name="SymRotamerTrialsMover" type="mover_SymRotamerTrialsMover_type"/>
  <xs:element name="SymmetricAddMembraneMover" type="mover_SymmetricAddMembraneMover_type"/>
  <xs:element name="SymmetricCycpepAlign" type="mover_SymmetricCycpepAlign_type"/>
  <xs:element name="Symmetrizer" type="mover_Symmetrizer_type"/>
  <xs:element name="TagPoseWithRefinementStats" type="mover_TagPoseWithRefinementStats_type"/>
  <xs:element name="TailSegmentMover" type="mover_TailSegmentMover_type"/>
  <xs:element name="TaskAwareCsts" type="mover_TaskAwareCsts_type"/>
  <xs:element name="TaskAwareMinMover" type="mover_TaskAwareMinMover_type"/>
  <xs:element name="TaskAwareSymMinMover" type="mover_TaskAwareSymMinMover_type"/>
  <xs:element name="TautomerizeAnomerMover" type="mover_TautomerizeAnomerMover_type"/>
  <xs:element name="ThermalMinimizer" type="mover_ThermalMinimizer_type"/>
  <xs:element name="ThermalSamplingMover" type="mover_ThermalSamplingMover_type"/>
  <xs:element name="TopologyBrokerMover" type="mover_TopologyBrokerMover_type"/>
  <xs:element name="TrajectoryReportToDB" type="mover_TrajectoryReportToDB_type"/>
  <xs:element name="Transform" type="mover_Transform_type"/>
  <xs:element name="TransformEnsemble" type="mover_TransformEnsemble_type"/>
  <xs:element name="TransformIntoMembraneMover" type="mover_TransformIntoMembraneMover_type"/>
  <xs:element name="Translate" type="mover_Translate_type"/>
  <xs:element name="TrialCounterObserver" type="mover_TrialCounterObserver_type"/>
  <xs:element name="TryDisulfPermutations" type="mover_TryDisulfPermutations_type"/>
  <xs:element name="TryRotamers" type="mover_TryRotamers_type"/>
  <xs:element name="Tumble" type="mover_Tumble_type"/>
  <xs:element name="UBQ_GTPaseMover" type="mover_UBQ_GTPaseMover_type"/>
  <xs:element name="UniformRigidBodyCM" type="mover_UniformRigidBodyCM_type"/>
  <xs:element name="UniformRigidBodyMover" type="mover_UniformRigidBodyMover_type"/>
  <xs:element name="UpdateCrystInfo" type="mover_UpdateCrystInfo_type"/>
  <xs:element name="UpdateEnzdesHeader" type="mover_UpdateEnzdesHeader_type"/>
  <xs:element name="UpdateSolvent" type="mover_UpdateSolvent_type"/>
  <xs:element name="VLB" type="mover_VLB_type"/>
  <xs:element name="VirtualRoot" type="mover_VirtualRoot_type"/>
  <xs:element name="VisualizeEmbeddingMover" type="mover_VisualizeEmbeddingMover_type"/>
  <xs:element name="VisualizeMembraneMover" type="mover_VisualizeMembraneMover_type"/>
  <xs:element name="VoxelSpacingRefinement" type="mover_VoxelSpacingRefinement_type"/>
  <xs:element name="WriteFiltersToPose" type="mover_WriteFiltersToPose_type"/>
  <xs:element name="WriteLigandMolFile" type="mover_WriteLigandMolFile_type"/>
  <xs:element name="WriteSSEMover" type="mover_WriteSSEMover_type"/>
  <xs:element name="build_Ala_pose" type="mover_build_Ala_pose_type"/>
  <xs:element name="ddG" type="mover_ddG_type"/>
  <xs:element name="load_unbound_rot" type="mover_load_unbound_rot_type"/>
  <xs:element name="profile" type="mover_profile_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="mover_AbscriptLoopCloserCM_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Uses the WidthFirstSlidingWindowLoopCloser to fix loops using fragment insertion in the specified region
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector specifying the region where fragments will be inserted. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fragments" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to fragment file containing fragments that will be used to close the loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="abscript_stage_Stage_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tag specifying behavior for a specific stage of the ab initio protocol
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Mover">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string" default="null">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of a mover that this stage should use with the specified weight relative to other specified movers
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="weight" type="real" default="1.0">
     <xs:annotation><xs:documentation xml:lang="en">
      How heavily should this mover be weighted relative to other movers in this stage, i.e. how frequently should it be used relative to others?
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Preparer">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string" default="null">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of the mover that this stage should use to prepare the structure
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="ids" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Stage of ab intio to which this subtag refers.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="positive_integer_cslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="[+]?[1-9]+(,[-+]?[0-9]+)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_AbscriptMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A special mover used to replicate the state of ab initio in early 2014
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Stage" type="abscript_stage_Stage_complex_type"/>
  <xs:element name="Fragments">
   <xs:complexType mixed="true">
    <xs:attribute name="selector" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of previously defined residue selector specifying where fragments should be inserted
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="small_frags" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Fragments file containing small fragments (i.e. 3mers) 
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="large_frags" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Fragments file containing large fragments (i.e. 9mers)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="initialize" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      Use small fragments insert a fragment at all positions before starting
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix for the name of the scorefunction. Scorefunctions should have been previously defined with names prefix + '_stage' + I, II, IIIa, IIIb, IVa, and IVb.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Equivalent to the -run:increase_cycles in standard ab initio; increases the number of ab initio cycles by that factor.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_stages" type="positive_integer_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of ab initio stages (1, 2, 3, or 4) that you wish to skip
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AcceptToBestMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Mover equivalent of the accept_to_best command
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddChain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Replace or add chains to a pose from other PDBs
 </xs:documentation></xs:annotation>
 <xs:attribute name="random_access" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if true randomly choose one file name from a list and work with that throughout the run.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="update_PDBInfo" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   When true (default) it will reset the PDBInfo of the merged pose, residue count starting from 1 on the first chain, chains starting from A. PDB numbering starting from 1 in each chain. When false, it will merge the info from the two PDBInfos from each Pose by appending the second one to the first one. If both Poses have the same chain name, they will keep it (with the expected issues); be aware of that when setting this option to false. This option is always true when swap_chain_number is called.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="file_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Either a path to the file to read chains from, or a comma-separated list of such if random_access is true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="spm_reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of a pose saved with SavePoseMover. Use this instead of file_name
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="new_chain" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   There is some interaction between swap_chain_number and new_chain; probably you can use only one.  add as a new chain?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="swap_chain_number" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   There is some interaction between swap_chain_number and new_chain; probably you can use only one.  swap chain with specified chain number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddChainBreak_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="remove" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue numbering (pdb); provide this or resnum
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="change_foldtree" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Add chainbreak as new jump in fold tree.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="change_conformation" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Add chainbreak as chain ending in pose conformation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnum" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue numbering (pdb); provide this or resnum
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="find_automatically" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Automatically find chain breaks
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_cutoff" type="real" default="2.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance cutoff past which chain breaks will be automatically assigned
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddCompositionConstraintMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add composition constraints from the provided file to the selected region
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Comp">
   <xs:complexType mixed="true">
    <xs:attribute name="entry" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Composition constraint entries, optionally ';' separated.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of composition constraint file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddConstraints_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add constraints from the specified constraint generators to the pose
 </xs:documentation></xs:annotation>
 <xs:group ref="constraint_generator" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="constraint_generators" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of previously defined constraint generators to be added.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddConstraintsToCurrentConformationMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="use_distance_cst" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   use distance constraints instead of CoordinateConstraints. Probable default false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_distance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   do not generate distance constraints beyond this distance.  Only active with use_distance_cst.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="coord_dev" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   width (sd) for HarmonicFunc or BoundFunc.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bound_width" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   BoundFunc zero basin width BoundFunc; also activates use of BoundFunc (if non-zero)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_seq_sep" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Do not generate distance constraints between residues within this sequence separation.  Only active with use_distance_cst.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   use ScalarWeightedFunc to reweight constraints by this; also activates use of HarmonicFunc (if this and bound_width are both zero)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="CA_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   constrain only CA atoms. Sets bb_only and sc_tip_only to false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   constrain only backbone atoms. Sets CA_only and sc_tip_only to false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_tip_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   constrain only atoms affected by the final chi angle. Sets CA_only and bb_only to false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="inter_chain" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Generate distance constraints between residues on different chains if true.  (Does not appear to generate ONLY interchain constraints.)  If false, skips constraints that would go between chains.  Only active with use_distance_cst.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   make constraints for these residues; mutually exclisuve with task_operations. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddEncounterConstraintMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XSD_XRW: TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="gap" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddFoldPropensityRestypeConstraints_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover adds position-specific residue type constraints to penalize or give bonuses to residue types during design, based on the gradient vector returned by a machine learning (ML) model designed to esimate the fold propensity of a cyclic peptide.  What this means is that the constraints can promote residue types that are predicted to improve folding, and discourage types that are predicted to worsen folding.  It is recommnded that these constraints be re-applied after every round of design.  Design should be carried out with the res_type_constraint scoreterm turned on in the scorefunction used.
 </xs:documentation></xs:annotation>
 <xs:attribute name="rescore_pose" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the pose is rescored with the provided scoring function before the ML model is applied.  Important since many ML models take current energies as input.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clear_old_restype_constraints" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, old residue type constraints are cleared from the pose before new ones are applied.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="peptide_size" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The length, in amino acid residues, of the cyclic peptide that we're operating upon.  This is used to set the ML model from the Rosetta database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="model_version" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The version of the ML model to be loaded from the Rosetta database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight_multiplier" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   A multiplier for the energies added.  Defaults to 300.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="random_mode" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   In random mode, rather than promoting the best amino acid types, amino acid types are shuffled and a random type is promoted.  RECOMMENDED ONLY FOR CONTROLS, to evaluate the effect of a ML model.  False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   An optional scorefunction used for rescoring the pose.  If not provided, the default scorefunction for the ML model version will be used.  It is recommended that hydrogen bond decomposition be activated for many ML models.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="peptide_residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A residue selector used to select the portion of the pose that is the cyclic peptide.  If not provided, the whole pose is assumed to be the cyclic peptide. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddHelixSequenceConstraints_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The AddHelixSequenceConstraints mover sets up sequence constraints for each helix in a pose or in a selection.  It can require negative and positive charges at the N- and C-termini, respectively, can limit the number of helix-disfavouring residues in each helix, can require that the helix be a user-specified fraction alanine, and can require a minimum fractional hydrophobic content in each helix.  Note that these constraints remain attached to the pose, and are intended to be used during design with the aa_composition score term.  Helices are detected using DSSP when this mover is applied, so if the secondary structure changes between application of this mover and design, the constraints will applied to out-of-date residue indices.  (In such a case, the sequence constraints can be re-applied with this mover after first clearing the old constraints with either the ClearCompositionConstraintsMover, or by setting "reset=true" in this mover's options.)

Note that this mover's defaults have been set so that it can be applied without manually setting anything, and still produce reasonable behaviour.  For advanced users, all settings can be tweaked manually, but this shouldn't be necessary in many cases.
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   An optional, previously-defined ResidueSelector.  If provided, only helices that contain at least one residue that is selected by the residue selector will have constraints applied.  If not used, constraints are applied to all helices in the pose. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reset" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, all sequence constraints in the pose will be cleared (deleted) before this mover is applied.  If false, the mover will append to existing sequence constraints.  False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_helix_length" type="non_negative_integer" default="8">
  <xs:annotation><xs:documentation xml:lang="en">
   The minimum number of residues that a helix must have for this mover to act on it.  By default, helices smaller than 8 residues are ignored since they have negligible helix macrodipoles.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_n_terminal_constraints" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, this mover will add sequence constraints requiring a user-specified minimum number of negatively-charged residues at the N-terminus of each helix.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_n_terminal_charges" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   The minimum number of negatively-charged residues required at the N-terminus of helices.  Defaults to 2 residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_terminal_residues" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   The length of the stretch of residues that must contain negative charges at the N-terminus of a helix.  Defaults to 3 residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_terminal_constraint_strength" type="real" default="15.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The strength of the sequence constraint requiring negative charges at the N-termini of helices.  If set to be too weak, Rosetta's packer may sometimes put in too few negative charges.  15.0 by default.
(For advanced users, this is the energetic penalty applied when there is one fewer than the desired number of negatively-charged residues.  The penalty ramps quadratically for two fewer, three fewer, etc.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_c_terminal_constraints" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, this mover will add sequence constraints requiring a user-specified minimum number of positively-charged residues at the C-terminus of each helix.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_c_terminal_charges" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   The minimum number of positively-charged residues required at the C-terminus of helices.  Defaults to 2 residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="c_terminal_residues" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   The length of the stretch of residues that must contain positive charges at the C-terminus of a helix.  Defaults to 3 residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="c_terminal_constraint_strength" type="real" default="15.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The strength of the sequence constraint requiring positive charges at the N-termini of helices.  If set to be too weak, Rosetta's packer may sometimes put in too few positive charges.  15.0 by default.
(For advanced users, this is the energetic penalty applied when there is one fewer than the desired number of positively-charged residues.  The penalty ramps quadratically for two fewer, three fewer, etc.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_overall_constraints" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, this mover will add sequence constraints penalizing more than a user-specified maximum number of helix-disfavouring residues in each helix.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="types_to_avoid" type="xs:string" default="ASN ASP SER GLY THR VAL">
  <xs:annotation><xs:documentation xml:lang="en">
   The list of helix-disfavouring residue types that should be penalized at all helix positions by the "overall" constraints.  This must be a whitespace-separated list of three-letter residue type codes, with no commas.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overall_max_count" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum allowed number of helix-disfavouring residue types.  Default zero (though the penalty for having one is small by default).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overall_constraints_strength" type="real" default="5.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The strength of the sequence constraint penalizing helix-disfavouring residue types.  If set to be too weak, Rosetta's packer may sometimes put in too few helix-disfavouring residues.  5.0 by default.
(For advanced users, this is the energetic penalty applied when there is one more than the maximum allowed number of helix-disfavouring residues.  The penalty ramps quadratically for two more, three more, etc.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_alanine_constraints" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, this mover will add sequence constraints penalizing too many or too few alanine residues in each helix.  The user can set a user-defined desired fractional alanine content.  Note that this constraint is usually set to be weak, so that some deviation from the desired fractional alanine content is tolerated.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="desired_alanine_fraction" type="real" default="0.1">
  <xs:annotation><xs:documentation xml:lang="en">
   The desired fractional alanine content in each helix.  Defaults to 0.1 (10 percent alanine).  Note that deviation from this fraction is possible, if the alanine constraints are weak (and they are weak by default).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ala_constraint_under_strength" type="real" default="0.2">
  <xs:annotation><xs:documentation xml:lang="en">
   The alanine constraint penalty that is imposed if the fractional alanine content is 1 percent less than the desired fractional content.  The penalty ramps quadratically as the alanine content falls below desired.  Note that this penalty is weak, by default, to allow some deviation from the desired fractional alanine content on a case-by-case basis.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ala_constraint_over_strength" type="real" default="0.2">
  <xs:annotation><xs:documentation xml:lang="en">
   The alanine constraint penalty that is imposed if the fractional alanine content is 1 percent more than the desired fractional content.  The penalty ramps quadratically as the alanine content rises above desired.  Note that this penalty is weak, by default, to allow some deviation from the desired fractional alanine content on a case-by-case basis.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_hydrophobic_constraints" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, this mover will add sequence constraints penalizing too few hydrophobic residues in each helix.  The user can set a user-defined minimum desired fractional hydrophobic content.  Note that this constraint is usually set to be weak, so that some designs with fewer than the minimum hydrophobic count will be returned.  Note that alanine is NOT considered hydrophobic.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="desired_min_hydrophobic_fraction" type="real" default="0.25">
  <xs:annotation><xs:documentation xml:lang="en">
   The desired minimum fractional hydrophobic content in each helix.  Defaults to 0.25 (25 percent hydrophobic).  There is no penalty for more hydrophobic residues; only for fewer than desired.  Note that helices slightly below this fraction are possible, if the hydrophobic constraints are weak (and they are weak by default).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hydrophobic_constraint_strength" type="real" default="0.2">
  <xs:annotation><xs:documentation xml:lang="en">
   The hydrophobic constraint penalty that is imposed if the fractional hydrophobic content is 1 percent less than the desired fractional content.  The penalty ramps quadratically as the hydrophobic content falls below desired.  Note that this penalty is weak, by default, to allow some deviation from the desired fractional hydrophobic content on a case-by-case basis.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddHydrogens_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Saturates the incomplete connections with H
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   PDB-file chain ID
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="value_type_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="real"/>
  <xs:enumeration value="string"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_AddJobPairData_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds either a String/Real or String/String pair to the JD2 Job for output
 </xs:documentation></xs:annotation>
 <xs:attribute name="value_type" type="value_type_type" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   type of value to add; must be 'string' or 'real'
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="key" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   the string name for this item
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="value" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Value to report; Of 'value' and 'value_from_ligand_chain', you must specify exactly one.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="value_from_ligand_chain" type="char">
  <xs:annotation><xs:documentation xml:lang="en">
   This should be a single letter describing the chain to get a value from.  It queries using the key.Of 'value' and 'value_from_ligand_chain', you must specify exactly one.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddMHCEpitopeConstraintMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add mhc epitope constraints from the provided file to the selected region or whole pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If provided, the mhc epitope score of the selected region is constrained; otherwise the global score is constrained. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of mhc epitope constraint file.  (These files have a ".mhc" suffix).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Adjust the mhc_epitope weight for the epitope predictor set up by this constraint mover ONLY.  The weight will be the mhc_epitope weight of the scorefunction * this weight.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddMPLigandMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add a ligand to a membrane protein
 </xs:documentation></xs:annotation>
 <xs:attribute name="closest_rsd" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Index of closest residue to ligand
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ligand_seqpos" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Rosetta sequence position of ligand. Note the ligand should be in a separate chain.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="residue_number_cslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="[0-9]+|[0-9]+[A-Za-z](,[0-9]+|[0-9]+[A-Za-z])*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_AddMembraneMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add membrane to a pose
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Span">
   <xs:complexType mixed="true">
    <xs:attribute name="start" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      residue where span starts
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      resdiue where span ends
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="orientation" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      span orientation, whether in2out or out2in
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="restore_lazaridis_IMM1_behavior" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Restore Lazaridis IMM1 behavior
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lipid_composition" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Four letter code specifying the lipid composition
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature at which the lipid parameters were measured/calculated
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="spanfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to input spanfile
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="anchor_rsd" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Index of membrane residue anchor
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="membrane_rsd" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Membrane residue position
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="thickness" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Thickness of membrane. Score function is optimized to 15 Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="steepness" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Steepness of membrane transition. Score function optimized to 10.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aqueous_pore" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Initialize pore dimensions and estimate per-atom lipid accessibility given protein geometry
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="membrane_core" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   width of membrane ocre for Elazar calibrated LK potential
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="span_starts" type="residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list of span starting residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="span_ends" type="residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list of span ending residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="span_starts_num" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list of span starting residues, in rosetta numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="span_ends_num" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list of span ending residues in rosetta_numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="span_orientations" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list of span orientations, only in2out or out2in allowed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="center" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Position of center of membrane in format x,y,z
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normal" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Membrane normal vector in format x,y,z
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddMembraneSpanConstraint_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add membrane span constraint
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddMembraneSpanTermZConstraint_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add membrane span delta Z of span termini constraint
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="presample_added_residue" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Presample the residue being added
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="presample_by_swa" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Presample the residue being added using SWA
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_single_res" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Run in single residue minimization mode
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_added_residue_in_aform" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Just start the added residue in A-form (for RNA)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="internal_cycles" type="non_negative_integer" default="50">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of presample monte carlo cycles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_range_small" type="real" default="5.0">
  <xs:annotation><xs:documentation xml:lang="en">
   For monte carlo presampling, small-size move size (degrees)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_range_large" type="real" default="40.0">
  <xs:annotation><xs:documentation xml:lang="en">
   For monte carlo presampling, large-size move size (degrees)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="kT" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Simulation kT
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="swa_move" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   String describing the SWA move to perform
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddNetChargeConstraintMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add net charge constraints from the provided file to the selected region or whole pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If provided, the net charge of the selected region is constrained; otherwise the global net charge is constrained. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of net charge constraint file.  (These files have a ".charge" suffix).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="cst_instruction_types">
 <xs:restriction base="xs:string">
  <xs:enumeration value="add_new"/>
  <xs:enumeration value="add_pregenerated"/>
  <xs:enumeration value="remove"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_AddOrRemoveMatchCsts_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW XSD: TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="cstfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of file to get csts from (can be specified here if one wants to change the constraints, e.g. tighten or relax them, as the pose progresses down a protocol.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_instruction" type="cst_instruction_types" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   1 of 3 choices - "add_new" (read from file), "remove", or "add_pregenerated" (i.e. if enz csts existed at any point previosuly in the protocol add them back)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_covalent" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   during removal, keep constraints corresponding to covalent bonds between protein and ligand intact (default=0).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="accept_blocks_missing_header" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   allow more blocks in the cstfile than specified in header REMARKs (see enzdes documentation for details, default=0)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fail_on_constraints_missing" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   When removing constraints, raise an error if the constraint blocks do not exist in the pose (default=1).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddPDBInfoMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  create a PDBInfo for pose, from pose. useful when working with denovo protocls
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddResidueCouplingConstraint_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Mover which adds ResidueCouplingConstraints which favors residue types such, that co-evolving residue pairs are retained during resign.To enable the constraint type the res_type_linking_constraint term must be reweighted.This mover was developed for compatibility with the Gremlin tensor format consisting of the tensor (bin) and an index file
 </xs:documentation></xs:annotation>
 <xs:attribute name="tensor_file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to the co-evolution tensor file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="index_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Index file indicating residue positions in the tensor (used by Gremlin)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="strength" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Strength factor, gets multiplied with the eo-evolution value (tensor cell)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="alphabet" type="xs:string" default="ARNDCQEGHILKMFPSTWYV-">
  <xs:annotation><xs:documentation xml:lang="en">
   Alphabet order of the tensor. The default is the Gremlin alphabet.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddResidueLabel_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds PDB label to residues
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="label" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Label to add to residues defined in residue selector
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddSapConstraintMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A mover that adds the SapConstraint to the pose. The sap_constraint scoreterm then uses these constraints to try to match your sap_goal that you specified. A very important consideration is that all the speeds to choose from are approximations, so while the slower speeds are more precise, they are not necessarily more accurate. See "packing_correction" for more information. See this paper for more info on sap: Developability index: a rapid in silico tool for the screening of antibody aggregation propensity.  Lauer, et. al. J Pharm Sci 2012
 </xs:documentation></xs:annotation>
 <xs:attribute name="sap_goal" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The final sap value you wish for your selection to achieve. There will be a penalty if the sap is above this number.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="penalty_per_sap" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   If the current sap value is outside the sap_goal, what penalty shall be applied for each unit of sap?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sap_lb_goal" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The lowerbound on the final sap value you wish for your selection to achieve.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packing_correction" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   This method approximates sap during packing and it is often the case that it is wrong by a constant factor. This option allows you to adjust for this fact. After each packing trajectory, the SapConstraintHelper will output a message indicating what the algorithm thought the sap was, what it actually was, and what packing_correction you should use. Running a few trajectories should get you a good idea of what number you should place here. Setting it wrong will result in worse scoring poses.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="full_accuracy_when_scoring" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Debugging: Instead of using the full sap calculation when reporting scores, use instead the selected "speed" method.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="speed" type="xs:string" default="fast">
  <xs:annotation><xs:documentation xml:lang="en">
   How fast should this calculation be during packing; faster is less precise. Choices: slow, fast, lightning. Slow uses full-atom calculations for sasa (but still uses approximate sasa). Fast and lightning assume that designable residues look like CYS for sasa calcualtions and only calculate sasa once at the start. Lightning approximates even further and treats each rotamer of an aa-type at the same position the same. Further, lightning only does the 0-clip on the whole-residue rather than at the per-atom level.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_selector" type="xs:string" default="true_selector">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residues should be included in the sap score? Optional, will default to full-pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sap_calculate_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residues should be present during the sap calculation? Only residues in the score_selector will have their values reported, but residues in this selector will still be assigned atom-saps which can affect the residues in score_selector. Optional, will default to score_selector.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sasa_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residues should be present during the sasa calculation? Optional, will default to sap_calculate_selector.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddSapMathConstraintMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A mover that adds the SapMathConstraint to the pose. The SapMathConstraint allows you to create math expressions from previously added SapConstraints. These SapConstraints are added with the AddSapConstraintMover. The sap_constraint scoreterm must be enabled. Additionally, the SapConstraints this relies on do not need to actually incur a penalty. Setting their penalty_per_sap=0 is what to do if you only want SapMathConstraints to affect the score. See this paper for more info on sap: Developability index: a rapid in silico tool for the screening of antibody aggregation propensity.  Lauer, et. al. J Pharm Sci 2012
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of constraint added to pose. (Name of AddSapConstraintMover).
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="multiplier" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Multiply the SapScore by this before adding to the sum.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="penalty_per_unit" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   If the math expression is outside lower_bound or upper_bound, apply this penalty for each unit past the bounds.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lower_bound" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The lowest value of the math expression that will not incur a penalty. Leaving this blank or not including it will have no lower_bound.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_bound" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The highest value of the math expression that will not incur a penalty. Leaving this blank or not including it will have no upper_bound.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddSegmentDataMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds a segment to the StructureData
 </xs:documentation></xs:annotation>
 <xs:attribute name="segment_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of new segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="abego" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   ABEGO of new segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct" type="dssp_string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Secondary structure of new segment. Must be same length as ABEGO string.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AddSidechainConstraintsToHotspots_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain containing the relevant hotspots, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="coord_sdev" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of coordinate standard deviations for constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residues in residue numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AlignByResidueSelectorMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Aligns two poses through the selected residues
 </xs:documentation></xs:annotation>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying residues to take into account in the reference pose The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="query_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying residues to take into account in the query pose The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AlignChain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Align a chain in the working pose to a chain in a pose on disk (CA superposition). All chains in the moving pose are rotated into the new coordinate frame, but the rotation is calculated on the specified chain. Specifying the 0th chain results in a whole-Pose alignment. target and source chains must have the same length of residues.
 </xs:documentation></xs:annotation>
 <xs:attribute name="target_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   file name of the target pose on disk. The pose will be read just once at the start of the run and saved in memory to save I/O
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="source_chain" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   the chain number in the working pose. 0 means the entire pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_chain" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   the chain number in the target pose. 0 means the entire pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="align_to_com" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, will align pose to COM instead of target
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AlignEnds_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="parallel" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Align ends in a parallel orientation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_threshold" type="real" default="18.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbors" type="non_negative_integer" default="6">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="N_terminal_count" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="odd" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="even" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_pose" type="xs:string" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stagger" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="strand_length" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_strands" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chains" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sequence_separation" type="non_negative_integer" default="15">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues_to_align_on_pose" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   + separated list of non-negative integers
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues_to_align_on_template" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   + separated list of non-negative integers
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="AlignPDBInfoToSequences_subelement_Target_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Targets and settings of the sequences to align to.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   unused but useful for keeping track of what protein you're looking at
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sequence" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   sequence of current chain/protein
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chains" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   chains to set with current protein
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segmentIDs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   segmentIDs to set for the current protein
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="insCodes" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   insertion codes to set for the current protein
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_numbers" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue numbers to set for current chain (must be of size 1 (used as a starting number), or the size of 'sequence', or empty)
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AlignPDBInfoToSequences_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Align the PDBInfo of a pose to some given sequences. This mover does not alter geometry or sequence of the pose. The only thing that is altered is the PDBInfo. The goal of this mover is to re-number/re-chain a pose so that its PDBInfo is in sync with some reference.
 There are two modes. In 'single' mode all the target sequences are appended in order and the entire pose is aligned to that sequence. In 'multiple' mode we attempt to align the sequence of each chain of the pose to each of the target sequences.  If we experience a perfect match, we will renumber based on that target sequence.
 For more information, please reference the online documentation.
 WARNING 1: if you have a very long sequence, (1000s of residues) this protocol can use a lot of memory due to the SmithWaterman alignment.  Be cautious of this.
 WARNING 2: This will most likely not give you the correct results if your pose or target sequence contain carbohydrate or other residues that are represented using [ ] or ( ).
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Target" type="AlignPDBInfoToSequences_subelement_Target_type"/>
 </xs:choice>
 <xs:attribute name="mode" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Which mode to run in. options: ['single', 'multiple']
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="json_fns" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the json sequence file(s) (separated by ',')
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="throw_on_fail" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   throw on failure.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sequence_alignment_cut_max" type="positive_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of cuts to allow when doing the sequence alignment.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AlignResiduesMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Align one set of residues onto another
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Unique id for this mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_selectors" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selectors specifying residues to align onto the target
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_selectors" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selectors specifying residues where template should be aligned. Must be same size as template
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="size_cs_pair">
 <xs:restriction base="xs:string">
  <xs:pattern value="[+]?[0-9]+,[+]?[0-9]+"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_AnalyzeLoopModeling_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="loopLengthRange" type="size_cs_pair" default="2,5">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="move_map_Jump_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  jumps are the not-chemistry internal coordinate connections between separate parts of your pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="number" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Which jump number (in the FoldTree)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="setting" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   true for move, false for don't move
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="move_map_Chain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  this controls a kinematically contiguous chain (think protein chains)
 </xs:documentation></xs:annotation>
 <xs:attribute name="number" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   which chain?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   move sidechain chi torsions?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   move backbone torsions?
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="move_map_Span_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO, probably a user-defined region of the Pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="begin" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   beginning of span
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   end of span
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   move sidechain chi torsions?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   move backbone torsions?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondangle" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   move 3-body angles?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondlength" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   move 2-body lengths?
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="move_map_ResidueSelector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Residue selector defined region of the Pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   move sidechain chi torsions?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   move backbone torsions?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondangle" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   move 3-body angles?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondlength" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   move 2-body lengths?
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="optionally_named_move_map_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  MoveMap specification
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Jump" type="move_map_Jump_type"/>
  <xs:element name="Chain" type="move_map_Chain_type"/>
  <xs:element name="Span" type="move_map_Span_type"/>
  <xs:element name="ResidueSelector" type="move_map_ResidueSelector_type"/>
 </xs:choice>
 <xs:attribute name="bb" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   move backbone torsions?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   move sidechain chi torsions?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   move all jumps?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="minimizer_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="linmin_iterated"/>
  <xs:enumeration value="linmin_iterated_atol"/>
  <xs:enumeration value="dfpmin"/>
  <xs:enumeration value="dfpmin_armijo"/>
  <xs:enumeration value="dfpmin_armijo_nonmonotone"/>
  <xs:enumeration value="dfpmin_atol"/>
  <xs:enumeration value="dfpmin_armijo_atol"/>
  <xs:enumeration value="dfpmin_armijo_nonmonotone_atol"/>
  <xs:enumeration value="dfpmin_strong_wolfe"/>
  <xs:enumeration value="dfpmin_strong_wolfe_atol"/>
  <xs:enumeration value="lbfgs"/>
  <xs:enumeration value="lbfgs_armijo"/>
  <xs:enumeration value="lbfgs_armijo_rescored"/>
  <xs:enumeration value="lbfgs_armijo_atol"/>
  <xs:enumeration value="lbfgs_armijo_nonmonotone"/>
  <xs:enumeration value="lbfgs_armijo_nonmonotone_atol"/>
  <xs:enumeration value="lbfgs_strong_wolfe"/>
  <xs:enumeration value="GA"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_AnchoredGraftMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Authors: Jared Adolf-Bryfogle (jadolfbr@gmail.com) and Steven Lewis
. Class to graft a pose onto a pose
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="2">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of ccd cycles to perform
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_repack" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   perform a final repack of the grafted residues and neighbors
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_at_closure" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Stop once chainbreaks are closed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_dis" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance used to identify neighbors
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_sampling" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Skip sampling of backbone torsion angles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mintype" type="minimizer_type">
  <xs:annotation><xs:documentation xml:lang="en">
   Type of minimizer to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="copy_pdbinfo" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Copy PDBInfo from the pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scaffold_flex_Nter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many residues to the N terminus of the grafted location in the scaffold should be flexible?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scaffold_flex_Cter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many residues to the C terminus of the grafted location in the scaffold should be flexible?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="insert_flex_Nter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many residues in the N terminus of the graft should be flexible?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="insert_flex_Cter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many residues in the C terminus of the graft should be flexible?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="Nter_overhang" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Desired size of N terminal overhang
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="Cter_overhang" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Desired size of C terminal overhang
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Graft begins after this residue in the scaffold.  Will delete residues between start and end in the scaffold. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Graft ends before this residue in the scaffold.  Will delete residues between start and end in the scaffold.  
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cen_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Centroid score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fa_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Full atom score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="spm_reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AntibodyCDRGrafter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Graft CDR loops from one structure to another, optionally optimize CDRs and neighbor CDRs of the grafted one. Results in 100 percent loop closure if using both graft graft movers (where peptide bond geometries of both ends are checked relative to ideal values).
 </xs:documentation></xs:annotation>
 <xs:attribute name="cdrs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String specifying CDRs to graft
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdr" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String specifying CDR to graft
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdr_definition" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String defining CDRs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_ab_scheme" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Sets the antibody numbering scheme. Must also specify cdr_definition when using this option
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="donor_structure_from_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to the structure used for the graft. Either use donor_structure_from_pdb or donor_structure_from_spm. One of these is required.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="donor_structure_from_spm" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Takes donor structure from the SavePoseMover. Either use donor_structure_from_pdb or donor_structure_from_spm (one is required )
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_secondary_graft_mover" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we use the secondary graft mover if the graft is not closed using the first?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nter_overhang" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of extra residues on the Nter side of the CDR to use for grafting
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cter_overhang" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of extra residues on the Cter side of the CDR to use for grafting
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_after_closure" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we stop after graft closure?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimize_cdrs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we optimize grafted and neighbor CDRs using dihedral constrained relax?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimize_cdr4_if_neighbor" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Optimize CDR4 if a neighbor CDR is grafted
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dihedral_cst_wt" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight of dihedral constraints used during optimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="ABdesign_protocols">
 <xs:restriction base="xs:string">
  <xs:enumeration value="DETERMINISTIC_GRAFT"/>
  <xs:enumeration value="EVEN_CLUSTER_MC"/>
  <xs:enumeration value="EVEN_LENGTH_CLUSTER_MC"/>
  <xs:enumeration value="GENERALIZED_MONTE_CARLO"/>
  <xs:enumeration value="GEN_MC"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_AntibodyDesignMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
 Main mover of RosettaAntibodyDesign (RAbD). One can set seq_design_cdrs if only sequence designing CDRs (which will use CDR cluster-profiles by default) and/or graft_design_cdrs to control which CDRs graft-designed through integrated antibody database sampling(if any).  A cdr instruction file can be set to further limit these options or set only specific lengths or clusters to be designed.  The interface will be analyzed at the end of the protocol and information added to the scorefile.  light_chain must be set either in the tag or on the cmd-line.  Please see the RAbD Manual for more information.
 </xs:documentation></xs:annotation>
 <xs:attribute name="min_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use for minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom_pair_cst_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for atom pair constraints to use in the antibody design minimization score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dihedral_cst_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for dihedral constraints to use in the antibody design minimization score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="global_atom_pair_cst_scoring" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use atom pair constraints in the antibody design minimization score function?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="global_dihedral_cst_scoring" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Score dihedral constraints to use in the global antibody design score function?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="light_chain" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the light chain if not a camelid antibody.  If not set here, it must be set on the cmd-line
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="seq_design_cdrs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   CDR regions to be Sequence-Designed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="graft_design_cdrs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   CDR regions to be Graft-Designed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mintype" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the mintype for all designign CDRs.  Default min. Can be set individually in the CDR instructions file.  relax is much more intensive, but takes significantly longer 
 Understood Options: legal = [min, cartmin, relax, backrub, pack, dualspace_relax, cen_relax, none]
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="instruction_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to the CDR instruction file (see application documentation for format)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mc_optimize_dG" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Optimize the dG during MonteCarlo.  dG is calculated by InterfaceAnalyzer. 
It is not possible to do this within overall scoring, but where possible, do this during MC calls.
 This option results in better dGs.  See the options mc_interface_weight and mc_total_weight to control the components of each to the score. 
 Default is interface weight at 1.0, total weight at 0. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mc_interface_weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight of interface score (dG) if using mc_optimize_dG
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mc_total_weight" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight of the classic total score if using mc_optimize_dG
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="do_dock" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Run RosettaDock during the inner cycles? Significantly increases run time. Default False
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_epitope_csts" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the ParatopeEpitopeSiteConstraintMover during design instead of just the ParatopeSiteConstraintMover. Default False
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epitope_residues" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Use these residues as the epitope residues.  Adds site constraints for dock-design. (auto-detects by default ). Comma separated.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="paratope_cdrs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Use these CDRs for Paratope Constraints instead of all of them. Useful if attempting to create or optimize the interface of a specific CDR, or keep a CDR in contact with a region of antigen. Comma separated.
List of CDR regions (string) devided by one of the following characters: ":,'`~+*|;. "Recognized CDRs: "Aroop|Chothia|Kabat|Martin|North|"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="random_start" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Start with random CDRs from the antibody design database for any undergoing GraftDesign
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_protocol" type="ABdesign_protocols" default="EVEN_CLUSTER_MC">
  <xs:annotation><xs:documentation xml:lang="en">
   Sets the design protocol (see app documentation for more information)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="primary_cdrs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Manually set the CDRs which can be chosen in the outer cycle. 
These should be on for either Sequence-Design or Graft-Design. 
Normally, the outer cycles are whatever CDRs we are designing, including CDRs which are sequence-design only.  
Use this if you are primarily interested in specific CDRs (such as graft-designing H3 and allowing H1 and L3 to sequence design during the inner cycle.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dock_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Change the number of time the dock protocol is run
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_dis" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the interface detection distance. Default 8A
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_dis" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the neighbor detection distance. Default 6A
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="outer_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the number of outer cycles. Default 25.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="inner_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the number of inner (minimization) cycles. Default 1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mutate_framework_for_cluster" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we add framework mutations for the specified cdr? Default True.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="outer_kt" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature to use for outer cycle. Default 1.0
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="inner_kt" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature to use for inner cycle. Default 1.0
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="top_designs" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of top designs to keep. Default is 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="run_AIM" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Run InterfaceAnalyzer at the end of the protocol on the pose?  Default True
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_antigen" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Removes antigen at the very beginning of the protocol. Default False
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="ab_numbering_schemes">
 <xs:restriction base="xs:string">
  <xs:enumeration value="AHO"/>
  <xs:enumeration value="AHO_Scheme"/>
  <xs:enumeration value="AHo"/>
  <xs:enumeration value="AHo_Scheme"/>
  <xs:enumeration value="Chothia"/>
  <xs:enumeration value="Chothia_Scheme"/>
  <xs:enumeration value="Enhanced_Chothia"/>
  <xs:enumeration value="Enhanced_Chothia_Scheme"/>
  <xs:enumeration value="IMGT"/>
  <xs:enumeration value="IMGT_Scheme"/>
  <xs:enumeration value="Kabat"/>
  <xs:enumeration value="Kabat_Scheme"/>
  <xs:enumeration value="aho"/>
  <xs:enumeration value="chothia"/>
  <xs:enumeration value="enhanced_Chothia"/>
  <xs:enumeration value="imgt"/>
  <xs:enumeration value="kabat"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_AntibodyNumberingConverterMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Converts numbering schemes of an antibody, independent of AntibodyInfo. By default, works on a SINGLE antibody FAB with chains L and H, as the rest of Rosetta
 </xs:documentation></xs:annotation>
 <xs:attribute name="from" type="ab_numbering_schemes" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Current numbering scheme
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="to" type="ab_numbering_schemes" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Numbering scheme to be converter to
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="assembly_scorer">
 <xs:choice>
  <xs:element name="InterModelMotifScorer" type="assembly_scorer_InterModelMotifScorer_complex_type"/>
  <xs:element name="IntraDesignTerminusMotifScorer" type="assembly_scorer_IntraDesignTerminusMotifScorer_complex_type"/>
  <xs:element name="LigandScorer" type="assembly_scorer_LigandScorer_complex_type"/>
  <xs:element name="MotifScorer" type="assembly_scorer_MotifScorer_complex_type"/>
  <xs:element name="PartnerMotifScorer" type="assembly_scorer_PartnerMotifScorer_complex_type"/>
  <xs:element name="SegmentContactOrderScorer" type="assembly_scorer_SegmentContactOrderScorer_complex_type"/>
  <xs:element name="StartingNodeMotifScorer" type="assembly_scorer_StartingNodeMotifScorer_complex_type"/>
  <xs:element name="SubsetPartnerMotifScorer" type="assembly_scorer_SubsetPartnerMotifScorer_complex_type"/>
  <xs:element name="TerminusMotifScorer" type="assembly_scorer_TerminusMotifScorer_complex_type"/>
  <xs:element name="TopNMotifScorer" type="assembly_scorer_TopNMotifScorer_complex_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="assembly_scorer_InterModelMotifScorer_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Basic Motif score among non-adjacent helices
 </xs:documentation></xs:annotation>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   How heavily will this term be weighted during scoring?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_scorer_IntraDesignTerminusMotifScorer_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Motif score to measure packing of assembly against partner PDB
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   How heavily will this term be weighted during scoring?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimum_distance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   How far apart should that residue optimally be from the terminus?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maximum_unpenalized_variance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   How far off from that can it be before it should be penalized?
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_scorer_LigandScorer_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Scores how well ligand is buried based on orientation of nearby Ca's
 </xs:documentation></xs:annotation>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   How heavily will this term be weighted during scoring?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ligand_interaction_cutoff_distance" type="real" default="5.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The distance cutoff between ligand atom and c alpha that is considered an interaction.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_scorer_MotifScorer_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Basic Motif score among all helices
 </xs:documentation></xs:annotation>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   How heavily will this term be weighted during scoring?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_scorer_PartnerMotifScorer_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Motif score to measure packing of assembly against partner PDB
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   How heavily will this term be weighted during scoring?
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_scorer_SegmentContactOrderScorer_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Favors assemblies whose segments form contacts with segments distant in the assembly
 </xs:documentation></xs:annotation>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   How heavily will this term be weighted during scoring?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_scorer_StartingNodeMotifScorer_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Specifically scores packing against the starting node
 </xs:documentation></xs:annotation>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   How heavily will this term be weighted during scoring?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_scorer_SubsetPartnerMotifScorer_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Motif score to measure packing of assembly against partner PDB
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   How heavily will this term be weighted during scoring?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region_start" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   What is the first residue of the scored subset?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region_end" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   What is the last residue of the scored subset?
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_scorer_TerminusMotifScorer_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Motif score to measure packing of assembly against partner PDB
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   How heavily will this term be weighted during scoring?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="partner_residue" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residue of the partner should this scorer calculate distance to?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimum_distance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   How far apart should that residue optimally be from the terminus?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maximum_unpenalized_variance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   How far off from that can it be before it should be penalized?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="terminus" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which terminus should be scored?
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_scorer_TopNMotifScorer_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Basic Motif score among all helices
 </xs:documentation></xs:annotation>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   How heavily will this term be weighted during scoring?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scores_to_keep" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   How many scores from each pair should be counted?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_mover_AssemblyScorers_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The subtags of this tag define the AssemblyScoreFunction that will be used to evaluate assemblies
 </xs:documentation></xs:annotation>
 <xs:group ref="assembly_scorer" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:group name="assembly_requirement">
 <xs:choice>
  <xs:element name="ClashRequirement" type="assembly_requirement_ClashRequirement_complex_type"/>
  <xs:element name="DsspSpecificLengthRequirement" type="assembly_requirement_DsspSpecificLengthRequirement_complex_type"/>
  <xs:element name="KeepLigandContactsRequirement" type="assembly_requirement_KeepLigandContactsRequirement_complex_type"/>
  <xs:element name="LengthInResiduesRequirement" type="assembly_requirement_LengthInResiduesRequirement_complex_type"/>
  <xs:element name="LigandClashRequirement" type="assembly_requirement_LigandClashRequirement_complex_type"/>
  <xs:element name="NonTerminalStartingSegmentRequirement" type="assembly_requirement_NonTerminalStartingSegmentRequirement_complex_type"/>
  <xs:element name="SizeInSegmentsRequirement" type="assembly_requirement_SizeInSegmentsRequirement_complex_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="assembly_requirement_ClashRequirement_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Checks for clashes between segments in the assembly
 </xs:documentation></xs:annotation>
 <xs:attribute name="maximum_clashes_allowed" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of clashes to allow in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clash_radius" type="real" default="4.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Radius in Angstroms within which two residues are considered to be clashing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="dssp_enum">
 <xs:restriction base="xs:string">
  <xs:enumeration value="H"/>
  <xs:enumeration value="L"/>
  <xs:enumeration value="E"/>
  <xs:enumeration value="X"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="assembly_requirement_DsspSpecificLengthRequirement_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Restricts the number of residues in segments with the specified DSSP
 </xs:documentation></xs:annotation>
 <xs:attribute name="dssp_code" type="dssp_enum" default="X">
  <xs:annotation><xs:documentation xml:lang="en">
   DSSP code whose length the requirement is restricting
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maximum_length" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of residues in a segment with the given secondary structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimum_length" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of residues in a segment with the given secondary structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_requirement_KeepLigandContactsRequirement_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Fails if an assembly's ligands lose more than a set number of contacts
 </xs:documentation></xs:annotation>
 <xs:attribute name="contact_distance_cutoff" type="real" default="2.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum distance between two contact atoms before the contact is considered broken
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_requirement_LengthInResiduesRequirement_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Checks the number of segments in the assembly
 </xs:documentation></xs:annotation>
 <xs:attribute name="maximum_length" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of residues to allow in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimum_length" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of residues in the final assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_requirement_LigandClashRequirement_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Checks for clashes between the assembly and its ligands
 </xs:documentation></xs:annotation>
 <xs:attribute name="maximum_clashes_allowed" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of clashes to allow in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clash_radius" type="real" default="4.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Radius in Angstroms within which two residues are considered to be clashing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_requirement_NonTerminalStartingSegmentRequirement_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Requires that any required segments be non-terminal
 </xs:documentation></xs:annotation>
</xs:complexType>

<xs:complexType name="assembly_requirement_SizeInSegmentsRequirement_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Checks the number of segments in the assembly
 </xs:documentation></xs:annotation>
 <xs:attribute name="maximum_size" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of secondary structure elements (including loops) to allow in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimum_size" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of secondary structure elements (including loops) in the final assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_mover_AssemblyRequirements_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Subtags of this tag define the set of requirements that will be used when evaluating SEWING assemblies
 </xs:documentation></xs:annotation>
 <xs:group ref="assembly_requirement" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="ligand_Coordination_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Contains subtags defining ideal coordination environments for atoms in the ligand
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="IdealContacts">
   <xs:complexType mixed="true">
    <xs:attribute name="distance" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Ideal distance between ligand and contact atom
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="angle" type="real" default="109.5">
     <xs:annotation><xs:documentation xml:lang="en">
      Ideal angle between this atom's contacts
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="dihedral_1" type="real" default="30">
     <xs:annotation><xs:documentation xml:lang="en">
      Ideal dihedral angle: contact_base - contact - ligand_atom - other_contact
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="dihedral_2" type="real" default="30">
     <xs:annotation><xs:documentation xml:lang="en">
      Ideal dihedral angle: contact - ligand_atom - other_contact - other_base
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="max_coordinating_atoms" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Maximum number of contacts that this atom can form. Note that IdealContacts tags do not need to be defined for atoms with no contacts.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="ligand_atom_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Rosetta name of the ligand atom to which this tag applies
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="coordination_files" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of coordination file names for this ligand
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="geometry_score_threshold" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum score geometry score to allow when forming a contact
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="ligands_subtag_Ligand_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Specifies the position of a ligand and the contacts that it forms with the input pose
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Contact">
   <xs:complexType mixed="true">
    <xs:attribute name="partner_contact" type="rosetta_bool" default="false">
     <xs:annotation><xs:documentation xml:lang="en">
      Does this tag specify a contact with the partner PDB?
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="contact_resnum" type="refpose_enabled_residue_number" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Number of residue participating in this contact in PDB or Rosetta numbering
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="ligand_atom_name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Rosetta name for the ligand atom participating in the contact
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="contact_atom_name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Rosetta name for the protein atom participating in the contact
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Coordination" type="ligand_Coordination_complex_type"/>
 </xs:choice>
 <xs:attribute name="partner_ligand" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Is this ligand found in the partner PDB?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_conformers" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of file containing a list of PDBs (or other Rosetta-compatible input files) containing alternate ligand conformations to sample
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="alignment_atoms" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of atom names to use when aligning ligand conformers to one another
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="auto_detect_contacts" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we automatically detect contacts that are joined to the ligand by inter-residue chemical bonds?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ligand_resnum" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number of ligand in either PDB or Rosetta numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ligand_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector indicating ligand(s) covered in this tag. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="assembly_mover_Ligands_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Subtags of this tag specify the ligands present in the input pose and their respective protein contacts.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Ligand" type="ligands_subtag_Ligand_complex_type"/>
 </xs:choice>
</xs:complexType>

<xs:complexType name="mover_AppendAssemblyMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Builds an assembly around the segment provided in the input PDB file
 </xs:documentation></xs:annotation>
 <xs:all>
  <xs:element name="AssemblyScorers" type="assembly_mover_AssemblyScorers_complex_type" minOccurs="0" maxOccurs="1"/>
  <xs:element name="AssemblyRequirements" type="assembly_mover_AssemblyRequirements_complex_type" minOccurs="0" maxOccurs="1"/>
  <xs:element name="Ligands" type="assembly_mover_Ligands_complex_type" minOccurs="0" maxOccurs="1"/>
 </xs:all>
 <xs:attribute name="start_temperature" type="real" default="0.6">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature at start of simulated annealing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_temperature" type="real" default="0.6">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature at end of simulated annealing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_probability" type="real" default="0.05">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of adding a triplet of segments at any given step during assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delete_probability" type="real" default="0.005">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of deleting a terminal triplet of segments at any given step during assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="conformer_switch_probability" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of switching ligand conformers during assembly. This should only be used if a ligand is present AND if you have provided conformers for that ligand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="window_width" type="positive_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   Required number of overlapping residues for two segments to be considered a match. Used in hashless SEWING only (for hashed SEWING, this is determined by the hasher settings used when generating the edge file).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimum_cycles" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of Monte Carlo cycles for assembly before completion requirements are checked.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maximum_cycles" type="non_negative_integer" default="100000">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of Monte Carlo cycles for assembly before forced termination.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="model_file_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to file defining segments to use during assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hashed" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the hasher during assembly to check overlap of all atoms? Requires an input edge file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="edge_file_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to edge file to use during assembly (only used if hashed is set to true)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_segments" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of segments to include in the final assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_segment_length" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of residues to include in a segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_pose_per_move" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Setting to true will output a pose after each move/revert.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recover_lowest_assembly" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Setting to true will output the lowest assembly in the final pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recursive_depth" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   How many nodes after the terminal node should we keep track of alignments for?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pose_segment_starts" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue numbers of the first residue in each segment in the input pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pose_segment_ends" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue numbers of the last residue in each segment in the input pose. Length must match that of pose_segment_starts.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pose_segment_dssp" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String indicating the secondary structure of user-specified segments, one character per segment (e.g. HLH for a helix-loop-helix motif). Length should match that of pose_segment_starts and pose_segment_ends if specified.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="strict_dssp_changes" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Segments require at least a 2-residue change in DSSP to specify a new segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_segments_from_dssp" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Determine segment boundaries based on pose secondary structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="match_segments" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Which segments from the input pose should we be able to append onto? Defaults to exterior segments.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="partner_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of PDB file containing binding partner for this assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="required_resnums" type="refpose_enabled_residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue numbers of residues in the input structure that must be preserved
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_recursion" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   How many alignments from the end nodes should be stored in memory?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="modifiable_terminus" type="xs:string" default="B">
  <xs:annotation><xs:documentation xml:lang="en">
   Which terminus of the starting node may be modified.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_partner" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the output pdb contain the partner?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extend_mode" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should SEWING append only a single helix?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_node_vital_segments" type="xs:string" default="all">
  <xs:annotation><xs:documentation xml:lang="en">
   Which segments from starting node are vital? (terminal or all)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="required_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector specifying residues in the input structure that must be preserved. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name to identify this mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AssemblyMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Basic SEWING mover for generating assemblies using random substructures. Uses Monte Carlo sampling and scores based on motif score measuring potential packing interactions.
 </xs:documentation></xs:annotation>
 <xs:all>
  <xs:element name="AssemblyScorers" type="assembly_mover_AssemblyScorers_complex_type" minOccurs="0" maxOccurs="1"/>
  <xs:element name="AssemblyRequirements" type="assembly_mover_AssemblyRequirements_complex_type" minOccurs="0" maxOccurs="1"/>
 </xs:all>
 <xs:attribute name="start_temperature" type="real" default="0.6">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature at start of simulated annealing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_temperature" type="real" default="0.6">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature at end of simulated annealing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_probability" type="real" default="0.05">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of adding a triplet of segments at any given step during assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delete_probability" type="real" default="0.005">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of deleting a terminal triplet of segments at any given step during assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="conformer_switch_probability" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of switching ligand conformers during assembly. This should only be used if a ligand is present AND if you have provided conformers for that ligand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="window_width" type="positive_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   Required number of overlapping residues for two segments to be considered a match. Used in hashless SEWING only (for hashed SEWING, this is determined by the hasher settings used when generating the edge file).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimum_cycles" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of Monte Carlo cycles for assembly before completion requirements are checked.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maximum_cycles" type="non_negative_integer" default="100000">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of Monte Carlo cycles for assembly before forced termination.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="model_file_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to file defining segments to use during assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hashed" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the hasher during assembly to check overlap of all atoms? Requires an input edge file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="edge_file_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to edge file to use during assembly (only used if hashed is set to true)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_segments" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of segments to include in the final assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_segment_length" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of residues to include in a segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_pose_per_move" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Setting to true will output a pose after each move/revert.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recover_lowest_assembly" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Setting to true will output the lowest assembly in the final pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name to identify this mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AsymFoldandDockMoveRbJumpMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  a symmetric fold and dock
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain_start" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   at what residue doe the chain to which the fragment belongs starts?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AsymFoldandDockRbTrialMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  a symmetric fold and dock
 </xs:documentation></xs:annotation>
 <xs:attribute name="rot_mag" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   rotamer magnitude
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trans_mag" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   translation magnitude
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rigid_body_cycles" type="non_negative_integer" default="50">
  <xs:annotation><xs:documentation xml:lang="en">
   num of rigid body cycles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="smooth_move" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   to use smooth move?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mc_filter" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   use Monte Carlo filter?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AtomCoordinateCstMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="coord_dev" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   the strength/deviation of the constraints to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bounded" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   whether to use harmonic (false) or bounded (true) constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bound_width" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   the width of the bounded constraint (e.g. -relax::coord_cst_width)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sidechain" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   whether to constrain just the backbone heavy atoms (false) or all heavy atoms (true) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="flip_hnq" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if true, use the pose from -in:file:native as the reference instead of the pose at apply time
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="func_groups" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   f true, will apply coordinate constraints on the functional atoms of the constraints residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_AtomTree_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="start_tree_at_chain" type="char">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain from which the atom tree ought to begin
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ab_fold_tree" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Antibody-based foldtree?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="host_chain" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain that isn't part of the antibody, which only matters if ab_fold_tree is true -- nonetheless, typically 2 if ab_fold_tree is false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fold_tree_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Foldtree may be read in from a file, if desired
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="docking_ft" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a classic docking foldtree
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="simple_ft" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Impose the simplest possible foldtree
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   If the docking foldtree is desired, over which jump should it apply?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnum" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue central to this AtomTree resetting
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_num" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue central to this AtomTree resetting
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="connect_to" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom to be connected to
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="anchor_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Anchor residue for the foldtree
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="connect_from" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Corresponding atom on the anchor residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="two_parts_chain1" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Is the aim actually to cut chain 1 in two parts?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="update_residue_variants" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Add CUTPOINT variant types according to the FoldTree
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from_remark" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If a KEY is provided, the FoldTree is loaded from a REMARK with that KEY.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="stubsets_sub_StubSets_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A container for tags that indicate stubfiles to be loaded
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="stubfile" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      File that has stubs in it
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
</xs:complexType>

<xs:complexType name="mover_Auction_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A PlacementAuctionMover pays increasing prices to put hotspots in place on a chain
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="StubSets" type="stubsets_sub_StubSets_type"/>
 </xs:choice>
 <xs:attribute name="chain_to_design" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain where design ought to be performed, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_cb_dist" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum distance from ideal placement that is nonetheless considered a hit
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cb_force" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Force to apply to CB atoms
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stubscorefxn" type="xs:string" default="backbone_stub_constraint">
  <xs:annotation><xs:documentation xml:lang="en">
   Scoring function to apply to the stubs being placed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The reference pose to use for finalizing the stub sets (defaults to input pose).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BBGaussian_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Monte Carlo update for chain molecules: Biased Gaussian steps in torsional space The Journal of Chemical Physics, Vol. 114, No. 18. (2001), pp. 8154-8158. Two steps for perturbing the backbone and keeping the geometry constrain Step 1: Gaussian Biased steps in torsional space: the end atoms of the moving segment should be choosen by user and to keep the geometry constrain(6), the DOF of the moving segment greater than 6 Step 2: pivot update the bb conformation, or followed by a chainclosure method (BBConRot)
 </xs:documentation></xs:annotation>
 <xs:attribute name="factorA" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="factorB" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_atoms" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dof" type="non_negative_integer" default="8">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pivot" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="shrink" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="autoA" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fix_tail" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO overwrite option[bbg::fix_short_segment]
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="BackboneGridSampler_lohigh">
 <xs:restriction base="xs:string">
  <xs:enumeration value="low"/>
  <xs:enumeration value="high"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="stfbbg_MainchainTorsion" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing individual torsions in the helix
 </xs:documentation></xs:annotation>
 <xs:attribute name="index" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Mainchain torsion index indicated
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_index" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue whose mainchain torsion is being specified (if there is more than one residue per repeat)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="value" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   A single value in degrees, if this torsion ought to be fixed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start" type="real" default="-180.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Starting value of a torsion range in degrees
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="real" default="-180.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Ending value of a torsion range in degrees
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="samples" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples to be taken of the dihedral range indicated
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BackboneGridSampler_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sample mainchain torsions for peptides in a grid, saving good conformations
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MainchainTorsion" type="stfbbg_MainchainTorsion"/>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction to employ
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_samples" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of total backbone combinations to be sampled.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selection_type" type="BackboneGridSampler_lohigh">
  <xs:annotation><xs:documentation xml:lang="en">
   Score criterion for selection: "high" or "low".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pre_scoring_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A mover to apply after backbone torsions are set but before final scoring and evaluation (like a min mover or something similar).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pre_scoring_filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A filter to apply before scoring, which could help avoid wasteful scoring of bad conformations (like a bump check filter).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdbs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Dump all PDBs, if true; otherwise, there will be no PDB output at all.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A prefix to apply to all output PDBs.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nstruct_mode" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, sample a different set of mainchain torsions for each job; if false, each job consists of the whole mainchain sampling effort.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nstruct_repeats" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of repeats to perform for each nstruct.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues_per_repeat" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of residues in the minimal repeating unit of this secondary structure.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_count" type="non_negative_integer" default="12">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of residues in the secondary structure exemplar to be sampled.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeat_count" type="non_negative_integer" default="12">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of residue-repeats in the secondary structure exemplar to be sampled.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_name" type="xs:string" default="ALA">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue type of which to create the secondary structure, indicated by three-letter code.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_name_1" type="xs:string" default="ALA">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue type of which to create the secondary structure, indicated by three-letter code.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_name_2" type="xs:string" default="ALA">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue type of which to create the secondary structure, indicated by three-letter code.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_name_3" type="xs:string" default="ALA">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue type of which to create the secondary structure, indicated by three-letter code.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_name_4" type="xs:string" default="ALA">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue type of which to create the secondary structure, indicated by three-letter code.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cap_ends" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, adds acetylated and amidated N- and C- termini.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BackboneSampler_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adapted from the protein interface design backrub mover. Mover that makes a given number of Monte Carlo steps attempting backrub-like Gaussian backbone moves to the provided protein. May be used to generate an ensemble of backbones.
 </xs:documentation></xs:annotation>
 <xs:attribute name="moves" type="non_negative_integer" default="1000">
  <xs:annotation><xs:documentation xml:lang="en">
   number of backbone moves to make
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="kT" type="real" default="0.6">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature parameter (kT) for Monte Carlo sampling
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BackboneTorsionPerturbation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Not documented.  Appears to be some sort of relax analogue.  Related to BackboneTorsionSampler
 </xs:documentation></xs:annotation>
 <xs:attribute name="start_res" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   nominally lower bound for a region to sample (NOTE: THIS PARAMETER IS IGNORED.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_res" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   nominally upper bound for a region to sample (NOTE: THIS PARAMETER IS IGNORED.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   file path to native pose, used to calculate gdtmm
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="increase_cycles" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   multiply cycle count by this
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recover_low" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   recover the lowest-energy structure seen in the Monte Carlo trajectory at the end?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp" type="xs:decimal">
  <xs:annotation><xs:documentation xml:lang="en">
   Monte Carlo temperature
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   use this scorefunction (from the SCOREFXN section)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_snapshots" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   dump structures during sampling, Note that dump_snapshots must be set to make snapshot_prefix or snapshot_interval active
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="snapshot_prefix" type="xs:string" default="snapshot">
  <xs:annotation><xs:documentation xml:lang="en">
   prefix for structures dumped during sampling, Note that dump_snapshots must be set to make snapshot_prefix or snapshot_interval active
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="snapshot_interval" type="positive_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   how frequently to dump structures during sampling, Note that dump_snapshots must be set to make snapshot_prefix or snapshot_interval active
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BackboneTorsionSampler_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Not documented.  Appears to be some sort of relax analogue.  Related to BackboneTorsionPerturbation
 </xs:documentation></xs:annotation>
 <xs:attribute name="start_res" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   nominally lower bound for a region to sample (NOTE: THIS PARAMETER IS IGNORED)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_res" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   nominally upper bound for a region to sample (NOTE: THIS PARAMETER IS IGNORED
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   file path to native pose, used to calculate gdtmm
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="increase_cycles" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   multiply cycle count by this
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recover_low" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   recover the lowest-energy structure seen in the Monte Carlo trajectory at the end?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Monte Carlo temperature
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="local" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   undocumented
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nested" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   undocumented
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   use this scorefunction (from the SCOREFXN section)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_snapshots" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   dump structures during sampling, Note that dump_snapshots must be set to make snapshot_prefix or snapshot_interval active
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="snapshot_prefix" type="xs:string" default="snapshot">
  <xs:annotation><xs:documentation xml:lang="en">
   prefix for structures dumped during sampling, Note that dump_snapshots must be set to make snapshot_prefix or snapshot_interval active
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="snapshot_interval" type="positive_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   how frequently to dump structures during sampling, Note that dump_snapshots must be set to make snapshot_prefix or snapshot_interval active
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Backrub_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Purely local moves using rotations around axes defined by two backbone atoms
 </xs:documentation></xs:annotation>
 <xs:attribute name="pivot_residues" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   residues for which contiguous stretches can contain segments (comma separated) can use PDB numbers ([resnum][chain]) or absolute Rosetta numbers (integer)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pivot_atoms" type="xs:string" default="CA">
  <xs:annotation><xs:documentation xml:lang="en">
   main chain atoms usable as pivots (comma separated)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_atoms" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   minimum backrub segment size (atoms)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_atoms" type="non_negative_integer" default="34">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum backrub segment size (atoms)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_angle_disp_4" type="real" default="0.698132">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum angular displacement for 4 atom segments (radians)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_angle_disp_7" type="real" default="0.349066">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum angular displacement for 7 atom segments (radians)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_angle_disp_slope" type="real" default="-0.005818">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum angular displacement slope for other atom segments (radians)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="preserve_detailed_balance" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if set to true, does not change branching atom angles during apply and sets ideal branch angles during initialization if used with MetropolisHastings
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="require_mm_bend" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   if true and used with MetropolisHastings, will exit if mm_bend is not in the score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="residue_number">
 <xs:restriction base="xs:string">
  <xs:pattern value="[0-9]+|[0-9]+[A-Za-z]"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="stfbdd_residue" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing individual residues to be sampled
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="stfbdd_span" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing residue ranges to be sampled
 </xs:documentation></xs:annotation>
 <xs:attribute name="begin" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Beginning of residue range in PDB-or-refpose-or-seqpos notation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   End of residue range in PDB-or-refpose-or-seqpos notation
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BackrubDD_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="residue" type="stfbdd_residue"/>
  <xs:element name="span" type="stfbdd_span"/>
 </xs:choice>
 <xs:attribute name="partner1" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Backrub the first chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="partner2" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Backrub the second chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_distance_cutoff" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance from the interface that counts for backrubbing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="moves" type="non_negative_integer" default="1000">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of total moves to execute
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_move_probability" type="real" default="0.25">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of making sidechain moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="small_move_probability" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of making small moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bbg_move_probability" type="real" default="0.25">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of making big moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real" default="0.6">
  <xs:annotation><xs:documentation xml:lang="en">
   Controls the monte-carlo accept temperature
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BackrubProtocol_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs backrub-style backbone moves
 </xs:documentation></xs:annotation>
 <xs:attribute name="pivot_residues" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Pivot residues to use for backbone moves. Can contain segments (comma separated). Can use PDB numbers ([resnum][chain]) or absolute Rosetta numbers (integer)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pivot_atoms" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   main chain atoms usable as pivots (comma separated)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mc_kt" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature to use for Metropolis criterion
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ntrials" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of trials to perform
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trajectory" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Set to true to dump PDBs along the trajectory (how often is controlled by trajectory_stride option)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trajectory_gz" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Set to true to dump gzipped PDBs along the trajectory (how often is controlled by trajectory_stride option)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recover_low" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the return Pose to be the lowest scoring structure sampled (if false, will be left as last sampled structure)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pivot_residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of residue selector to use to select pivot residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trajectory_apply_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of mover to apply during trajectory. Stride (how often to apply) is affected by trajectory_stride
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trajectory_stride" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How often (in steps) to either dump PDBs or call trajectory_apply_mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BackrubSidechain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Backrub for off-rotamer sidechains
 </xs:documentation></xs:annotation>
 <xs:attribute name="pivot_residues" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   residues for which contiguous stretches can contain segments (comma separated) can use PDB numbers ([resnum][chain]) or absolute Rosetta numbers (integer)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_factory" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A TaskFactory specification to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prob_uniform" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   probability of a uniform move - all sidechain chis are uniformly randomized between -180 degrees and 180 degrees
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prob_withinrot" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   within rotamer - sidechain chis are picked from the Dunbrack distribution for the current rotamer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prob_random_pert_current" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   random perturbation of current position - the current sidechain chis are perturbed +/- 10 degrees from their current positions, biased by the resulting Dunbrack energy. Note that if your score function contains a Dunbrack energy term, this will result in double counting issues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="preserve_detailed_balance" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if set to true, does not change branching atom angles during apply and sets ideal branch angles during initialization if used with MetropolisHastings
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="require_mm_bend" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   if true and used with MetropolisHastings, will exit if mm_bend is not in the score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="record_statistics" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Write histogram of MC scores to statistics_file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="statistics_fileame" type="xs:string" default="brsc_stats.txt">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of file where statistics are being dumped into
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BenchmarkBuildRotamersMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  For benchmarking purposes only. Builds data required to run pack rotamers but does not do any sampling. Input pose is untouched.
 </xs:documentation></xs:annotation>
 <xs:attribute name="nloop" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Equivalent to "-ndruns".Number of complete packing runs before an output (best score) is produced.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BestHotspotCst_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain_to_design" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain to design, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="best_n" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of best-constrained residues for detailed analysis
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cb_force" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Force on CB atoms applied in the hotspot constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BfactorFitting_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Fit atomic B factors to maximize model-map correlation.
 </xs:documentation></xs:annotation>
 <xs:attribute name="wt_adp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight on enforcing nearby atoms to take the same B factors. 0.0005 is generally well-behaved, default=0.001
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wt_dens" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight on density contraints, default=1.0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmax" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=5.0
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scale" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Scaling factor. Is multiplied with the weighted scores after wt_adp and wt_dens are applied, default=5000
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radius_exp" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_iter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum nr of round before exiting, default=200.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimizer" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimizer used for energy minimization. default=lbfgs_armijo_nonmonotone_atol
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="init" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   init=1 means to do a quick scan of overall B factors before beginning refinement; if there is more than one call to this mover in a single trajectory, then only the first needs to have init=1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exact" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Exact B-factor refinement - recommended. default=false Approximate version can behave poorly and is memory intensive.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Increase level of output information. default=false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="deriv_check" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_low" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Low resultion cut off (Angstroms)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_high" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   High resolution cut off (Angstrom)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nresbins" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   This option is not used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weights_to_scan" type="real_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   List of ??? weights to scan. Finds the optimum one to be used. Default="10,20,...,300"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BluePrintBDR_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Build a structure in centroid from a blueprint given an input pdb.
 </xs:documentation></xs:annotation>
 <xs:attribute name="blueprint" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of blueprint file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss_from_blueprint" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use secondary structure assignment in blueprint file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sequence_bias" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   pick fragment using sequence information
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_abego_bias" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   pick fragment using abego torsion information
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constraints_NtoC" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   constrain N- and C- terminal
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constraint_sheet" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   constrain Ca atoms in beta-sheet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constraint_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Coordinate constraint file name.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdb_when_fail" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Output pdb when the protocol fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Loop mover for rebuilding loops
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmdl_attempts" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   number of allowed closure attempts of RemodelLoopMover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_poly_val" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   entire sequence except for rebuilding parts become poly-Valine
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constraint_generators" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Use previously defined ConstraintGenerator movers
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_fold_tree" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep fold tree during variable length building.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invrot_tree" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Invert rotamers, if folding up around a ligand. Like in enzyme design.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BoltzmannRotamerMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Part of CoupledMoves. Replaces a single rotamer based on the Boltzmann probabilities of its rotamers
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="show_packer_task" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   show the PackerTask to be used at the beginning of apply
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BridgeChains_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Given a pose with a jump, this mover uses a fragment insertion monte carlo to connect the specified termini. The new fragment will connect the C-terminal residue of jump1 to the N-terminal residue of jump2, and will have secondary structure and ramachandran space given by "motif." This mover uses the VarLengthBuild code. The input pose must have at least two chains (jumps) to connect, or it will fail.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the architect
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain1" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Indicates the chain which is to be located at the N-terminal end of the new fragment. Building will begin at the C-terminal residue of the jump.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain2" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Indicates the chain which is to be located at the C-terminal end of the new fragment.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segment1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segment2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="motif" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The secondary structure + abego to be used for the backbone region to be rebuilt. Taken from input pose if not specified. The format of this string is: "[Length][SS][ABEGO]-[Length2][SS2][ABEGO2]-...-[LengthN][SSN][ABEGON]" For example, "1LX-5HA-1LB-1LA-1LB-6EB" will build a one residue loop of any abego, followed by a 5-residue helix, followed by a 3-residue loop of ABEGO BAB, followed by a 6-residue strand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutpoint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal_abego" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extend_ss" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overlap" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Build overlap of nested BuildDeNovoBackboneMover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dry_run" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Sets folder of BuildDeNovoBackboneMover to RandomTorsionPoseFolder instead of RemodelLoopMoverPoseFolde
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trials" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   iterations per phase of nested BuildDeNovoBackboneMover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="denovo_prefold_PreFoldMovers_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Prefold protocol
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="mover" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Mover to add to this step step
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="denovo_postfold_PostFoldMovers_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Postfold protocol
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="mover" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Mover to add to this step step
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="denovo_filters_Filters_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filters to apply to generated backbones
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="filter" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Filter to add
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="denovo_architect">
 <xs:choice>
  <xs:element name="BetaSheetArchitect" type="denovo_architect_BetaSheetArchitect_complex_type"/>
  <xs:element name="BlueprintArchitect" type="denovo_architect_BlueprintArchitect_complex_type"/>
  <xs:element name="CompoundArchitect" type="denovo_architect_CompoundArchitect_complex_type"/>
  <xs:element name="HelixArchitect" type="denovo_architect_HelixArchitect_complex_type"/>
  <xs:element name="PoseArchitect" type="denovo_architect_PoseArchitect_complex_type"/>
  <xs:element name="StrandArchitect" type="denovo_architect_StrandArchitect_complex_type"/>
 </xs:choice>
</xs:group>

<xs:simpleType name="bulge_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="[0-9]+([,;][0-9])+"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="extended_abego_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="[0-9]+([,;][0-9])+"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="register_shift_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="-?[0-9]+([,:]-?[0-9])+"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="orientation_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="[U,D](,[U,D])*(:[U,D](,[U,D])*)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="strand_length_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="[0-9]+(:[0-9]+)?(,[0-9]+(:[0-9]+)?)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="denovo_architect_StrandArchitect_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Architect to construct a beta strand
 </xs:documentation></xs:annotation>
 <xs:attribute name="length" type="strand_length_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of single integers and hyphen-separated ranges to specify all possible strand lengths
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bulge" type="bulge_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Specifies where bulges occur in a strand
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="register_shift" type="register_shift_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Specifies what register shifts are to be used.  This option is only used in the context of the BetaSheetArchitect.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extended_abego" type="extended_abego_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Specifies where to place extended ABEGO E. This option is only used in the context of the BetaSheetArchitect. Sintax is the same as for bulges: semicolon-separated positions, indexed by the position relative to the strand of interest, e.g.: 1;3 will use E ABEGO in the first and third position of the strand. To allow a range, use ':', and for enumerating positions use ','.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="orientation" type="orientation_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Specifies the orientation of strands in a beta sheet.  This option is only used in the context of the BetaSheetArchitect.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="denovo_architect_BetaSheetArchitect_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Architect used to construct beta sheets
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="StrandArchitect" type="denovo_architect_StrandArchitect_complex_type"/>
 </xs:choice>
 <xs:attribute name="sheet_db" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to detabase of beta sheets
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="strand_extensions" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Semicolon-separated string specifying strand extensions. Each extension should be a comma-separated pair of name and length
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="denovo_architect_BlueprintArchitect_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Architect that constructs pose using a blueprint
 </xs:documentation></xs:annotation>
 <xs:attribute name="blueprint" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to blueprint file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="compound_architect_subelement_Architects_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Use to build backbone from a combination of other architects
 </xs:documentation></xs:annotation>
 <xs:group ref="denovo_architect" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="compound_architect_subelement_Connections_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Connection">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      name of the architect
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="chain1" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Indicates the chain which is to be located at the N-terminal end of the new fragment. Building will begin at the C-terminal residue of the jump.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="chain2" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Indicates the chain which is to be located at the C-terminal end of the new fragment.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="segment1" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XSD XRW: TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="segment2" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XSD XRW: TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="motif" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      The secondary structure + abego to be used for the backbone region to be rebuilt. Taken from input pose if not specified. The format of this string is: "[Length][SS][ABEGO]-[Length2][SS2][ABEGO2]-...-[LengthN][SSN][ABEGON]" For example, "1LX-5HA-1LB-1LA-1LB-6EB" will build a one residue loop of any abego, followed by a 5-residue helix, followed by a 3-residue loop of ABEGO BAB, followed by a 6-residue strand.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="cutpoint" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XSD XRW: TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="ideal_abego" type="rosetta_bool" default="false">
     <xs:annotation><xs:documentation xml:lang="en">
      XSD XRW: TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="extend_ss" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      XSD XRW: TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
</xs:complexType>

<xs:simpleType name="segment_pairing_segment_list">
 <xs:restriction base="xs:string">
  <xs:pattern value="([A-Z]|[0-9]|[a-z])+(,[A-Z]|[0-9]|[a-z])*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="denovo_segment_pairing_StrandPairing_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Pairing between two strands
 </xs:documentation></xs:annotation>
 <xs:attribute name="shift" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Indicates the registers shift of the strands.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="orient1" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Indicates the orientation of the strands.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="orient2" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Indicates the orientation of the strands.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segments" type="segment_pairing_segment_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Indicates the segments which are involved in the pairing.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="denovo_segment_pairing_HelixPairing_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Defines a helix-helix pairing.
 </xs:documentation></xs:annotation>
 <xs:attribute name="parallel" type="xs:boolean">
  <xs:annotation><xs:documentation xml:lang="en">
   Indicates whether the segments are parallel or not.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segments" type="segment_pairing_segment_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Indicates the segments which are involved in the pairing.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="denovo_segment_pairing_HelixSheetPairing_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Pairing between a helix and beta sheet
 </xs:documentation></xs:annotation>
 <xs:attribute name="segments" type="segment_pairing_segment_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Indicates the segments which are involved in the pairing.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="compound_architect_pairing_group">
 <xs:choice>
  <xs:element name="StrandPairing" type="denovo_segment_pairing_StrandPairing_complex_type"/>
  <xs:element name="HelixPairing" type="denovo_segment_pairing_HelixPairing_complex_type"/>
  <xs:element name="HelixSheetPairing" type="denovo_segment_pairing_HelixSheetPairing_complex_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="compound_architect_subelement_Pairing_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="compound_architect_pairing_group" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="denovo_architect_CompoundArchitect_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Pairing" type="compound_architect_subelement_Pairing_complex_type"/>
  <xs:element name="Connections" type="compound_architect_subelement_Connections_complex_type"/>
  <xs:element name="Architects" type="compound_architect_subelement_Architects_complex_type"/>
 </xs:choice>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="length_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="[0-9]+(:[0-9]+)?(,[0-9]+(:[0-9]+)?)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="denovo_architect_HelixArchitect_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Design helical segments
 </xs:documentation></xs:annotation>
 <xs:attribute name="length" type="length_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of single integers and colon-separated ranges to specify all possible helix lengths
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="denovo_architect_PoseArchitect_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Design segments based on a pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="add_padding" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Add padding to segments?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct" type="dssp_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Desired secondary structure for the pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="denovo_folder_RemodelLoopMoverPoseFolder_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Folds residues in a pose using RemodelLoopMover
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="denovo_folder_RandomTorsionPoseFolder_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Folds pose using random phi/psi torsions
 </xs:documentation></xs:annotation>
</xs:complexType>

<xs:complexType name="denovo_folder_NullPoseFolder_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Does nothing
 </xs:documentation></xs:annotation>
</xs:complexType>

<xs:group name="denovo_folder">
 <xs:choice>
  <xs:element name="RemodelLoopMoverPoseFolder" type="denovo_folder_RemodelLoopMoverPoseFolder_complex_type"/>
  <xs:element name="RandomTorsionPoseFolder" type="denovo_folder_RandomTorsionPoseFolder_complex_type"/>
  <xs:element name="NullPoseFolder" type="denovo_folder_NullPoseFolder_complex_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="denovo_perturber_HelixPerturber_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Used to perturb helices
 </xs:documentation></xs:annotation>
 <xs:attribute name="architect" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Architect to use for this mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="denovo_perturber_ConnectionPerturber_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Used to perturb connections
 </xs:documentation></xs:annotation>
 <xs:attribute name="architect" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Architect to use for this mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="denovo_perturber_NullPerturber_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Doesn't do anything
 </xs:documentation></xs:annotation>
</xs:complexType>

<xs:simpleType name="compound_perturber_mode">
 <xs:restriction base="xs:string">
  <xs:enumeration value="AND"/>
  <xs:enumeration value="OR"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="denovo_perturber_CompoundPerturber_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Used to combine other perturbers
 </xs:documentation></xs:annotation>
 <xs:group ref="denovo_perturber" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="mode" type="compound_perturber_mode" default="AND">
  <xs:annotation><xs:documentation xml:lang="en">
   Which logical operator to apply to these perturbers?
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="denovo_perturber">
 <xs:choice>
  <xs:element name="HelixPerturber" type="denovo_perturber_HelixPerturber_complex_type"/>
  <xs:element name="ConnectionPerturber" type="denovo_perturber_ConnectionPerturber_complex_type"/>
  <xs:element name="NullPerturber" type="denovo_perturber_NullPerturber_complex_type"/>
  <xs:element name="CompoundPerturber" type="denovo_perturber_CompoundPerturber_complex_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="mover_BuildDeNovoBackboneMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Mover to generate backbones for de novo design
 </xs:documentation></xs:annotation>
 <xs:sequence>
  <xs:group ref="denovo_architect" minOccurs="1" maxOccurs="1"/>
  <xs:group ref="denovo_folder" minOccurs="1" maxOccurs="1"/>
  <xs:group ref="denovo_perturber" minOccurs="0" maxOccurs="1"/>
  <xs:element name="PreFoldMovers" type="denovo_prefold_PreFoldMovers_complex_type" minOccurs="0" maxOccurs="1"/>
  <xs:element name="PostFoldMovers" type="denovo_postfold_PostFoldMovers_complex_type" minOccurs="0" maxOccurs="1"/>
  <xs:element name="Filters" type="denovo_filters_Filters_complex_type" minOccurs="0" maxOccurs="1"/>
 </xs:sequence>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Unique ID for this mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="build_overlap" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Overlap to use when building loops
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_segments" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set names of segments to include in the first build phase
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_segments" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set names of segments to be included in the final build phase
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="iterations_per_phase" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of iterations per build phase
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdbs" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Dump output to PDB files?
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="BundleGridSampler_lohigh">
 <xs:restriction base="xs:string">
  <xs:enumeration value="low"/>
  <xs:enumeration value="high"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="real_wsslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="[-+]?[0-9]*\.?[0-9]*([eE][-+]?[0-9]+)?(\s+[-+]?[0-9]*\.?[0-9]*([eE][-+]?[0-9]+)?)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="stfbundg_Helix" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing individual helices in the bundle
 </xs:documentation></xs:annotation>
 <xs:attribute name="crick_params_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name of a file containing Crick parameters for the secondary structure type desired.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For a specific helix, residue, indicated by name, from which to build the helical bundle.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="helix_length" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   For a specific helix, length, in residues, for this helix
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r0" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Major helix radius, in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r0_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for r0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r0_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for r0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r0_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling r0.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r0_copies_helix" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for r0 should be copied.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega0" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Major helix twist per residue, stored in radians.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega0_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for omega0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega0_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for omega0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega0_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling omega0.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega0_copies_helix" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for omega0 should be copied.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pitch_from_helix" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which pitch value should be copied in order to set omega0, the twist per residue.  An alternative to "omega0_copies_helix".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega0" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation of a helix about the z-axis, stored in radians.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega0_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for delta_omega0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega0_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for delta_omega0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega0_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling delta_omega0.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega0_copies_helix" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for delta_omega0 should be copied.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation of a helix about its own axis, stored in radians.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for delta_omega1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for delta_omega1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling delta_omega1.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1_copies_helix" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for delta_omega1 should be copied.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_t" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset along the polypeptide backbone, in residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_t_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for delta_t.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_t_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for delta_t.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_t_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling delta_t.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_t_copies_helix" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for delta_t should be copied.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z0_offset" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset along the global z-axis, in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z0_offset_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for z0_offset.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z0_offset_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for z0_offset.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z0_offset_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling z0_offset.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z0_offset_copies_helix" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for z0_offset should be copied.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_offset" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset along the superhelical path through space, in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_offset_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for z1_offset.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_offset_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for z1_offset.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_offset_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling z1_offset.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_offset_copies_helix" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for z1_offset should be copied.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon" type="real" default="1.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Lateral squash parameter/eccentricity of the cross-section of a bundle or barrel.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for epsilon.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for epsilon.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling epsilon.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon_copies_helix" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for epsilon should be copied.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeating_unit_offset" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Shift, in residues, of the repeating unit of a helix.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r1_peratom" type="real_wsslist" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix radius -- a vector of real numbers in Angstroms, with one per atom in the repeating unit of a helix.  Read from Crick params file, and not normally set by hand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix twist per residue, stored in radians.  Read from Crick params file, and not normally set by hand, sampled, or perturbed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for omega1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for omega1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling omega1.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1_copies_helix" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for omega1 should be copied.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix rise per residue along the helix axis, in Angstroms.  Read from Crick params file, and not normally set by hand, sampled, or perturbed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for z1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for z1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling z1.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_copies_helix" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for z1 should be copied.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1_peratom" type="real_wsslist" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix angular offsets of each mainchain atom in the repeating unit, in radians.  Read from Crick params file, and not normally set by hand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_z1_peratom" type="real_wsslist" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix axial offsets of each mainchain atom in the repeating unit, in Angstroms.  Read from Crick params file, and not normally set by hand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Inversion state of this helix -- true for inverted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_dihedrals" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   True indicates that the parametric machinery will set mainchain torsion values.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_bondangles" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   True indicates that the parametric machinery will allow mainchain bond angle values to deviate from ideality.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_bondlengths" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   True indicates that the parametric machinery will allow mainchain bond length values to deviate from ideality.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_BundleGridSampler_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The BundleGridSampler is a mover that generates helical bundles using the Crick parameterization.  It can sample regular N-dimensional grids of parameter values, with efficient parallelization.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Helix" type="stfbundg_Helix"/>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_samples" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of gridpoints to be sampled.  This is provided as a user sanity check.  Set max_samples to the number of samples you think you have requested.  The BundleGridSampler will throw an error if the actual nuber of samples is greater than this.  (For example, if I accidentally tell the BundleGridSampler to sample a 10x10x10x10 parameter grid, thinking that I will get 100 samples when I will actually get 10,000, I will quickly discover my error if I have set max_samples to 100.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selection_type" type="BundleGridSampler_lohigh">
  <xs:annotation><xs:documentation xml:lang="en">
   Score criterion for selection: "high" or "low".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pre_scoring_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A mover to apply after backbone torsions are set but before final scoring and evaluation (like a min mover or something similar).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pre_scoring_filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A filter to apply before scoring, which could help avoid wasteful scoring of bad conformations (like a bump check filter).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pre_selection_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A mover to apply before final solution selection (like a min mover or something similar).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pre_selection_filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A filter to apply before final solution selection, which could help avoid wasteful scoring of bad conformations (like a bump check filter).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdbs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Write PDBs for all conformations sampled.  If false (the default), then this mover carries out no direct PDB writing..
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A prefix to apply to all output PDBs, if the dump_pdbs option is set to "true".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_degrees" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Interpret input values as degrees, not radians.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Symmetry setting (n-fold; 0 or 1 === no symmetry
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry_copies" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   How many symmetry copies will be generated? 'All' if zero, only the first one if 1, but you can ask for any other number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue, indicated by name, from which to build the helical bundle.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="helix_length" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Length, in residues, for this helix.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="crick_params_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name of a file containing Crick parameters for the secondary structure type desired.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reset" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If reset is set to "true" (the default), then input geometry is discarded and the BundleGridSampler builds a pose from scratch.  If "false", then parametric geometry is appended to the input geometry.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nstruct_mode" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If "true", sample a different set of mainchain torsions for each RosettaScripts job (with each successive job sampling the next gridpoint in the grid of parameter values to be sampled).  If "false" (the default), then each job consists of the whole mainchain sampling effort.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nstruct_repeats" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   In nstruct_mode, this is the number of times each parameter gridpoint will be sampled.  This defaults to 1 (i.e. each successive RosettaScripts job goes on to the next gridpoint), but can be set higher (i.e. successive RosettaScripts jobs repeat gridpoints).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r0" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Major helix radius, in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r0_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for r0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r0_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for r0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r0_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling r0.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega0" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Major helix twist per residue, stored in radians.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega0_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for omega0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega0_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for omega0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega0_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling omega0.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega0" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation of a helix about the z-axis, stored in radians.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega0_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for delta_omega0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega0_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for delta_omega0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega0_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling delta_omega0.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation of a helix about its own axis, stored in radians.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for delta_omega1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for delta_omega1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling delta_omega1.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_t" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset along the polypeptide backbone, in residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_t_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for delta_t.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_t_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for delta_t.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_t_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling delta_t.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z0_offset" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset along the global z-axis, in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z0_offset_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for z0_offset.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z0_offset_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for z0_offset.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z0_offset_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling z0_offset.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_offset" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset along the superhelical path through space, in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_offset_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for z1_offset.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_offset_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for z1_offset.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_offset_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling z1_offset.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon" type="real" default="1.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Lateral squash parameter/eccentricity of the cross-section of a bundle or barrel.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for epsilon.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for epsilon.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling epsilon.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeating_unit_offset" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Shift, in residues, of the repeating unit of a helix.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r1_peratom" type="real_wsslist" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix radius -- a vector of real numbers in Angstroms, with one per atom in the repeating unit of a helix.  Read from Crick params file, and not normally set by hand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix twist per residue, stored in radians.  Read from Crick params file, and not normally set by hand, sampled, or perturbed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for omega1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for omega1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling omega1.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix rise per residue along the helix axis, in Angstroms.  Read from Crick params file, and not normally set by hand, sampled, or perturbed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum value of sampling range for z1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_max" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum value of sampling range for z1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_samples" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of samples when sampling z1.  Must be greater than zero.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1_peratom" type="real_wsslist" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix angular offsets of each mainchain atom in the repeating unit, in radians.  Read from Crick params file, and not normally set by hand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_z1_peratom" type="real_wsslist" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix axial offsets of each mainchain atom in the repeating unit, in Angstroms.  Read from Crick params file, and not normally set by hand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Inversion state of this helix -- true for inverted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_dihedrals" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   True indicates that the parametric machinery will set mainchain torsion values.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_bondangles" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   True indicates that the parametric machinery will allow mainchain bond angle values to deviate from ideality.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_bondlengths" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   True indicates that the parametric machinery will allow mainchain bond length values to deviate from ideality.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CAcstGenerator_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Generate coordinate constraints from the input or a template pdb
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Seeds">
   <xs:complexType mixed="true">
    <xs:attribute name="begin" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      First residue of a segment.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Last residue of a segment.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Clear_cst_segments">
   <xs:complexType mixed="true">
    <xs:attribute name="begin" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      First residue of a segment.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Last residue of a segment.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="stddev" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Contraint strength as stddev.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Template pdb to derive coordinate contraints from.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_cst_seed" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="replace" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="seq_separation" type="non_negative_integer" default="6">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_seed_residues" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residues to which to apply contraints.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from_chain" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain from which to derive the constraints from.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="to_chain" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain which to apply the contraints to.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CCDEndsGraftMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  AnchoredGraftMover that uses CCD to close loops
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="2">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of ccd cycles to perform
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_repack" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   perform a final repack of the grafted residues and neighbors
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_at_closure" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Stop once chainbreaks are closed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_dis" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance used to identify neighbors
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_sampling" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Skip sampling of backbone torsion angles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mintype" type="minimizer_type">
  <xs:annotation><xs:documentation xml:lang="en">
   Type of minimizer to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="copy_pdbinfo" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Copy PDBInfo from the pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scaffold_flex_Nter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many residues to the N terminus of the grafted location in the scaffold should be flexible?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scaffold_flex_Cter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many residues to the C terminus of the grafted location in the scaffold should be flexible?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="insert_flex_Nter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many residues in the N terminus of the graft should be flexible?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="insert_flex_Cter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many residues in the C terminus of the graft should be flexible?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="Nter_overhang" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Desired size of N terminal overhang
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="Cter_overhang" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Desired size of C terminal overhang
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Graft begins after this residue in the scaffold.  Will delete residues between start and end in the scaffold. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Graft ends before this residue in the scaffold.  Will delete residues between start and end in the scaffold.  
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cen_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Centroid score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fa_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Full atom score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="spm_reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CCDLoopCloser_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="prevent_nonloop_modification" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_ccd_moves_per_closure_attempt" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tolerance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_closure_attempts" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_rama_score_increase" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_total_delta_helix" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_total_delta_strand" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_total_delta_loop" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="early_exit_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CCDLoopClosureMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs loops closure using the CCD algorythm.
 </xs:documentation></xs:annotation>
 <xs:attribute name="max_torsion_delta_per_move_H" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum torsion perturbation per move in helical segments. (deg?)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_torsion_delta_per_move_E" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum torsion perturbation per move in beta-sheet segments. (deg?)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_torsion_delta_per_move_L" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum torsion perturbation per move in loop segments. (deg?)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_torsion_delta_H" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum torsion perturbation per run in helical segments. (deg?)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_torsion_delta_E" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum torsion perturbation per run in beta-sheet segments. (deg?)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_torsion_delta_L" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum torsion perturbation per run in loop segments. (deg?)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tolerance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Move acceptance stringency.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of cycles per run. Quit the run even if not converged at this point.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="check_rama_scores" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rama_2b" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the 2-body ramachandran scoring term.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="cluster_definitions">
 <xs:restriction base="xs:string">
  <xs:enumeration value="H1-10-1"/>
  <xs:enumeration value="H1-12-1"/>
  <xs:enumeration value="H1-13-1"/>
  <xs:enumeration value="H1-13-10"/>
  <xs:enumeration value="H1-13-11"/>
  <xs:enumeration value="H1-13-2"/>
  <xs:enumeration value="H1-13-3"/>
  <xs:enumeration value="H1-13-4"/>
  <xs:enumeration value="H1-13-5"/>
  <xs:enumeration value="H1-13-6"/>
  <xs:enumeration value="H1-13-7"/>
  <xs:enumeration value="H1-13-8"/>
  <xs:enumeration value="H1-13-9"/>
  <xs:enumeration value="H1-13-CIS9-1"/>
  <xs:enumeration value="H1-13-cis9-1"/>
  <xs:enumeration value="H1-14-1"/>
  <xs:enumeration value="H1-15-1"/>
  <xs:enumeration value="H1-16-1"/>
  <xs:enumeration value="H1_10_1"/>
  <xs:enumeration value="H1_12_1"/>
  <xs:enumeration value="H1_13_1"/>
  <xs:enumeration value="H1_13_10"/>
  <xs:enumeration value="H1_13_11"/>
  <xs:enumeration value="H1_13_2"/>
  <xs:enumeration value="H1_13_3"/>
  <xs:enumeration value="H1_13_4"/>
  <xs:enumeration value="H1_13_5"/>
  <xs:enumeration value="H1_13_6"/>
  <xs:enumeration value="H1_13_7"/>
  <xs:enumeration value="H1_13_8"/>
  <xs:enumeration value="H1_13_9"/>
  <xs:enumeration value="H1_13_CIS9_1"/>
  <xs:enumeration value="H1_13_cis9_1"/>
  <xs:enumeration value="H1_14_1"/>
  <xs:enumeration value="H1_15_1"/>
  <xs:enumeration value="H1_16_1"/>
  <xs:enumeration value="H2-10-1"/>
  <xs:enumeration value="H2-10-2"/>
  <xs:enumeration value="H2-10-3"/>
  <xs:enumeration value="H2-10-4"/>
  <xs:enumeration value="H2-10-5"/>
  <xs:enumeration value="H2-10-6"/>
  <xs:enumeration value="H2-10-7"/>
  <xs:enumeration value="H2-10-8"/>
  <xs:enumeration value="H2-10-9"/>
  <xs:enumeration value="H2-12-1"/>
  <xs:enumeration value="H2-15-1"/>
  <xs:enumeration value="H2-8-1"/>
  <xs:enumeration value="H2-9-1"/>
  <xs:enumeration value="H2-9-2"/>
  <xs:enumeration value="H2-9-3"/>
  <xs:enumeration value="H2_10_1"/>
  <xs:enumeration value="H2_10_2"/>
  <xs:enumeration value="H2_10_3"/>
  <xs:enumeration value="H2_10_4"/>
  <xs:enumeration value="H2_10_5"/>
  <xs:enumeration value="H2_10_6"/>
  <xs:enumeration value="H2_10_7"/>
  <xs:enumeration value="H2_10_8"/>
  <xs:enumeration value="H2_10_9"/>
  <xs:enumeration value="H2_12_1"/>
  <xs:enumeration value="H2_15_1"/>
  <xs:enumeration value="H2_8_1"/>
  <xs:enumeration value="H2_9_1"/>
  <xs:enumeration value="H2_9_2"/>
  <xs:enumeration value="H2_9_3"/>
  <xs:enumeration value="H3-10-1"/>
  <xs:enumeration value="H3-10-2"/>
  <xs:enumeration value="H3-10-3"/>
  <xs:enumeration value="H3-10-CIS5-1"/>
  <xs:enumeration value="H3-10-cis5-1"/>
  <xs:enumeration value="H3-11-1"/>
  <xs:enumeration value="H3-11-2"/>
  <xs:enumeration value="H3-12-1"/>
  <xs:enumeration value="H3-12-2"/>
  <xs:enumeration value="H3-12-CIS9-1"/>
  <xs:enumeration value="H3-12-cis9-1"/>
  <xs:enumeration value="H3-13-1"/>
  <xs:enumeration value="H3-13-2"/>
  <xs:enumeration value="H3-13-3"/>
  <xs:enumeration value="H3-13-CIS7-1"/>
  <xs:enumeration value="H3-13-CIS8-1"/>
  <xs:enumeration value="H3-13-cis7-1"/>
  <xs:enumeration value="H3-13-cis8-1"/>
  <xs:enumeration value="H3-14-1"/>
  <xs:enumeration value="H3-14-2"/>
  <xs:enumeration value="H3-14-3"/>
  <xs:enumeration value="H3-14-4"/>
  <xs:enumeration value="H3-14-CIS7-1"/>
  <xs:enumeration value="H3-14-cis7-1"/>
  <xs:enumeration value="H3-15-1"/>
  <xs:enumeration value="H3-15-2"/>
  <xs:enumeration value="H3-16-1"/>
  <xs:enumeration value="H3-16-2"/>
  <xs:enumeration value="H3-17-1"/>
  <xs:enumeration value="H3-18-1"/>
  <xs:enumeration value="H3-18-2"/>
  <xs:enumeration value="H3-19-1"/>
  <xs:enumeration value="H3-20-1"/>
  <xs:enumeration value="H3-21-1"/>
  <xs:enumeration value="H3-22-1"/>
  <xs:enumeration value="H3-24-1"/>
  <xs:enumeration value="H3-26-1"/>
  <xs:enumeration value="H3-5-1"/>
  <xs:enumeration value="H3-5-2"/>
  <xs:enumeration value="H3-6-1"/>
  <xs:enumeration value="H3-7-1"/>
  <xs:enumeration value="H3-7-2"/>
  <xs:enumeration value="H3-7-3"/>
  <xs:enumeration value="H3-7-CIS4-1"/>
  <xs:enumeration value="H3-7-cis4-1"/>
  <xs:enumeration value="H3-8-1"/>
  <xs:enumeration value="H3-8-2"/>
  <xs:enumeration value="H3-9-1"/>
  <xs:enumeration value="H3-9-2"/>
  <xs:enumeration value="H3_10_1"/>
  <xs:enumeration value="H3_10_2"/>
  <xs:enumeration value="H3_10_3"/>
  <xs:enumeration value="H3_10_CIS5_1"/>
  <xs:enumeration value="H3_10_cis5_1"/>
  <xs:enumeration value="H3_11_1"/>
  <xs:enumeration value="H3_11_2"/>
  <xs:enumeration value="H3_12_1"/>
  <xs:enumeration value="H3_12_2"/>
  <xs:enumeration value="H3_12_CIS9_1"/>
  <xs:enumeration value="H3_12_cis9_1"/>
  <xs:enumeration value="H3_13_1"/>
  <xs:enumeration value="H3_13_2"/>
  <xs:enumeration value="H3_13_3"/>
  <xs:enumeration value="H3_13_CIS7_1"/>
  <xs:enumeration value="H3_13_CIS8_1"/>
  <xs:enumeration value="H3_13_cis7_1"/>
  <xs:enumeration value="H3_13_cis8_1"/>
  <xs:enumeration value="H3_14_1"/>
  <xs:enumeration value="H3_14_2"/>
  <xs:enumeration value="H3_14_3"/>
  <xs:enumeration value="H3_14_4"/>
  <xs:enumeration value="H3_14_CIS7_1"/>
  <xs:enumeration value="H3_14_cis7_1"/>
  <xs:enumeration value="H3_15_1"/>
  <xs:enumeration value="H3_15_2"/>
  <xs:enumeration value="H3_16_1"/>
  <xs:enumeration value="H3_16_2"/>
  <xs:enumeration value="H3_17_1"/>
  <xs:enumeration value="H3_18_1"/>
  <xs:enumeration value="H3_18_2"/>
  <xs:enumeration value="H3_19_1"/>
  <xs:enumeration value="H3_20_1"/>
  <xs:enumeration value="H3_21_1"/>
  <xs:enumeration value="H3_22_1"/>
  <xs:enumeration value="H3_24_1"/>
  <xs:enumeration value="H3_26_1"/>
  <xs:enumeration value="H3_5_1"/>
  <xs:enumeration value="H3_5_2"/>
  <xs:enumeration value="H3_6_1"/>
  <xs:enumeration value="H3_7_1"/>
  <xs:enumeration value="H3_7_2"/>
  <xs:enumeration value="H3_7_3"/>
  <xs:enumeration value="H3_7_CIS4_1"/>
  <xs:enumeration value="H3_7_cis4_1"/>
  <xs:enumeration value="H3_8_1"/>
  <xs:enumeration value="H3_8_2"/>
  <xs:enumeration value="H3_9_1"/>
  <xs:enumeration value="H3_9_2"/>
  <xs:enumeration value="L1-10-1"/>
  <xs:enumeration value="L1-10-2"/>
  <xs:enumeration value="L1-11-1"/>
  <xs:enumeration value="L1-11-2"/>
  <xs:enumeration value="L1-11-3"/>
  <xs:enumeration value="L1-12-1"/>
  <xs:enumeration value="L1-12-2"/>
  <xs:enumeration value="L1-12-3"/>
  <xs:enumeration value="L1-13-1"/>
  <xs:enumeration value="L1-13-2"/>
  <xs:enumeration value="L1-14-1"/>
  <xs:enumeration value="L1-14-2"/>
  <xs:enumeration value="L1-15-1"/>
  <xs:enumeration value="L1-15-2"/>
  <xs:enumeration value="L1-16-1"/>
  <xs:enumeration value="L1-17-1"/>
  <xs:enumeration value="L1_10_1"/>
  <xs:enumeration value="L1_10_2"/>
  <xs:enumeration value="L1_11_1"/>
  <xs:enumeration value="L1_11_2"/>
  <xs:enumeration value="L1_11_3"/>
  <xs:enumeration value="L1_12_1"/>
  <xs:enumeration value="L1_12_2"/>
  <xs:enumeration value="L1_12_3"/>
  <xs:enumeration value="L1_13_1"/>
  <xs:enumeration value="L1_13_2"/>
  <xs:enumeration value="L1_14_1"/>
  <xs:enumeration value="L1_14_2"/>
  <xs:enumeration value="L1_15_1"/>
  <xs:enumeration value="L1_15_2"/>
  <xs:enumeration value="L1_16_1"/>
  <xs:enumeration value="L1_17_1"/>
  <xs:enumeration value="L2-12-1"/>
  <xs:enumeration value="L2-12-2"/>
  <xs:enumeration value="L2-8-1"/>
  <xs:enumeration value="L2-8-2"/>
  <xs:enumeration value="L2-8-3"/>
  <xs:enumeration value="L2-8-4"/>
  <xs:enumeration value="L2-8-5"/>
  <xs:enumeration value="L2_12_1"/>
  <xs:enumeration value="L2_12_2"/>
  <xs:enumeration value="L2_8_1"/>
  <xs:enumeration value="L2_8_2"/>
  <xs:enumeration value="L2_8_3"/>
  <xs:enumeration value="L2_8_4"/>
  <xs:enumeration value="L2_8_5"/>
  <xs:enumeration value="L3-10-1"/>
  <xs:enumeration value="L3-10-CIS7,8-1"/>
  <xs:enumeration value="L3-10-CIS8-1"/>
  <xs:enumeration value="L3-10-cis7,8-1"/>
  <xs:enumeration value="L3-10-cis8-1"/>
  <xs:enumeration value="L3-11-1"/>
  <xs:enumeration value="L3-11-CIS7-1"/>
  <xs:enumeration value="L3-11-cis7-1"/>
  <xs:enumeration value="L3-12-1"/>
  <xs:enumeration value="L3-13-1"/>
  <xs:enumeration value="L3-7-1"/>
  <xs:enumeration value="L3-8-1"/>
  <xs:enumeration value="L3-8-2"/>
  <xs:enumeration value="L3-8-CIS6-1"/>
  <xs:enumeration value="L3-8-cis6-1"/>
  <xs:enumeration value="L3-9-1"/>
  <xs:enumeration value="L3-9-2"/>
  <xs:enumeration value="L3-9-CIS6-1"/>
  <xs:enumeration value="L3-9-CIS7-1"/>
  <xs:enumeration value="L3-9-CIS7-2"/>
  <xs:enumeration value="L3-9-CIS7-3"/>
  <xs:enumeration value="L3-9-cis6-1"/>
  <xs:enumeration value="L3-9-cis7-1"/>
  <xs:enumeration value="L3-9-cis7-2"/>
  <xs:enumeration value="L3-9-cis7-3"/>
  <xs:enumeration value="L3_10_1"/>
  <xs:enumeration value="L3_10_CIS7_8_1"/>
  <xs:enumeration value="L3_10_CIS8_1"/>
  <xs:enumeration value="L3_10_cis7_8_1"/>
  <xs:enumeration value="L3_10_cis8_1"/>
  <xs:enumeration value="L3_11_1"/>
  <xs:enumeration value="L3_11_CIS7_1"/>
  <xs:enumeration value="L3_11_cis7_1"/>
  <xs:enumeration value="L3_12_1"/>
  <xs:enumeration value="L3_13_1"/>
  <xs:enumeration value="L3_7_1"/>
  <xs:enumeration value="L3_8_1"/>
  <xs:enumeration value="L3_8_2"/>
  <xs:enumeration value="L3_8_CIS6_1"/>
  <xs:enumeration value="L3_8_cis6_1"/>
  <xs:enumeration value="L3_9_1"/>
  <xs:enumeration value="L3_9_2"/>
  <xs:enumeration value="L3_9_CIS6_1"/>
  <xs:enumeration value="L3_9_CIS7_1"/>
  <xs:enumeration value="L3_9_CIS7_2"/>
  <xs:enumeration value="L3_9_cis6_1"/>
  <xs:enumeration value="L3_9_cis7_1"/>
  <xs:enumeration value="L3_9_cis7_2"/>
  <xs:enumeration value="NA"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_CDRDihedralConstraintMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Adds Circular Harmonic Dihedral Constraints to the Phi and Psi dihedral angles to a particular CDR either using the current computed North/Dunbrack CDR Cluster (requires AHo numbered antibody) or general constraints. These constraints keep the CDR structure from moving too much during backbone optimization such as FastRelax. Please see the constraints page for more information on constraints and this page for more information on antibody numbering.
 </xs:documentation></xs:annotation>
 <xs:attribute name="cdr" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   CDR to add the constraints to (ex: H1 or h1)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_cluster_csts" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Add cluster constraints? If false, will use general dihedral constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_general_constraints_on_failure" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Add general constraints if cluster-based constraint addition fails?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="force_cluster" type="cluster_definitions">
  <xs:annotation><xs:documentation xml:lang="en">
   Force addition of cluster constraints of this particular cluster. Must be same CDR length as the current CDR
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cluster_data_required" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many structures per cluster are required to use cluster-based constraints for those structures?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_outliers" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a separate set of data for cluster-based constraints which contained outliers for the calculation (dihedral distance greater than 40 degrees, RMSD greater than 1.5A)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="general_phi_sd" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Standard deviation for general constraints on phi angles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="general_psi_sd" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Standard deviation for general constraints on psi angles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CartesianMD_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  CartesianMD calls Molecular Dynamics simulation in Rosetta with user-defined energy function. Runs NVT simulation (constant volume and temperature) with Berendsen thermostat. Integrator uses Velocity Verlet algorithm
 </xs:documentation></xs:annotation>
 <xs:attribute name="rattle" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use Rattle algorithm to constraint hydrogen locations. This automatically sets integration step = 2fs. Otherwise uses integration step = 1fs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Specify a scorefunction to run MD simulation with
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_obj" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional, identical to scorefxn unless specified. Specify a scorefunction to use as objective function for selecting a pose from trajectory. This will be used only when selectmode="minobj"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nstep" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of steps to simulate. With Rattle on (default) each step is 2fs, and hence, nstep=10000 will be 20ps
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Reference temperature for constant temperature simulation. Recommended values: 150~200K for talaris2014_cart and ~250 for beta_nov15_cart
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="premin" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Steps of Cartesian minimization before MD simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="postmin" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Steps of Cartesian minimization after MD simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   By how often the mover reports the simulation status to log
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_scorecomp" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Whether to report score components to log
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selectmode" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   How to select single pose from the trajectory. "final" to take the final pose, "minobj" to take the lowest objective function (by scorefxn_obj) pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="schfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Use user-defined schedule file. This overrides any other flags or options. Syntax: "sch [temperature] [nsteps]" to run simulation, or "repack" to repack side-chains
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="strategy_type">
 <xs:restriction base="xs:string">
  <xs:pattern value="user|uniform|auto|density|density_nbr|geometry|rama|bfactors|chainbreak(,user|uniform|auto|density|density_nbr|geometry|rama|bfactors|chainbreak)+"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="CartesianSampler_subelement_FragmentsType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Instructions for fragments files.
 </xs:documentation></xs:annotation>
 <xs:attribute name="fragfile" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   file to read fragments from
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nfrags" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   read this many fragments from the top of 'fragfile'
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CartesianSampler_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TODO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Fragments" type="CartesianSampler_subelement_FragmentsType"/>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   (centroid) scorefunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fascorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   (fullatom) scorefunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mcscorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Monte Carlo (?) scorefunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debug" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fullatom" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bbmove" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rms" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nminsteps" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overlap" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ncycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fragbias" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recover_low" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="force_ss" type="char" default="D">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="strategy" type="strategy_type">
  <xs:annotation><xs:documentation xml:lang="en">
   fragment bias strategies.  This string is a comma-separated list; allowed values include 'user', 'uniform', 'auto', 'density', 'density_nbr', 'geometry', 'rama', 'bfactors', 'chainbreak' 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rsd_wdw_to_refine" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   residue window to refine
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cumulate_prob" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="automode_scorecut" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdb" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdb_tag" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wdw_to_freeze" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="freeze_endpoints" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_in" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO.  Looks for a Loops object in the DataMap with this name. 'residues' and 'loops_in' are mutually exclusive.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues_to_include" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues_to_exclude" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_model" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO; if 'input' uses the Pose from apply(); otherwise loads this pdb file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_cst_wt" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_cst_maxdist" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nfrags" type="non_negative_integer" default="25">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO; unclear if this should be used with the Fragments subelement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fraglens" type="positive_integer_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO; comma separated list of positive integers, unclear if this should be used with the Fragments subelement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ChangeAndResetFoldTreeMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Not valid for use with RosettaScripts; don't use it
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CircularPermutation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  perform circularpermutation give a pose ( under development )
 </xs:documentation></xs:annotation>
 <xs:attribute name="pos" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Set new N-term. pos-1 becomes the new C-term.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_chain" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Exclude this chain from the circular permutation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="split_chain" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Split chain at this position??? -Ask Nobuyasu Koga ( nobuyasu@uw.edu )
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ClearCompositionConstraintsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Clears all composition constraints from the pose.  Leaves geometric constraints intact.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ClearConstraintsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Removes constraints from the Pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CloseFold_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Seeds">
   <xs:complexType mixed="true">
    <xs:attribute name="begin" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Beginning of seed fragments (residue number)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      End of seed fragment (residue number)
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="fa_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cen_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fragments" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of fragment file for fragment-based loop modeling.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_chainbreakterm" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Penalize chain break in score calculation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutpoint_based" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Use cutpoint during loop moelding.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_kic" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use KIC for loop modeling.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="idealize" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sample only ideal bb torsions. Faster. idealize="false" is being ignored!
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_ccd" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Use CCD for loop modeling.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trials_ccd" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstrct" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File with secondary struct assignment for each residue in chain(s)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Template pdb file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of chain IDs. NOTE: chains have to be consecutive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CoMTrackerCM_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Claim mover that tracks the center of mass
 </xs:documentation></xs:annotation>
 <xs:attribute name="stationary_label" type="xs:string" default="[NOT_SET]">
  <xs:annotation><xs:documentation xml:lang="en">
   Label for stationary residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Required unique ID for this mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mobile_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector specifying mobile residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="distribution_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="uniform|gaussian"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_CompoundTranslate_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Combines multiple individually configurable Translate movers
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Translate">
   <xs:complexType mixed="true">
    <xs:attribute name="chain" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Chain to be translated.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="distribution" type="distribution_string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Distribution from which to sample distances. Valid options are uniform or gaussian
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="angstroms" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Uniform translations of up to X angstroms
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="cycles" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Number of cycles to run.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="force" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Force neighbor atoms to move if clashing, default=false
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Translates">
   <xs:complexType mixed="true">
    <xs:attribute name="chain" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Chain to be translated.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="distribution" type="distribution_string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Distribution from which to sample distances. Valid options are uniform or gaussian
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="angstroms" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Uniform translations of up to X angstroms
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="cycles" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Number of cycles to run.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="force" type="rosetta_bool">
     <xs:annotation><xs:documentation xml:lang="en">
      Force neighbor atoms to move if clashing, default=false
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="randomize_order" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Randomize order of perturbations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_overlap" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="pocket_or_interface">
 <xs:restriction base="xs:string">
  <xs:pattern value="pocket|interface"/>
 </xs:restriction>
</xs:simpleType>

<xs:group name="rdf_function">
 <xs:choice>
  <xs:element name="RDFBinaryHbondFunction" type="rdf_function_RDFBinaryHbondFunction_complex_type"/>
  <xs:element name="RDFBinaryOrbitalFunction" type="rdf_function_RDFBinaryOrbitalFunction_complex_type"/>
  <xs:element name="RDFChargeFunction" type="rdf_function_RDFChargeFunction_complex_type"/>
  <xs:element name="RDFElecFunction" type="rdf_function_RDFElecFunction_complex_type"/>
  <xs:element name="RDFEtableFunction" type="rdf_function_RDFEtableFunction_complex_type"/>
  <xs:element name="RDFHbondFunction" type="rdf_function_RDFHbondFunction_complex_type"/>
  <xs:element name="RDFOrbitalFunction" type="rdf_function_RDFOrbitalFunction_complex_type"/>
 </xs:choice>
</xs:group>

<xs:simpleType name="rdf_binary_hbond_sign_mode">
 <xs:restriction base="xs:string">
  <xs:enumeration value="matching_pair"/>
  <xs:enumeration value="ligand_acceptor"/>
  <xs:enumeration value="ligand_donor"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="rdf_function_RDFBinaryHbondFunction_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional identifier for this RDFFunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sign_mode" type="rdf_binary_hbond_sign_mode" default="matching_pair">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rdf_function_RDFBinaryOrbitalFunction_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional identifier for this RDFFunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="rdf_charge_sign_mode">
 <xs:restriction base="xs:string">
  <xs:enumeration value="same_sign"/>
  <xs:enumeration value="ligand_plus"/>
  <xs:enumeration value="ligand_minus"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="rdf_function_RDFChargeFunction_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional identifier for this RDFFunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sign_mode" type="rdf_charge_sign_mode" default="same_sign">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rdf_function_RDFElecFunction_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional identifier for this RDFFunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use when determining coulomb potential
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rdf_function_RDFEtableFunction_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional identifier for this RDFFunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use when generating etable
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="rdf_hbond_sign_mode">
 <xs:restriction base="xs:string">
  <xs:enumeration value="unsigned"/>
  <xs:enumeration value="ligand_acceptor"/>
  <xs:enumeration value="ligand_donor"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="rdf_function_RDFHbondFunction_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional identifier for this RDFFunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sign_mode" type="rdf_hbond_sign_mode" default="unsigned">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rdf_function_RDFOrbitalFunction_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional identifier for this RDFFunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ComputeLigandRDF_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  ComputeLigandRDF computes Radial Distribution Functions using pairs of protein-protein or protein-ligand atoms.
 </xs:documentation></xs:annotation>
 <xs:group ref="rdf_function" minOccurs="1" maxOccurs="unbounded"/>
 <xs:attribute name="ligand_chain" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain ID of the ligand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bin_count" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of bins to represent the distribution, default=100
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="smoothing_factor" type="real" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Set smoothing factor. Default=100.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="range" type="real" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Max distance to include in RDF (radius). Defaut=10 Angstroms
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mode" type="pocket_or_interface" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   interface mode: RDF is computed using all ligand atoms and all protein atoms within 10 Angstroms of the ligandpocket mode; RDF is computed using all protein atoms within 10 Angstroms of the ligand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ConcatenatePosesMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  DOCUMENTATION STRING
 </xs:documentation></xs:annotation>
 <xs:attribute name="component_file" type="xs:string" default="NONE">
  <xs:annotation><xs:documentation xml:lang="en">
   path to the component file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ConformerSwitchMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Switches between conformers during docking. Does not parse any attributes from tag.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ConnectChainsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  only allow loops from the most frequent abegos
 </xs:documentation></xs:annotation>
 <xs:attribute name="loopLengthRange" type="size_cs_pair" default="1,4">
  <xs:annotation><xs:documentation xml:lang="en">
   Loops can range from 1 to 5 residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="RMSthreshold" type="real" default="0.4">
  <xs:annotation><xs:documentation xml:lang="en">
   loop must be within 0.4 angsrom to a pdb in the VALL
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resAdjustmentRangeSide1" type="int_cslist" default="-3,3">
  <xs:annotation><xs:documentation xml:lang="en">
   residue adjustment applied before the loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resAdjustmentRangeSide2" type="int_cslist" default="-3,3">
  <xs:annotation><xs:documentation xml:lang="en">
   residue adjustment applied after the loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resAdjustmentRangeSide1_sheet" type="int_cslist" default="-1,1">
  <xs:annotation><xs:documentation xml:lang="en">
   residue adjustment applied before the loop if sheet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resAdjustmentRangeSide2_sheet" type="int_cslist" default="-1,1">
  <xs:annotation><xs:documentation xml:lang="en">
   residue adjustment applied after the loop if sheet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allowed_loop_abegos" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma seperated string of allowed abegos, default=empty all abegos
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_connections" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   what chains to connect
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ConnectJumps_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The ConnectJumps, as the Doxygen calls it, is deprecated. Use BridgeChains instead.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the architect
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain1" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Indicates the chain which is to be located at the N-terminal end of the new fragment. Building will begin at the C-terminal residue of the jump.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain2" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Indicates the chain which is to be located at the C-terminal end of the new fragment.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segment1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segment2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="motif" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The secondary structure + abego to be used for the backbone region to be rebuilt. Taken from input pose if not specified. The format of this string is: "[Length][SS][ABEGO]-[Length2][SS2][ABEGO2]-...-[LengthN][SSN][ABEGON]" For example, "1LX-5HA-1LB-1LA-1LB-6EB" will build a one residue loop of any abego, followed by a 5-residue helix, followed by a 3-residue loop of ABEGO BAB, followed by a 6-residue strand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutpoint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal_abego" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extend_ss" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overlap" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Build overlap of nested BuildDeNovoBackboneMover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dry_run" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Sets folder of BuildDeNovoBackboneMover to RandomTorsionPoseFolder instead of RemodelLoopMoverPoseFolde
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trials" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   iterations per phase of nested BuildDeNovoBackboneMover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ConsensusDesignMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover will modify a given task according to a sequence profile and then call the PackRotamersMover. At every position that is designable in the task, AAs that have a probability greater than min_aa_probability_ and higher than the native in the sequence profile will be allowed
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert_task" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Operate on the residues specified as non-packable in the PackerTask
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_seqprof_constraints" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   use sequence profile constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sasa_cutoff" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   skip designing residues with SASA lower than this
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_pose_profile_length_mismatch" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, and the pose/profile mismatch, excess pose residues are marked repackable by SeqprofConsensusOperation.  If false, and they mismatch, it crashes.  If they match, no problems!
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ConstraintPreparer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  StagePreparer that adds the specified constraints to the constraint set.
 </xs:documentation></xs:annotation>
 <xs:attribute name="skip_redundant" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Skip redundant constraints? Corresponds to skip_redundant_width option
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   Name identifying this ConstraintPreparer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reprepare" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should constraints be reprepared if some have already been set?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of file containing constraints to apply to pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="combine_ratio" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   If greater than 1, it will randomly combine constraints into multiplets of this size with OR logic
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ConstraintSetMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds constraints from a constraint file to the pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="cst_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   (implicitly centroid compatible) constraint file; attempts to autodetect if pose is centroid and uses these
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_fa_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   (implicitly fullatom compatible) constraint file; attempts to autodetect if pose is fullatom and uses these.  If not supplied, uses the value in cst_file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_map_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A file to map constraint sets to input tags. With one entry per line, the format is: /path/to/cst/file.cst tag
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_constraints" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if True, ADD these constraints to the existing ConstraintSet in the Pose; if False, REPLACE the constraints in the Pose with these.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="contact_map_region_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="[A-Za-z]|[0-9]+|[0-9]+[A-Za-z]|[0-9]+|[0-9]+[A-Za-z][-][0-9]+|[0-9]+[A-Za-z]"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_ContactMap_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Generates a contact map between specified regions
 </xs:documentation></xs:annotation>
 <xs:attribute name="distance_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum distance between two atoms that will be considered a contact
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix for output filenames
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reset_count" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the count be reset to zero after outputting the contact map to a file?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="models_per_file" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of models to output per file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="row_format" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the output be in row format instead of matrix format?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_matrix" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Store distances of contacts in matrix
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region1" type="contact_map_region_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Region definition for region1 of the contact map in format start-end or chainID
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region2" type="contact_map_region_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Region definition for region2 of the contact map
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ligand" type="contact_map_region_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Sequence position or chainID of a ligand
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Reference pose to use when building the initial contact map description (defaults to input pose).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ContingentAccept_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  checks filter, runs mover, checks filter.  Resets pose if filter value increases by more than delta. NOT Monte Carlo.
 </xs:documentation></xs:annotation>
 <xs:attribute name="filter" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter whose value is compared before and after applying the Mover; looked up from DataMap.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover whose move is contingently accepted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta" type="real" default="5.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Amount Filter value can increase before rejection (units depend on Filter)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ConvertRealToVirtualMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com) and Sebastian Raemisch (raemisch@scripps.edu)
A mover for switching a residue type to all VIRTUAL.A VIRTUAL Residue is one that is not scored or output.
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ConvertVirtualToRealMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com) and Sebastian Raemisch (raemisch@scripps.edu)
Mover for switching from VIRTUAL residues to REAL residues. A VIRTUAL residue is one that is not scored or output.
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CoordinateCst_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add coordinate constraints to the pose based on parsed spans or residues.Currently it only adds CA constraints
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="span">
   <xs:complexType mixed="true">
    <xs:attribute name="begin" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Begin of seed fragment (residue number)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      End of seed fragment (residue number)
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Seeds">
   <xs:complexType mixed="true">
    <xs:attribute name="begin" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Begin of seed fragment (residue number)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      End of seed fragment (residue number)
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="residue">
   <xs:complexType mixed="true">
    <xs:attribute name="residue" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW_TO_DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="stddev" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   stedev for the constraint function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom" type="xs:string" default="CA">
  <xs:annotation><xs:documentation xml:lang="en">
   which atom id on the moving residue to place the constraint onto
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="anchor_atom" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   which atom on the anchor residue to place the constraint onto
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="anchor_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   residue number to which the coordinate constraints are anchored to. Overrides "jump" option.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use jump atoms for anchor, that is the first one, for jump n
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CopyRotamer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This is a very simple mover that copies the residue identity and/or sidechain conformation from one residue in a pose (the template) to another (the target).
 </xs:documentation></xs:annotation>
 <xs:attribute name="template_res_index" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The index, in Rosetta pose numbering, of the residue from which the side-chain will be copied. This residue is not altered by this operation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_res_index" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The index, in Rosetta pose numbering, of the residue to which the side-chain will be copied. The identity and/or conformation of this residue's sidechain is altered by this operation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="copy_identity" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the identity of the template residue by copied to the target? Default true. If false, only side-chain torsion values will be copied. This can create strange results if the template and target residues have different numbers of side-chain chi angles, or if they have significantly different side-chain structures.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="copy_torsions" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the side-chain dihedral values of the template residue be copied to the target? Default true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CoupledMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Runs a Coupled Move. There are no XML attributes.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CoupledMovesProtocol_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Small backbone and side chain movements
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="main_task_factory_" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   packer task
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_fxn_" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="backbone_mover" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   make mover lisen to the coupled_moves related command line flags
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CreateAngleConstraint_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds angle constraints to a pose
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="res_center" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue at center of angle
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="atom_center" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Atom at center of angle
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="res1" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue on one side of angle
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="atom1" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Atom on one side of angle
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="res2" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue on other side of the angle
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="atom2" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Atom on other side of the angle
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="cst_func" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Function to use for this constraint
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CreateDistanceConstraint_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds distance constraints to a pose
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="res1" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      First residue to constrain
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="atom1" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      First atom to constrain
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="res2" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Second residue to constrain
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="atom2" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Second atom to constrain
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="cst_func" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Function for distance constraint
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CreateGlycanSequonMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
 @brief Mutates residues to create a potential glycosylation site using known sequence motifs of N- or C- linked glycans.
  Includes options for Enhanced Sequons for N-linked glycans that have been shown to have higher rates of glycosylation
  as well as other positions that have been shown to influence the glycosylation chemistry.

 @details
  Creates the glycan sequence motif around (and including) the potential glycosylation site.
  If the site could not be created due to the position being too close to the beginning or end of the sequence,
  Will set the mover status to fail, do not retry.

 Creates an N-Linked Sequence Motif by default using the non-enhanced motif.  This can be changed in options.

 </xs:documentation></xs:annotation>
 <xs:attribute name="basic_enhanced_n_sequon" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Set to use the enhanced sequon which has been shown to result in higher rates of glycosylation.
 REFERENCES: 
	Enhanced Aromatic Sequons Increase Oligosaccharyltransferase Glycosylation Efficiency and Glycan Homogeneity
    Murray et al., 2015, Chemistry and Biology 22, 1052 1062 http://dx.doi.org/10.1016/j.chembiol.2015.06.017

   Residues Comprising the Enhanced Aromatic Sequon Influence Protein N-Glycosylation Efficiency
    Yen-Wen Huang, J. Am. Chem. Soc. 2017, 139, 12947 12955 DOI: 10.1021/jacs.7b03868

 If this is in beginning or end of protein and could not be created, will set fail do not retry mover status. 

   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="c_linked_NxC" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Design in a c-linked sequon using NxC as the motif (Glycosylation at the N)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="c_linked_WxxW" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Design in a c-linked sequon using WxxW as the motif (Glycosylation at the first W)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="c_linked_WSTxC" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Design in a c-linked sequon using WSTxC as the motif (Glycosylation at W)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="positions_as_start_of_sequon" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Instead of having each position be the glycosylation position, have each position be the start of the sequon. This just makes using ResidueSelectors with this class a bit easier if needed.  Only really applies to enhanced motifs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_x_positions" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Design any X position (which can be ANY reside, instead of keeping it as the input residue type in the pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_neighbors" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we pack the neighboring residues to the motif during design?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_neighbors" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we design the neighboring residues to the motif during design?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_distance" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Packing distance to neighbors?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_rounds" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of rounds to run packing/design. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set a number of positions using a residue selector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CreateSequenceMotifMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
@brief Simple mover to Create a sequence motif in a region of protein using the
SequenceMotifTaskOperation.  Uses psueo-regular expressions to define the motif.

@details Simply calls the packer using the operation, optionally packing neighbor residues as it does so.
 If you need something more complex, use the SequenceMotifTaskOperation directly.

 </xs:documentation></xs:annotation>
 <xs:attribute name="motif" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
     This is slightly similar to a regex, but not quite. We are not matching a sequence,
   we are designing in a motif regardless of the current sequence, anywhere in a protein.

   - Each letter corresponds to a position. Using [ ] indicates a more complicated expression for that position.
   - An X indicates it can be anything, and that we are designing here.
   - An AA Letter, like V, indicates that that position will be designed to a V.
   - A - charactor indicates that that position stays with whatever it is currently.  We essentially skip this position.
   - An expression like: [^PAV] indicates that we will design anything except Proline, Alanine, and Valine 
   - An expression like: [NTS] indicates that that position can be Asparigine, Threonine, or Serine and 
      only of these will be enabled during the design.
   - RESFILE commands are accepted as well. These require a % charactor in from of the whole expression.
     For example [%POLAR] would set that position to only polar design.

 EXAMPLE:
  Glycosylation N-Linked motif design: N[^P][ST]


   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_neighbors" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we pack the neighboring residues to the motif during design?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_neighbors" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we design the neighboring residues to the motif during design?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_distance" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Packing distance to neighbors?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_rounds" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of rounds to run packing/design. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CreateTorsionConstraint_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds torsion constraints to a pose
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="res1" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue containing first atom
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="atom1" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of first atom in torsion
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="res2" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue containing second atom
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="atom2" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of second atom in torsion
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="res3" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue containing third atom
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="atom3" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of third atom in torsion
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="res4" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue containing fourth atom
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="atom4" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of fourth atom in torsion
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="cst_func" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Function to use for this torsion constraint
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CrosslinkerMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds a crosslinker linking two or more user-specified side-chains.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   A unique name for this instance of the CrosslinkerMover.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="linker_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the type of linker to use.  For example, use TBMB for 1,3,5-tris(bromomethyl)benzene. (Allowed options are TBMB|1_4_BBMB|TMA|tetrahedral_metal|octahedral_metal|trigonal_planar_metal|trigonal_pyramidal_metal|square_planar_metal|square_pyramidal_metal.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The symmetry of the input pose.  For example, "C3" for cyclic, threefold symmetry.  The symmetry must be a character followed by an integer.  Allowed characters are 'A' (asymmetric), 'C' (cyclic), 'D' (dihedral), and 'S' (mirror cyclic).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="metal_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For crosslinks mediated by metals, which metal is mediating the crosslink?  Defaults to "Zn".  (Should be written as an element name -- e.g. "Cu", "Ca", "Fe", etc.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_linker" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the linker geometry be added to the pose?  Default true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constrain_linker" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should constraints for the linker be added to the pose?  Default true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_and_minimize_linker_and_sidechains" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the linker and the connecting sidechains be repacked, and should the jump to the linker, and the linker and connnecting side-chain degrees of torsional freedom, be energy-minimized?  Default true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sidechain_fastrelax_rounds" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of rounds of FastRelax to apply when packing and minimizing side-chains and the liker.  Default 3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="do_final_fastrelax" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the whole pose be subjected to a FastRelax?  Default false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_fastrelax_rounds" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of rounds of FastRelax to apply when relaxing the whole pose.  Default 3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_by_sidechain_distance" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Prior to adding the linker geometry, should this mover abort with failure status if the selected side-chains are too far apart to connect to the linker?  Default true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sidechain_distance_filter_multiplier" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   This is a multiplier for the sidechain distance cutoff filter.  Higher values make the filter less stringent.  Default 1.0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_by_constraints_energy" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   After adding the linker geometry, adding constraints, and repacking and minimizing the linker and the connecting side-chains, should ths mover abort with failure status if the constraints energy is too high (i.e. the energy-minimized linker geometry is bad)?  Default true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constraints_energy_filter_multiplier" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   This is a multiplier for the constraints energy cutoff filter.  Higher values make the filter less stringent.  Default 1.0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_by_final_energy" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   At the end of this protocol, should this mover exit with error status if the final energy is above a user-defined cutoff?  Default false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_energy_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If we are exiting with error status if the final energy is too high, this is the energy cutoff.  Default 0.0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined residue selector that has been set up to select the residues that will be cross-linked. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   A scorefunction to use for packing, energy-minimization, and filtering.  If constraints are turned off in this score function, they will be turned on automatically at apply time.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CrystRMS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculate RMS taking crystal symmetry into account.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CstInfoMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Report information about how well the pose reflects given constraint values
 </xs:documentation></xs:annotation>
 <xs:attribute name="cst_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which constraints to report. If not given (or given as an empty string), report on the constraints that are currently in the pose. For consistency between different structures, it's highly recommended to supply a constraints file. In-pose constraints are not stored in any defined order, there's no guarantee that the constraint numbering will match up structure-to-structure, even if every pose has identical constraints. (If a constraint file is used, the order of the constraints will be the same as the order of the constraints in the constraint file.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_cst_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name to WRITE the constraints into. Constraints are only printed if a file  name is provided
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prefix" type="xs:string" default="CST">
  <xs:annotation><xs:documentation xml:lang="en">
   What prefix to give the values. Important if you have more than one CstInfoMover (or more than one application), as later values with the same prefix will overwrite earlier values.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recursive" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should sub-constraints of a multi-constraint also be output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_CutOutDomain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover takes a template pdb and cuts the active pose accroding to start and end position relative to the template pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="start_res" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   begin residue on the template pdb
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_res" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   end residue on the template pdb
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="source_pdb" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the pdb to be cut
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="suffix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   suffix of the outputted structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_n_ter" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   do not delete n N-terminal residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_c_ter" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   do not delete n C-terminal residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DNAMethyltransferaseMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Enzymatic mover to methylate a DNA-containing pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="species" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the species name of this simulated enzyme.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="enzyme_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the specific name of this simulated enzyme.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="efficiency" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Directly set the efficiency of this enzyme, ignoring whatever is in the database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perform_major_reaction_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Set this EnzymaticMover to perform only its major reaction.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perform_all_reactions" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow this EnzymaticMover to be promiscuous, performing a random transfer from among its possible co-substrates.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DeclareBond_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Declares a chemical bond between two atoms
 </xs:documentation></xs:annotation>
 <xs:attribute name="res1" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue containing first atom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue containing second atom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom1" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of first atom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom2" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of second atom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_termini" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Add termini to pose?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rebuild_fold_tree" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Rebuild the fold tree after declaring this bond?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="run_kic" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Run KIC to close any chainbreak caused by the declared chemical bond?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="KIC_res1" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   First residue to use in KIC
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="KIC_res2" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Second residue to use in KIC
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res1_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Alternative to using the res1 option. This residue selector must select exactly one residue!. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Alternative to using the res2 option. This residue selector must select exactly one residue!. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DeclareStructureDataCovalentBondMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="atom1" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom2" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DefineMovableLoops_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Specific to seeded abinitio protocol. Finds loops after seeded abinitio that should be closed.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Seeds">
   <xs:complexType mixed="true">
    <xs:attribute name="begin" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      First residue of seed fragment.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Last residue of seed fragment.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="add_chainbreakterm" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Penalize chain breaks.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutpoint_based" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Use cutpoint in loop modeling.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstrct" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File containg sec struct assignments for all residues in "chain_num"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Template pdb file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of chain IDs. NOTE: chains have to be consecutive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DeleteChain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Delete this chain.
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   delete this chain (number) (no option for PDB chains)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DeleteChainsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
remove chains from a pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="chains" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   delete these chains.  The format is unseparated chain letters, like 'AHLR'
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="detect_bonds" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   detect and delete broken bonds afterwards
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="detect_pseudobonds" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   detect and delete broken pseudobonds afterwards
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DeleteRegionMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Deletes a region from a pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="rechain" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Add terminus variants and recompute chains after deleting
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_terminal_types_on_rechain" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Add terminal types when rechaining
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_jump_on_rechain" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Add jump when rechaining
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   First residue in region to delete (PDBNum (24A) or RosettaNum 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Last residue in region to delete
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nter_overhang" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of additional residues to delete on the N terminal side
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cter_overhang" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of additional residues to delete on the C terminal side
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   ResidueSelector with region(s) to delete. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DesignMinimizeHbonds_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="hbond_weight" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight to score H-bonds with
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="donors" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Design in donor residue types
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="acceptors" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Design in acceptor residue types
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb_hbond" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Optimize backbone H-bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_hbond" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Optimize sidechain H-bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hbond_energy" type="real" default="-0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Energy at which we consider an H-bond is taking place
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_cutoff_distance" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance from partner chain where the interface is defined to exist
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="bb_movement_types">
 <xs:restriction base="xs:string">
  <xs:enumeration value="ccd"/>
  <xs:enumeration value="backrub"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_DesignProteinBackboneAroundDNA_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs a round flexible backbone sampling/design and loop design around DNA.
 </xs:documentation></xs:annotation>
 <xs:attribute name="type" type="bb_movement_types">
  <xs:annotation><xs:documentation xml:lang="en">
   Backbone movement type
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="gapspan" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of residues allowed between dna contacting residues for loop building.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="spread" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Loop start/ends are extended by this number of residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles_outer" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   outer cycles of CCD/backrub (MC)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles_inner" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   inner cycles of CCD/backrub (MC)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_rate" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   repack rate of CCD/backrub (MC)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_initial" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial temp of backrub (MC)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_final" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Final temp of backrub (MC)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="designable_second_shell" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow design of residues in the neighborhood of the design shell
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DetectSymmetry_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover takes a non-symmetric pose composed of symmetric chains and transforms it into a symmetric system. It only works with cyclic symmetries from C2 to C99.
 </xs:documentation></xs:annotation>
 <xs:attribute name="subunit_tolerance" type="real" default="0.01">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum tolerated CA-rmsd between the chains.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="plane_tolerance" type="real" default="1e-3">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum accepted displacement(angstroms) of the center of mass of the whole pose from the xy-plane.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_single_jump" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   whether to ignore a single jump when caculating the symmetry
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_pdb_info_labels" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   keep PDB-InfoLabel tags in new symmetric Pose object
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_pdb_remarks" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   keep PDB file remarks in new symmetric Pose object
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DirectSegmentLookupMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform alignment-based segment lookup in target protein structure db. TODO fordas
 </xs:documentation></xs:annotation>
 <xs:attribute name="structure_store" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Path of target struture store.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd_tolerance" type="real" default=".5">
  <xs:annotation><xs:documentation xml:lang="en">
   Lookup endpoint rmsd tolerance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segment_cluster_tolerance" type="real" default="1.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Segment clustering rmsd tolerance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_insertion_length" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum segment insertion length.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_num_results" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of result segments returned, no limit if 0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from_chain" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Upstream chain for connection.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="to_chain" type="positive_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Downstream chain for connection.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stored_subset_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Store inserted residues as residue subset, recall with StoredResidueSubset.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overwrite_stored_subset" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Overwrite stored subset if already present.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="label_insertion" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Label inserted residues in pdbinfo.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_lookup_count" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Report lookup result cluster size as output pose score.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_lookup_length" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Report lookup result length as output pose score.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DisplayPoseLabelsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Print the Pose's labels
 </xs:documentation></xs:annotation>
 <xs:attribute name="title_width" type="xs:string" default="15">
  <xs:annotation><xs:documentation xml:lang="en">
   Width assigned to print the label names to garantee alignment of the representation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_dssp" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Use DSSP if the Pose has no Secondary Structure Assigned (is all loop).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Write the LABELS as a REMARK in the output structure or silent file (overwrites previous REMARKS with the title LABELS).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_factory" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A TaskFactory specification to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movemap_factory" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   MoveMapFactory to print aligned to the residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DisulfideInsertion_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XSD XRW: TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_cyd" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO specifiy n_cyd and c_cyd or neither
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="c_cyd" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO specifiy n_cyd and c_cyd or neither
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constraint_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DisulfideMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="targets" type="refpose_enabled_residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   List of target residue numbers for disulfide creation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_repack" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_minimize" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DisulfideOptimizationMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Optimize the pair of disulfide-bonded residues indicated in the residue selector provided.
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_optimization" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of iterations of final optimization (minimization and three more rounds of repack-minimize)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interaction_graph_threads" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of threads to request for packer interaction graph precalculation.  Only works in multi-threaded Rosetta builds (extras=cxx11threads during compilation).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Disulfidize_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Scans a protein and builds disulfides that join residues in one set of residues with those in another set. By default, non-protein, GLY, and PRO (or DPRO) residues are ignored. Residues to be joined must be min_loop residues apart in primary sequence. Potential disulfides are first identified by CB-CB distance, then by mutating the pair to CYS, forming a disulfide, and performing energy minimization. If the energy is less than the user-specified cutoff, it is compared with a set of rotations and translations for all known disulfides. If the "distance" resulting from this rotation and translation is less than the user-specified match_rt_limit, the pairing is considered a valid disulfide bond. Once valid disulfides are found, they are combinatorially added. For example, if disulfides are identified between residues 3 and 16 and also between residues 23 and 50, the following configurations will be found: 1. [3,16] 2. [23,50] 3. [3,16],[23,50] The mover is now able to place D-cysteine disulfides and mixed D/L disulfides.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="match_rt_limit" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   distance in 6D-space (rotation/translation) which is allowed from native disulfides. Lower values increase the stringency of the requirement that disulfides be similar to native disulfides.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_disulfides" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Smallest allowable number of disulfides.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_disulfides" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Largest allowable number of disulfides.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_current_disulfides" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, all current disulfides are preserved. If false, existing disulfides containing a CYS residue within either set1 or set2 are mutated to alanine. Disulfides with both CYS residues outside of the union of the selected residue sets will not be affected. False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_current_disulfides" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, current disulfides are included in the possible disulfide combinations to try. False by default (only new disulfide combinations tried).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_loop" type="non_negative_integer" default="8">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum distance between disulfide residues in primary sequence space.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_disulf_score" type="real" default="1.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Highest allowable per-disulfide dslf_fa13 score. Reducing this requires that disulfide geometry be more ideal.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mutate_gly" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the mover ignore glycine positions (false) or allow mutations to cysteine at these positions (true)? Default false (ignore gly positions).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mutate_pro" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the mover ignore D/L-proline positions (false) or allow mutations to cysteine at these positions (true)? Default false (ignore pro/dpr positions).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_cb_dist" type="real" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum Cb Cb disulfide distance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_or_matchrt" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, disulfides are accepted if they pass the match_rt (rigid-body transform) criterion OR the full-atom disulfide score criterion. If false, disulfides must pass BOTH criteria. False by default (both criteria must pass).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a residue selector which identifies a pool of residues which can connect to residues in set2. (Default: all residues)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a residue selector which identifies a pool of residues which can connect to residues in set1. (Default: all residues)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_l_cys" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the mover consider placing L-cysteine? True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_d_cys" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the mover consider placing D-cysteine? False by default. (Note that at least one of use_l_cys, use_d_cys, or use_beta_cys must be set to "true".)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_beta_cys" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the mover consider placing beta-3-cysteine at beta-amino acid positions? False by default. (Note that at least one of use_l_cys, use_d_cys, or use_beta_cys must be set to "true".)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DnaInterfaceMinMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  MinMover for DNA interfaces
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   scorefunction name
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dna_interface_finder" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name previously used to identify DNAInterfaceFinder in the script
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_type" type="minimizer_type">
  <xs:annotation><xs:documentation xml:lang="en">
   Type of minimizer to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tolerance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Tolerance for the minimizer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DnaInterfaceMultiStateDesign_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs multistate design on DNA interfaces
 </xs:documentation></xs:annotation>
 <xs:attribute name="generations" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of generations for the genetic algorithm to evolve
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pop_size" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   number of sequences per generation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_packs" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   number of times to call the simulated annealer to find the best rotamer configuration for a given sequence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pop_from_ss" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
    number of sequences to include in the initial population that are created by mutation of the sequence determined by full redesign
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="numresults" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   number of sequences to output structures for, starting with the lowest scoring sequence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fraction_by_recombination" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   fraction of sequences to generate by recombination of sequences from the previous generation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mutate_rate" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   probability of randomizing each residue when a sequence is mutated
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="boltz_temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature for Metropolis criterion
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="anchor_offset" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Anchor offset for multistate packer aggregate function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checkpoint_prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   prefix to add to the beginning of checkpoint file names
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checkpoint_interval" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   frequency in number of sequences scored with which the checkpoint files are written
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checkpoint_gz" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   compress the checkpoint files with gzip
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checkpoint_rename" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   rename checkpoint files after the genetic algorithm completes, so that subsequent runs generate new output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DnaInterfacePacker_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Intended to perform anything one would want to do in a DNA interface that uses a single incarnation of the RotamerSets/InteractionGraph combo. For basic packing/designing, the more basic PackRotamersMover can be used instead, provided it receives the appropriate TaskFactory/TaskOperations. This derived class, however, takes advantage of the reusability of packer data to accomplish some higher-level functions, such as rapid estimations of multi-state specificity, reversions, and mutational scanning.
 </xs:documentation></xs:annotation>
 <xs:attribute name="binding" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   calculate binding energy
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="base_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   consider only interaction with the DNA bases
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   minimize protein side chains at the interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reversion_scan" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   revert mutations that do not contribute to the specificity score
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="probe_specificity" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   calculate binding energy of designed protein for alternative DNA targets and calculate a specificity score
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_output" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   write out unbound pose to verify proper interface separation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="protein_scan" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   brief runs a single-residue scan of user-defined amino acid possibilities to estimate affinity and specificity of single mutants w/ respect to relevant DNA
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allowed_types" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   allowed residue types for design. default: ACDEFGHIKLMNPQRSTVWY; 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DockLatticeMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Docking within a crystal lattice.
 </xs:documentation></xs:annotation>
 <xs:attribute name="fullatom" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If fullatom=1 it does fullatom docking with repacks and min steps; if fullatom=0 you need to provide a centroid energy function (e.g. score4_smooth) and it will also add lattice slide moves.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ncycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   # of steps to run.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trans_step" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Magnitude of translational perturbations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rot_step" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Magnitude of rotational perturbations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi_step" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Magnitude of torsion angle perturbations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="kT" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Simulation temperature
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="randomize" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a random starting point?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perturb_chi" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Do we also randomize the torsions?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="spacegroup" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   What spacegroup to run? Either a spacegroup name (no spaces or one of: input, random_chiral, or random_achiral)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Be verbose in output?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="init_score_cut" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   the initial score cut to use for lattice generation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recover_low" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Recover the low energy sampled conformation?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize the lattice after each perturbation?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_min" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize the lattice at the end of each simulation?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DockMCMProtocol_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs Metropolis Monte Carlo high resolution docking protocol
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DockMinMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs the docking_min high resolution protocol
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DockSetupMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Uses a rigid body mover to separate docking partners
 </xs:documentation></xs:annotation>
 <xs:attribute name="partners" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Underscore-separated list of partners to dock
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rb_mover" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   Previously-defined rigid body mover to use to separate partners
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="moveable_jump" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Which jump number should be moveable during docking? Defaults to 1 if partners not set
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="dock_with_hotspot_subsubtag_HotspotFile_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Wrapper tag for individual hotspot files
 </xs:documentation></xs:annotation>
 <xs:attribute name="file_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Filename for this hotspot file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cb_force" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight on the CB atoms for these hotspot constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="dock_with_hotspot_subtag_HotspotFiles_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Wrapper tag for individual hotspot files
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="HotspotFile" type="dock_with_hotspot_subsubtag_HotspotFile_type"/>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DockWithHotspotMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="HotspotFiles" type="dock_with_hotspot_subtag_HotspotFiles_type"/>
 </xs:choice>
 <xs:attribute name="hotspot_score_weight" type="real" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for the hotpot scoreterm
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="centroidscore_filter" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold for the centroid score filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hotspotcst_filter" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Docking_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="score_low" type="xs:string" default="score_docking_low">
  <xs:annotation><xs:documentation xml:lang="en">
   Low-resolution scorefunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_high" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   High-resolution scorefunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fullatom" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Run the high-resolution phase of the protocol
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="conserve_foldtree" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep the foldtree the same through the whole protocol
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="local_refine" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Do local refinement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="view" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Account for symmetry and associated information
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_default_docking_task" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Ignore default docking task, instead using whatever is provided
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jumps" type="int_cslist" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   list of jumps for docking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimize_fold_tree" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Obtain an optimal foldtree given the desired docking jumps
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DockingHighResLegacy_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs the legacy high resolution docking protocol
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DockingInitialPerturbation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform an initial perturbation to docking partners before docking
 </xs:documentation></xs:annotation>
 <xs:attribute name="randomize1" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Randomize the first docking partner
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="randomize2" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Randomize the second docking partner
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_ellipsoidal_randomization" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the EllipsoidalRandomizationMover instead of the RigidBodyRandomizeMover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dock_pert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Read in translational and rotational perturbations and apply to pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trans" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Translational perturbation to apply before docking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rot" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotational perturbation to apply before docking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="uniform_trans" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the UniformSphereTransMover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="spin" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Spin partner about its axis
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="center_at_interface" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Center the spin at the interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="slide" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Slide docking partners into contact
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DockingPrepackProtocol_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Packs separated partners in preparation for docking
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DockingProtocol_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Mover used for protein-protein docking.
 </xs:documentation></xs:annotation>
 <xs:attribute name="docking_score_low" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Low-resolution docking score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="docking_score_high" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   High-resolution docking score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="partners" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String specifying docking patners; underscore should separate the partners e.g. AB_C
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="low_res_protocol_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Only perform low-resolution docking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="docking_local_refine" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Only perform high-resolution docking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dock_min" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the DockMinMover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_default_docking_task" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Ignore the default docking task and define your own. Unless this is specified, task operations will be appended to the default docking task.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DockingSlideIntoContact_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  slide centroid level chains
 </xs:documentation></xs:annotation>
 <xs:attribute name="rb_jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   jump to slide
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="slide_axis" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   axis to slide
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DomainAssembly_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Do domain assembly sampling by fragment insertion in a linker region
 </xs:documentation></xs:annotation>
 <xs:attribute name="frag9" type="xs:string" default="frag9">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to fragment file containing 9mers
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="frag3" type="xs:string" default="frag3">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to fragment file containing 3mers
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="linker_start_pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="linker_start_res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="linker_end_pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="linker_end_res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Dssp_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculate secondary structures based on dssp algorithm, and load the information onto Pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="reduced_IG_as_L" type="xs:integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   if set to be 1, will convert IG from Dssp definition as L rather than H
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DumpPdb_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Dumps a pdb. Recommended ONLY for debugging as you can't change the name of the file during a run, although if tag_time is true a timestamp with second resolution will be added to the filename, allowing for a limited amount of multi-dumping. If scorefxn is specified, a scored pdb will be dumped.
 </xs:documentation></xs:annotation>
 <xs:attribute name="fname" type="xs:string" default="dump.pdb">
  <xs:annotation><xs:documentation xml:lang="en">
   Filename of dumped PDB.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tag_time" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, adds timestamp to name of pdb file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DumpSingleResidueRotamers_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Dump all of the rotamers for a given amino acid type at the rsd_index position into individual PDB files
 </xs:documentation></xs:annotation>
 <xs:attribute name="rsd_index" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Position at which to enumerate rotamers
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix for output rotamer info file and pdbs when specified
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_rotamers_to_pdbs" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we write the rotamers out to individual PDB files?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="all_positions" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Dump rotamers at all pdb positions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_DumpStatsSS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="fname" type="xs:string" default="SS_stats.txt">
  <xs:annotation><xs:documentation xml:lang="en">
   Secondary structure file to which to dump statistics
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cmd" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Command to run psipred
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Blueprint file that could be used to override DSSP secondary structure.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ERRASER2Protocol_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Run the ERRASER2 protocol
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_rounds" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of ERRASER2 minimize-rebuild rounds.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Environment_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XSD_RW: TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Register">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XSD_XRW: TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="mover" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XSD_XRW: TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Apply">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XSD XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="mover" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XSD_XRW: TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="auto_cut" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="inherit_cuts" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_pure_movers" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="nnegative_int_cslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="[+]?[0-9]+(,[-+]?[0-9]+)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_EnzRepackMinimize_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  EnzRepackMinimize, similar in spirit to RepackMinimizeMover, does the design/repack followed by minimization of a protein-ligand (or TS model) interface with enzyme design style constraints (if present, see AddOrRemoveMatchCstsMover) using specified score functions and minimization dofs. Only design/repack or minimization can be done by setting appropriate tags. A shell of residues around the ligand are repacked/designed and/or minimized. If constrained optimization or cst_opt is specified, ligand neighbors are converted to Ala, minimization performed, and original neighbor sidechains are placed back.
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_factory" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A TaskFactory specification to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   number of cycles of repack-minimize (default=1 cycle) (Note: In contrast to the enzyme_design application, all cycles use the provided scorefunction.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_in_stages" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   first minimize non-backbone dofs, followed by backbone dofs only, and then everything together (default=0)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   optimize sequence of residues spatially around the ligand (detection of neighbors need to be specified in the flagfile or resfile, default=0)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if true, only repack sidechains without changing sequence. (default =0) If both design and repack_only are false, don't repack at all, only minimize
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fix_catalytic" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   fix catalytic residues during repack/minimization (default =0)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_opt" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   perform minimization of enzdes constraints with a reduced scorefunction and in a polyAla background. (default= 0)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="backrub" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   use backrub to minimize (default=0).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_rb" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   minimize rigid body orientation of ligand (default=1)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_bb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   minimize back bone conformation of backbone segments that surround the ligand (contiguous neighbor segments of more than 3 residues are automatically chosen, default=0)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_sc" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   minimize sidechains (default=1)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_lig" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   minimize ligand internal torsion degrees of freedom (allowed deviation needs to be specified by flag, default =0)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_prot_jumps" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize all jumps
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_repack" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_minimize" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rb_min_jumps" type="nnegative_int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   specify which jumps to minimize. If this is specified it takes precedence over minimize_rb above. Useful if you have more than one ligand in the system and you only want to optimize one of the ligands, e.g., rb_min_jumps=1,2 would minimize only across jumps 1 and 2.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_EnzdesRemodelMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="remodel_secmatch" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reinstate_foldtree" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remodel_region" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_existing_conf_as_invrot_target" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="int_wsslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="[-+]?[0-9]+(\s+[-+]?[0-9]+)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_ErraserMinimizerMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Optimize an RNA in the presence of electron density from X-ray or cryo-EM: minimization phase
 </xs:documentation></xs:annotation>
 <xs:attribute name="vary_bond_geometry" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Vary bond lengths and angles, constrained to ideal values.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constrain_phosphate" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Constrain phosphates to their initial positions.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ready_set_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Do nothing but ensure phosphate nomenclature is correct: useful for PHENIX integration and little else.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_minimize" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Skip the minimization step -- only do pyrimidine rotamer trials (if enabled).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="attempt_pyrimidine_flip" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotamer trials on pyrimidine bases.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fixed_res_list" type="int_wsslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Whitespace-separated list of sequence positions in Rosetta numbering.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutpoint_list" type="int_wsslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Whitespace-separated list of sequence positions in Rosetta numbering indicating cutpoints.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_pdb_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Output a PDB to this file, subverting JD2.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="generic_monte_carlo_Filters_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Multiple filters can be defined for an MC mover. These filters are then applied sequentially in the order listed and only if the pose passes the Metropolis criterion for all filters is it accepted. This allows the extension of MC to a multicriterion framework where more than one criterion is optimized, say the total score and the binding energy. See demos/rosetta_scripts/experimental/computational_affinity_maturation_strategy2 for an example. It's recommended to list the computationally expensive filters last, as later filters will only be calculated if the earlier filters all pass.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="AND">
   <xs:complexType mixed="true">
    <xs:attribute name="filter_name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      name of the filter declaration
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="temperature" type="real" default="1">
     <xs:annotation><xs:documentation xml:lang="en">
      Filter specific temperature
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="adaptive" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      Incorporate this filter when using adaptive scores.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="sample_type" type="xs:string" default="low">
     <xs:annotation><xs:documentation xml:lang="en">
      high - the filter evalutas good structures with positive scores; low - the filter evaulates good structures with negative scores
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="rank" type="rosetta_bool" default="false">
     <xs:annotation><xs:documentation xml:lang="en">
      Give this filter a rank of 1. Can only be applied for one filter. A filter with rank 1 will score the structure solitarily.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
</xs:complexType>

<xs:complexType name="mover_EvolutionaryDynamics_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Overwrites the boltzmann function in GenericMonteCarloMover to sample according to evolutionary dynamics instead.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Filters" type="generic_monte_carlo_Filters_type"/>
 </xs:choice>
 <xs:attribute name="trials" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of trials in a GenericMonteCarlo run. Will be automatically calculated when a task is included. See task_scaling for more information. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature value which affects the acceptance of new solutions according to the MC criterion
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_scaling" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   If a task is included, the number of designable residues will be calculated and the number of trials will be automatically set as task_scaling * (number designable residues). For example, if there are 10 designable residues and task_scaling is 5 (the default) the number of trials will be 50.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="adaptive_movers" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If the mover you call or a submover of that mover is of type ParsedProtocol with mode single-random, then GenericMonteCarlo can 'learn' the best sampling strategy by adapting the apply probabilities of individual movers within that ParsedProtocol. For each adaptation period (say 20 mover applies) the number of accepts of each submover is recorded (with pseudocounts of 1 for each mover) and during the next adaptation period the apply probabilities of the submovers in the ParsedProtocol are adjusted according in proportion to the acceptance probabilities of the previous stage. Due to the pseudocounts, all movers have at least some chance of being called.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="adaptation_period" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   goes together with adaptive_movers, defined above. Defaults to max( max_trials/10, 10 ) but can be set to any integer.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover to be used for sampling.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_name" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   Single filter case. See Filters subcategory for applying multiple filters.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="adaptive" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If the mover you call or a submover of that mover is of type ParsedProtocol with mode single-random, then GenericMonteCarlo can 'learn' the best sampling strategy by adapting the apply probabilities of individual movers within that ParsedProtocol. For each adaptation period (say 20 mover applies) the number of 'accepts of each submover is recorded (with pseudocounts of 1 for each mover) and during the next adaptation period the apply probabilities of the submovers in the ParsedProtocol are adjusted according in proportion to the acceptance probabilities of the previous stage. Due to the pseudocounts, all movers have at least some chance of being called.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_type" type="xs:string" default="low">
  <xs:annotation><xs:documentation xml:lang="en">
   low - MC samples by minimizing the structure score (REU: the more negative the better); high - MC samples by maximizing the structure score
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   As alternative to scoring by filters (See Filters subcategory), structures may be scored by a given scoring function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stopping_condition" type="xs:string" default="false_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   stops before trials are done if a filter evaluates to true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="drift" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   true - the state of the pose at the end of the previous iteration will be the starting state for the next iteration; false - the state of the pose at the start of each iteration will be reset to the state when the mover is first called ( Of course, this is not MC ).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="preapply" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   true - Automatically accept the first application of the sub-mover, ignoring the Boltzmann criterion. false - apply Boltzmann accept/reject to all applications of the mover. Though defaulting to true for historical reasons, it is highly recommended to set this to false unless you know you need it to be true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recover_low" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   true - at the end of application, the pose is set to the lowest (or highest if sample_type="high") scoring pose; false - the pose after apply completes is the last accepted pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bolz_rank" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with multiple filters. If no sub-filters are set with rank=1, the first filter is used for ranking. As a special case, if boltz_rank is set to true, the ranking score is a temperature-weighted sum of all filter values. (This value is equivalent to the effective value optimized by the MC protocol.) This boltz_rank score is computed by the equation SUM( multiplier * filter_value / filter_temperature ) over all filter values, where filter_value is the value returned by the filter and multiplier is 1 if the filter sample_type is low and -1 if the filter sample_type is high.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="saved_accept_file_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   save the most recent accepted structure in a temporary PDB? This allows recovery by checkpointing. Note that different processes would need to work from different directories or somehow control the checkpointing file name, else confusion will reign.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_accepted_trials" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum number of accepted trials. If not set max_accepted_trials=trials
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="saved_trial_number_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Checkpointing file for the current trial number. Allows the mover to recover after failure.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_tag" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   this is used by the called movers to set a certain tag. If saved_accept_file_name_ is set, then at exit the tag coming from the chosen mover is written to disk as, {saved_accept_file_name}.mover_tag. To work, mover_tag_ must be exposed to the movers being called.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reset_baselines" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If the filter is of type Sigmoid/Operator/CompoundStatement, look for all subfilters of type Sigmoid and reset their baseline to the pose's current filter evaluation at trial=1. Useful in cases where you want to set the thresholds relative to the pose's evaluation at the start of the MC trajectory.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="progress_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If specified opens a file in which each trial's outcome is reported (trial number, accept/reject, filter value, and pose sequence). Useful to monitor progress in MC
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="population_size" type="positive_integer" default="1000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Set population size. Default = 1000000
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disable_fitness_evaluation" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Disable fitness evaluation. Default = false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="branch_length" type="real" default="1000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Set branch_length. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mutation_rate" type="real" default="0.001">
  <xs:annotation><xs:documentation xml:lang="en">
   Set mutation_rate. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ExplicitWaterMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover solvates a pose based on statistics of where waters are found in hi-res crystal structures about polar side chains and backbone groups.  The input task operation is used togenerate potential hydration sites; subsequent packing steps allow waters to be added at thesepositions.
 </xs:documentation></xs:annotation>
 <xs:attribute name="mode" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The mode to run in (one of: remove, append, replace, or eval)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lkb_overlap_dist" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The overlap distance of sidechain lkb groups necessary to generate a water
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lkb_clust_rad" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The redundancy cutoff for sidechain lkb groups
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lkb_rotset_radius" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The rotameric cutoff for lkb groups (that is the distance cutoff for which two point waters are considered rotamers of a single water)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dwell_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The dwell cutoff for water packing (before clustering)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clust_radius" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The radius of clustering of packed waters
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clust_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The dwell cutoff for water packing (after clustering)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="gen_fixed" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If set, consider generating waters over fixed regions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Native pose (overrides in:file:native)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ExtendChain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add a specified motif (with secondary structure and abego) to a chain
 </xs:documentation></xs:annotation>
 <xs:attribute name="motif" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Motif to add to chain (e.g. 1LG-1LB-10HA)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segment" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Segment to extend. Mutually exclusive with chain, but one is required.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain to extend. Mutually exclusive with segment, but one is required.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prepend" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Add motif to the beginning of the chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ExtendedPoseMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Creates an extended, idealized pose from the sequence andresidue type set specified in the constructor.
 </xs:documentation></xs:annotation>
 <xs:attribute name="fasta" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Fasta file name (complete sequence?)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sequence" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Sequence string
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_fasta" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Take sequence from fasta file as specified in comandline option "-fasta"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_type_set" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue representation, centroid, fa_standard, centroid_rot ....
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="char">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain ID
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ExternalPackerResultLoader_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover allows a solution to a packer problem to be imported from an external file.  This allows Rosetta to communicate with external optimization packages, and provides a means of visualizing the result easily.
 </xs:documentation></xs:annotation>
 <xs:attribute name="packer_problem_definition_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The file from which a description of the packer problem will be loaded.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="solution_definition_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The file from which the solution to the packer problem will be loaded.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="binary_format_problem_definition" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the problem is read in assuming that it's in the Rosetta binary interaction graph summary format.  If false (the default), it's assumed to be in ASCII format.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ExtractAsymmetricPose_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Similar to ExtractAsymmetricUnit: given a symmetric pose, make a nonsymmetric pose that contains the entire system (all monomers). Can be used to run symmetric and asymmetric moves in the same trajectory.
 </xs:documentation></xs:annotation>
 <xs:attribute name="clear_sym_def" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the symmetry_definition option key will be cleared.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ExtractAsymmetricUnit_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The inverse of SetupForSymmetry: given a symmetric pose, make a nonsymmetric pose that contains only the asymmetric unit.
 </xs:documentation></xs:annotation>
 <xs:attribute name="keep_virtual" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, virtual atoms will be left in the pose. If false, the extracted asymmetric unit will not contain virtual atoms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_unknown_aas" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Deprecated option.  All de-symmetrization will keep non-cannonical amino acids.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ExtractSubposeMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Used to extract a subset of the subunits from a symmetric pose based on contacts with a user specified component (via sym_dof_name(s)). This subpose is dumped as a pdb with the user specified prefix, suffix, and basename derived from the job distributer. DOES NOT MODIFY THE POSE. For each sym_dof_name passed by the user, all neighboring subunits (as assessed by CA or CB contacts with the user specified contact_distance (10.0 A by default)). If extras=true, then all the full building block for each sym_dof will be extracted along with all touching building blocks.
 </xs:documentation></xs:annotation>
 <xs:attribute name="sym_dof_names" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   This is 'optional', but if you do not specify sym_dof_names, you might just get a full pose or empty pose instead of a smaller number of subunits. Name(s) of the sym_dofs corresponding to the primary component(s) to extract along with the neighboring subunits/building blocks. Passed as a string (optionally: with a comma-separated list).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prefix" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix of choice for output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="suffix" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   Suffix of choice for output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="contact_dist" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum CA or CB distance from any residue in the primary component(s) to any residue in another component for it to be considered a 'neighbor' and added to the extracted subpose. Default is '10.0' angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extras" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Boolean option to set whether or not full building blocks are extracted rather than just subunits.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FastDesign_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  FastRelax mover used for design that can take constraint generators
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="1">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disable_design" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Do not perform design even if a resfile is specified
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_factory" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A TaskFactory specification to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeats" type="xs:integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   Same as cmd-line FR. Number of fastrelax repeats to perform
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relaxscript" type="xs:string" default="default">
  <xs:annotation><xs:documentation xml:lang="en">
   a filename for a relax script, as described in the documentation for the Relax application; the default relax script is used if not specified
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Add constraints from the constraint file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="batch" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform BatchRelax?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartesian" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use cartesian minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dualspace" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use dualspace minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movemap_disables_packing_of_fixed_chi_positions" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, positions that are prohibited from undergoing sidechain minimization by the movemap are ALSO prohibited from packing.  False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_down_constraints" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Ramp down constraint weights over the course of the protocol
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondangle" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize bond angles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondlength" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize bond lengths
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_type" type="minimizer_type" default="lbfgs_armijo_nonmonotone">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimizer type to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delete_virtual_residues_after_FastRelax" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should virtual residues be deleted when the protocol completes?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movemap_factory" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the already-defined MoveMapFactory that will be used to alter the default behavior of the MoveMap. By default, all backbone, chi, and jump DOFs are allowed to change. A MoveMapFactory can be used to change which of those DOFs are actually enabled. Be warned that combining a MoveMapFactory with a MoveMap can result in unexpected behavior. The MoveMap provided as a subelement of this element will be generated, and then the DOF modifications specified in the MoveMapFactory will be applied afterwards. E.g., if the MoveMap says to allow bb flexibility for res 1-10, and then the MoveMapFactory says to disable all bb flexibility, the MoveMapFactory modification will happen second, and this second modification will completely override the MoveMap's initial instructions. Pay attention to the precedence rules of the MoveMap. If high-level instructions (e.g. 'apply to all') are performed after low-level instructions, then the low-level instructions are erased. If low-level instructions (e.g. 'apply to a particular residue') are performed after a high-level instructions, the low-level instructions override the high-level instructions. E.g., if there are 100 residues, then the instruction 'all-all-bb' followed by 'disable-bb-for-residues-10-to-30' followed by the instruction 'allow-bb-for-bb-dihedral-number-3-for-residue-15' will mean that residues 1-9 will be allowed backbone flexibility, and residues 31-100, too, and that only backbone dihedral 3 on residue 15 will have flexibility among the residues from 10 to 30. However, if a final instruction 'disallow-all-bb' is given, then no backbone dihedrals will be free, not even dihedral 3 on residue 15.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clear_designable_residues" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Clear the set of designable residues?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cgs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Names of previously specified constraint generators to apply during this run
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FastRelax_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs the fast relax protocol
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="1">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disable_design" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Do not perform design even if a resfile is specified
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_factory" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A TaskFactory specification to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeats" type="xs:integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   Same as cmd-line FR. Number of fastrelax repeats to perform
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relaxscript" type="xs:string" default="default">
  <xs:annotation><xs:documentation xml:lang="en">
   a filename for a relax script, as described in the documentation for the Relax application; the default relax script is used if not specified
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Add constraints from the constraint file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="batch" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform BatchRelax?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartesian" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use cartesian minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dualspace" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use dualspace minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movemap_disables_packing_of_fixed_chi_positions" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, positions that are prohibited from undergoing sidechain minimization by the movemap are ALSO prohibited from packing.  False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_down_constraints" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Ramp down constraint weights over the course of the protocol
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondangle" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize bond angles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondlength" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize bond lengths
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_type" type="minimizer_type" default="lbfgs_armijo_nonmonotone">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimizer type to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delete_virtual_residues_after_FastRelax" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should virtual residues be deleted when the protocol completes?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movemap_factory" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the already-defined MoveMapFactory that will be used to alter the default behavior of the MoveMap. By default, all backbone, chi, and jump DOFs are allowed to change. A MoveMapFactory can be used to change which of those DOFs are actually enabled. Be warned that combining a MoveMapFactory with a MoveMap can result in unexpected behavior. The MoveMap provided as a subelement of this element will be generated, and then the DOF modifications specified in the MoveMapFactory will be applied afterwards. E.g., if the MoveMap says to allow bb flexibility for res 1-10, and then the MoveMapFactory says to disable all bb flexibility, the MoveMapFactory modification will happen second, and this second modification will completely override the MoveMap's initial instructions. Pay attention to the precedence rules of the MoveMap. If high-level instructions (e.g. 'apply to all') are performed after low-level instructions, then the low-level instructions are erased. If low-level instructions (e.g. 'apply to a particular residue') are performed after a high-level instructions, the low-level instructions override the high-level instructions. E.g., if there are 100 residues, then the instruction 'all-all-bb' followed by 'disable-bb-for-residues-10-to-30' followed by the instruction 'allow-bb-for-bb-dihedral-number-3-for-residue-15' will mean that residues 1-9 will be allowed backbone flexibility, and residues 31-100, too, and that only backbone dihedral 3 on residue 15 will have flexibility among the residues from 10 to 30. However, if a final instruction 'disallow-all-bb' is given, then no backbone dihedrals will be free, not even dihedral 3 on residue 15.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FavorNativeResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="bonus" type="real" default="1.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Bonus for the native residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FavorNonNativeResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="bonus" type="real" default="-1.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Bonus for the native residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="favor_seqprof_scaling_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="prob"/>
  <xs:enumeration value="none"/>
  <xs:enumeration value="global"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_FavorSequenceProfile_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sets residue type constraints (SequenceProfileConstraint) on the pose according to the given profile and weight.
 </xs:documentation></xs:annotation>
 <xs:attribute name="weight" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Adjust the post-scaling strength of the constraints.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxns" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Convenience feature to automatically set res_type_constraint to 1in the listed functions where it is currently turned off.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_native" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   use the structure specified by -in:file:native as reference
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_fasta" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   use a native FASTA sequence specified by the -in:file:fasta as reference
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_starting" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   use the starting input structure (e.g. one passed to -s) as reference
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_current" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   use the current structure (the one passed to apply) as the reference
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdbname" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   use the structure specified by the filename as the reference
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pssm" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   a filename of a blast formatted pssm file containing the sequence profile to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   0 is all chains, otherwise if a sequence is added, align it to the specified chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scaling" type="favor_seqprof_scaling_type" default="prob">
  <xs:annotation><xs:documentation xml:lang="en">
   Set how to scale the given values."prob"=Boltzmann-weighted probability based on the profile score"global"= global linear fixed-zero rescalingsuch that all (pre-weighted) values fall in the range of -1.0 to 1.0"none" does no adjustment of values.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="matrix" type="xs:string" default="BLOSUM62">
  <xs:annotation><xs:documentation xml:lang="en">
   Set substitution matrix; valid:  BLOSUM62,MATCH,IDENTITY
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude_resnums" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Exclude residues from being contrained.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FavorSymmetricSequence_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add ResidueTypeLinkingConstraints to the pose such that a symmetric sequence (CATCATCAT)will be favored during design. You should add this mover before sequence design is performed.
 </xs:documentation></xs:annotation>
 <xs:attribute name="penalty" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Penalty applied to a pair of asymmetric residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetric_units" type="positive_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of symmetric units in the sequence. It should be a value of 2 or greater
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FilterReportAsPoseExtraScoresMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Reports the report_sm value of the provided Filter at the time this Mover runs (normally RosettaScripts reports at the end of the run, when the Filter's value will have changed)
 </xs:documentation></xs:annotation>
 <xs:attribute name="filter_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter (defined in FILTERS section) to report value of
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_as" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   string to report value to (cannot use filter name because RosettaScripts is stupid and reports the filter's ENDING value there already)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FinalMinimizer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Do a gradient based minimization of the final docked pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Used scorefunction. Required.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movemap_builder" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a previously defined MoveMapBuilder. Required.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_constraints" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Remove any added constraints after minimization.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="adp_strategy_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="individual"/>
  <xs:enumeration value="group"/>
  <xs:enumeration value="randomize"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="group_adp_mode_restricted_string_type">
 <xs:restriction base="non_negative_integer">
  <xs:enumeration value="1"/>
  <xs:enumeration value="2"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_FitBfactors_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  PHENIX crystallographic refinement interface code.  Fits b factors using an adp strategy
 </xs:documentation></xs:annotation>
 <xs:attribute name="adp_strategy" type="adp_strategy_type" default="individual">
  <xs:annotation><xs:documentation xml:lang="en">
   ADP (?) strategy.  Must be one of ('individual', 'group', 'randomize')
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="group_adp_mode" type="group_adp_mode_restricted_string_type" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   group_adp_mode strategy, legal arguments are 1 or 2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="b_min" type="real" default="5.0">
  <xs:annotation><xs:documentation xml:lang="en">
   b value min; used only with randomize strategy
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="b_max" type="real" default="5.0">
  <xs:annotation><xs:documentation xml:lang="en">
   b value max; used only with randomize strategy
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FitSimpleHelix_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Fit Crick parameters for a single helix.
 </xs:documentation></xs:annotation>
 <xs:attribute name="r1_initial" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial value for the r1 Crick parameter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1_initial" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial value for the omega1 Crick parameter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dz1_initial" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial value for the dz1 Crick parameter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_index" type="positive_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   First residue number in the bundle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_index" type="positive_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Last residue number in the bundle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_type" type="minimizer_type" default="lbfgs_armijo_nonmonotone">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimizer type
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_tolerance" type="real" default="0.00000001">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimization tolerance
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_atom" type="xs:string" default="CA">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom name to use as a reference position
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_residue" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue to use as a reference position
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues_per_repeat" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Helical bundles can be constructed from multi-residue repeats; how many residues are there per repeat?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FixAllLoopsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Connects chains using a very fast RMSD lookback. Only works for chains less than 5 residues. Designed to make loops look within .4 RMSD to naturally occuring loops
 </xs:documentation></xs:annotation>
 <xs:attribute name="loopLengthRange" type="xs:string" default="1,4">
  <xs:annotation><xs:documentation xml:lang="en">
   Loops can range from 1 to 5 residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="RMSthreshold" type="real" default="0.4">
  <xs:annotation><xs:documentation xml:lang="en">
   loop must be within 0.4 angsrom to a pdb in the VALL
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resAdjustmentRangeSide1" type="xs:string" default="-3,3">
  <xs:annotation><xs:documentation xml:lang="en">
   residue adjustment applied before the loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resAdjustmentRangeSide2" type="xs:string" default="-3,3">
  <xs:annotation><xs:documentation xml:lang="en">
   residue adjustment applied after the loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resAdjustmentRangeSide1_sheet" type="xs:string" default="-1,1">
  <xs:annotation><xs:documentation xml:lang="en">
   residue adjustment applied before the loop if sheet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resAdjustmentRangeSide2_sheet" type="xs:string" default="-1,1">
  <xs:annotation><xs:documentation xml:lang="en">
   residue adjustment applied after the loop if sheet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_range" type="xs:string" default="1,999999">
  <xs:annotation><xs:documentation xml:lang="en">
   range to fix all loops
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_vdw_change" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   prunes out clashing loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   requires all the bonds to be perfect length and usees kic to perform final closure. Not recomended
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refix_loops" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   refixes all loops in the residue range even if their rms is below the threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allowed_loop_abegos" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma seperated string of allowed abegos, default=empty all abegos
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reject_failed_loops" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   allows the program to crash if the loops can't be fixed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FlexPepDock_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Protocol for docking flexible peptides onto globular proteins.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn_lowres" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function to use for low resolution step.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lowres_abinitio" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Invoke the ab-initio protocol
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lowres_preoptimize" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform a round of centroid mode optimization before high-resolution Refinement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Apply just a minimization step.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="random_phi_psi_pert" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform a random perturbation of all peptide phi-psi angles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extend" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Set all peptide dihedrals to extended state
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="place_peptide" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Place peptide first principle component along the binding site first principle component
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="slideintocontact" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Move partners toward or away from from each other to a contacting orientation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recal_foldtree" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should foldtree be recalculated upon peptide moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pep_refine" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Invoke the refinement protocol
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="peptide_loop_model" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Take a radnom subset of the peptide and send to loop modeling
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_peptide" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Within refinement, design protein facing peptide positions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="backrub_opt" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform optional backrub move on peptide
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="boost_fa_atr" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Gradually ramp down fa_atr from a ramped up value back to default
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_fa_rep" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Gradually ramp up weight on full atom prepulsion term.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_rama" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Gradually ramp up weight on ramachandran scoring term.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extra_scoring" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Scoring only mode
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_receptor_bb" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform the final scoring, w/o constraints for receptor backbone.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ppk_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Just prepacking.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_prepack1" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Don't prepack parter 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_prepack2" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Don't prepack partner 2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_filter" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter for structures under given score_filter value
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hb_filter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter for structures with at least the given numer of hyrogen bonds. As of Aug 2017, this option is still not available
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hotspot_filter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter for structures with at least the given numer of hotspots. As of Aug 2017, this option is still not available
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pSer2Asp_centroid" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Convert all phospho-ser residues to asp in the low-resolution part
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pSer2Glu_centroid" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Convert all phospho-ser residues to glu in the low-resolution part
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="random_phi_psi_pert_size" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Randomly perturb phi-psi of peptide to a given range.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_pc" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of principal components to use when sampling different peptide conformations in pocket
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rep_ramp_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of cycles for which gradual ramping of full-atom repulsion is performed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mcm_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of rigid-body and/or torsions MCM cycles to perform
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rb_trans_size" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of random perturbation of peptide's rigid body translation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rb_rot_size" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of random perturbation of peptide's rigid body rotation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="smove_angle_range" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum angle value used for small and shear moves on the peptide
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FlipChiralityMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Flips the chirality of the specified residues
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   A unique identifier for this instance of the FlipChiralityMover.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="centerx" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   X coordinate of center point
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="centery" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Y coordinate of center point
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="centerz" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Z coordinate of center point
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normalx" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   X coordinate of normal vector
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normaly" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Y coordinate of normal vector
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normalz" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Z coordinate of normal vector
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector specifying residues for which chirality should be flipped. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FlipMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Flips pose in the membrane
 </xs:documentation></xs:annotation>
 <xs:attribute name="jump_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="axisx" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation axis x-coordinate
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="axisy" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation axis y-coordinate
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="axisz" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation axis z-coordinate
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation angle in degrees
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="random_angle" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Random flip angle between 135 and 225 degrees in the membrane
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_angle_dev" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum angle deviation from 180 degrees
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FlxbbDesign_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="sfxn_design" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sfxn_relax" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ncycles" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="layer_mode" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_original_seq" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_trial" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_type" type="xs:string" default="packstat">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_relax" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_design" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clear_all_residues" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constraints_NtoC" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constraints_sheet" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constraints_to_backbone" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movemap_from_blueprint" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fast_relax" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="limit_aroma_chi2" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FoldTreeFromLoops_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Helper mover that looks for loop definitions and sets up the fold tree.
 </xs:documentation></xs:annotation>
 <xs:attribute name="loops" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The format for loops is: Start:End:Cut,Start:End:Cut... RosettaResnum or PDB Numbering accepted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_cp_variants" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Add cutpoint variants used by the Chainbreak energy term? default false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FoldTreeFromMotif_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Helper mover that looks for motif definitions and sets up the fold tree.
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   ResidueSelector that defines the motif region. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="colon_sep_respair_cslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="([0-9]+|[0-9]+[A-Za-z]|refpose(.*,[0-9]+)|refpose(.*,[0-9]+)[+\-][0-9]+):([0-9]+|[0-9]+[A-Za-z]|refpose(.*,[0-9]+)|refpose(.*,[0-9]+)[+\-][0-9]+)(,([0-9]+|[0-9]+[A-Za-z]|refpose(.*,[0-9]+)|refpose(.*,[0-9]+)[+\-][0-9]+):([0-9]+|[0-9]+[A-Za-z]|refpose(.*,[0-9]+)|refpose(.*,[0-9]+)[+\-][0-9]+))*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_ForceDisulfides_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Set a list of cysteine pairs to form disulfides and repack their surroundings. Useful for cases where the disulfides aren't recognized by Rosetta. By default the specified disulfides will be added to the existing set of disulfides.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disulfides" type="colon_sep_respair_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   For instance: 23A:88A,22B:91B. Can also take regular Rosetta (aka Pose) numbering as in: 24:88,23:91.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_existing" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Remove all existing disulfides before applying the new ones.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Repack residues around the added/removed disulfides?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="frag_type_name">
 <xs:restriction base="xs:string">
  <xs:enumeration value="classic"/>
  <xs:enumeration value="smooth"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_FragmentCM_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Fragment Claim Mover performs fragment insertion on a specified region of the pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="fragments" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to fragment file to use in this mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nfrags" type="non_negative_integer" default="25">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of fragments per position.The number of 3mers or 9mers can be specified using the command line.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="frag_type" type="frag_type_name" default="classic">
  <xs:annotation><xs:documentation xml:lang="en">
   Should classic or smooth fragment insertion be performed?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initialize" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the mover insert a fragment at every position after brokering is complete?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector which region this claim mover will be applied to
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="FragExt_subelement_FragmentsType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Name of the fragment file
 </xs:documentation></xs:annotation>
 <xs:attribute name="fragfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the fragment file
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FragmentExtension_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This is XML that calls RosettaES (aka the loop grower)
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Fragments" type="FragExt_subelement_FragmentsType"/>
 </xs:choice>
 <xs:attribute name="fasta" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the fasta file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="beamwidth" type="non_negative_integer" default="32">
  <xs:annotation><xs:documentation xml:lang="en">
   Controls the maximize size of the beam search
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fragtrials" type="non_negative_integer" default="200">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum number of fragments to apply at each extension.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debug" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Triggers all the debuging options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chainbreak" type="real" default="1.5">
  <xs:annotation><xs:documentation xml:lang="en">
   The weight on the chainbreak term when closing the loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="continuous_weight" type="real" default="0.3">
  <xs:annotation><xs:documentation xml:lang="en">
   The weight on the non-continuous density penalty
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rms_cutoff" type="real" default="1.5">
  <xs:annotation><xs:documentation xml:lang="en">
   The rms cutoff for two structures to be considered different
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fragcluster" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The torsional RMS for two fragments to be considered different. Default doesn't filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="masterbeamcutoff" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The RMS different for two structures to be considered in a different path
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sheetbonus" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   The percentage of the score to add for the sampled sheets that fit the density
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sheet_tolerance" type="real" default="0.7">
  <xs:annotation><xs:documentation xml:lang="en">
   How good do the sheets need to be in order to be accepted
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_scale" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Scales down the side chain density score
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="windowdensweight" type="real" default="30">
  <xs:annotation><xs:documentation xml:lang="en">
   Density weight on the windowdens
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="masterbeamwidth" type="non_negative_integer" default="200">
  <xs:annotation><xs:documentation xml:lang="en">
   Cap on the number of beams within a cluster
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmswindow" type="real" default="20">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of residues to include in the 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmscutoff" type="real" default="1.5">
  <xs:annotation><xs:documentation xml:lang="en">
   How close two conformations must be to be considered identical
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="steps" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of steps to take before exiting.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pcount" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The tag for the parallelcount. Purely used for managing jobs through the python script
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sheetcriteria" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   The strategy to use for deciding whether or not to grow sheets
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="comparatorrounds" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of models to produce with the loop comparator
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="beamscorecutoff" type="real" default="0.85">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of models to produce with the loop comparator
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_min_cycles" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of cycles of packing and minimization to use in full atom mode
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dumpbeam" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Dump the structures after filtering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dumperrors" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Dump the poses when the beam deviates from the native
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dumpfinalbeam" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Dump the poses after the last step
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dumprms" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Dumps the rms of the beam for debugging purposes
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dumpfragments" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Writes the fragments as a fragfile after picking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="direction" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Which side of the missing segment to start growing from.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Whether or not to minimize the structures
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nativegrow" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the native structure as a fragment when growing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="parametercheck" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Uses the native structures to figure out what the settings would need to be to capture the native
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cenrot" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the cenrot representation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="writebeams" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Writes 'beamfiles' used in parallelization through python
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="readbeams" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Reads the beams from the file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clustercheck" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Dumps all the structures in the neighborhood of the native for debugging
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rescorebeams" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Rescores all the beams in the beamfile. Useful when testing score functions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="writelps" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Writes an lps file when the loop is finished that can be input for the monte carlo assembler
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fafilter" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Rescores the top 2N structures with the full atom representation before filtering down to N.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="famin" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Toggles minimization in full atom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="samplesheets" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Toggles the sheet sampler
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trackfragments" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep order of fragments instead of shuffling (useful only for debugging)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filterprevious" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter against the beams in the filterbeams file. Used in taboo search
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rephasemap" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Triggers rephasing of the map when working with xray data, currently distabled
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checksymm" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Checks all the symmetric versions of the connecting segments to see if an alternative is a better match
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="asymmdump" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If pose is symmetric, when filtering results dump only the asymmetric unit
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="continuous_sheets" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Toggles a one time vs maintained bonus for the sheets
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="auto_stop" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Toggles autostoping when running out of density. Currently unfinished
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="greedy" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Only runs on the loop specificed by the loop order variable
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="read_from_file" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Read the partial models directly from the file and run the monte carlo assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="assign_incomplete" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Have the option to assign no segment to a given peice in the structure when using Monte Carlo Assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="looporder" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Which loop to build. Labelted 1-N from N-C termini
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maxloopsize" type="non_negative_integer" default="8">
  <xs:annotation><xs:documentation xml:lang="en">
   If loop order set to -1 all loops shorter than this will be skipped
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nfrags" type="nnegative_int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of fragments to pick
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fraglens" type="nnegative_int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Fragment Lengths To pick
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fragmelt" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   How overlap of the old fragment to replace at every step. fraglen-fragmelt = # of new residues added
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minmelt" type="non_negative_integer" default="15">
  <xs:annotation><xs:documentation xml:lang="en">
   How overlap of the old fragment to replace at every step
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="storedbeams" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the file containing the input beams
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filterbeams" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the file containing the beams just used in filtering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="coordfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the file with coordinates and score weights, currently not fully developed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skeletonfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the skeleton density map
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Full Atom Scorefunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="censcorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Centroid Scorefunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cenrotscorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction for use with cenrot. This is typically not used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FragmentJumpCM_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Inserts strand-strand rigid body translations into jumps between predicted adjacent beta strands.
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector specifying region where this mover will be applied. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="topol_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File specifying topology for the pose. If not provided, must specify ss_info, pairing_file, and n_sheets
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss_info" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File containing secondary structure information for the pose. Incompatible with topol_file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pairing_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File containing info on secondary structure pairing for the pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_sheets" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of beta sheets
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="random_sheets" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should beta sheets be built randomly?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restart_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do not reset the topology for this pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initialize" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Apply FragmentJumpCM after brokering is complete?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Unique name for this client mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_FragmentLoopInserter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="loop_anchor" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Loop anchor residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_rms" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum rmsd of flanking regions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="chain_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="[ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$.?\]{}|\-_\\~=%zyxwvutsrqponmlkjihgfedcba]*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_FusePosesNtoCMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="fuse_pose" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chains" type="chain_string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nterm_span" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cterm_span" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="superpose_window" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_window" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_number_allowed_clashes" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hardsphere_clash_limit" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_allowed_rms" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debugmode" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="GALigandDock_subelement_StageType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Per-stage parameters
 </xs:documentation></xs:annotation>
 <xs:attribute name="repeats" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   number of generations in this stage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="npool" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   pool size in this stage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="smoothing" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Grid smoothing in this stage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="elec_scale" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Scale of elec and hbond terms at this stage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pmut" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling frequency weight for this template
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rb_maxrank" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   superimpose sampled pose to motifs of topN parent structures
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsdthreshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   symmdef file associated with this template (only if using symmetry)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_schedule" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma-seprated list of chains to randomize - not documented
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maxiter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   maxiter for minimizer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   pack for (N x #res) cycles
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GALigandDock_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover runs ligand docking using a GA (with gridded scoring) to optimize ligand-protein interaction energies.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Stage" type="GALigandDock_subelement_StageType"/>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   weights file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_relax" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   weights file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="runmode" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   run mode [dock/dockPH/refine/optligand]
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="altcrossover" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use alternate xover.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_ring_conformers" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow ring conformer sampling if defined in params.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rotprob" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   max cumulative rotamer probability
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rotEcut" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   rotamer 1b energy
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ligand" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   ligand residue id (if not specified default to last residue)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nativepdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of native pdb
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="favor_native" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   give a bonus score to the input rotamer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_ligand_backbone" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Set whether we're ignoring the backbone atoms in the ligand.  True by default; probably want to set this to false if you're docking a single amino acid or polymer residue rather than a ligand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimize_input_H" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   do not optimize H at the begining (which is used for grid construction)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grid_step" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Grid step (A) for grid-based scoring
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="padding" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Padding (A) step for grid-based scoring
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hashsize" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Width of hash bins (A)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="subhash" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   When scanning gridspace, subhash to this level
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nrelax" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Num. structs to run final minimize
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nreport" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Num. structs to report
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_exact_minimize" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize the Genes by exact score after GA.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartmin_lig" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Cartmin ligand-only before and after final relax
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="premin_ligand" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Cartmin ligand-only at the beginning
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_neighbor" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If cartmin is enabled, also cartmin SCs before and after final relax.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="full_repack_before_finalmin" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Full repack before final relax.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_solvate" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Solvate pose (via ExplicitWaterMover) in final optimize. Default: false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fastrelax_script" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   FastRelax script file for exact minimize.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="move_water" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Move water at final relaxation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="redefine_flexscs_at_relax" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Redefine movable residues at final relaxation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exact" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use exact scoring.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debug" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Debug grid scoring: report both exact and grid scores.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_pharmacophore" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use pharmacophore info at initial pool generation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initial_pool" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Include these structures in the initial pool.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="multiple_ligands" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scan ligands with these residue types.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="multiple_ligands_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scan ligands with these residue types in a text file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="random_oversample" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   scale factor to ntrial of initial random pool generation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_oversample" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   scale factor to ntrial of initial reference pool generation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_pool" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Use this structures as _references_ to generate the initial pool.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_frac" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If reference pool is provided, the fraction of structures from the reference pool.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_frac_auto" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Select Nstruct to sample by reference automatically
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sidechains" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Sidechains to move: none, auto, or residue IDs.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="frozen_scs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Sidechains to freeze: list of residue IDs.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_edge_buffer" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Scaling factor of maxdistance when deciding to include sc as movable
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fa_rep_grid" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Repulsion weight at grid scoring stage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grid_bound_penalty" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Penalty factor when ligand atm gets out of boundary
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="estimate_dG" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Estimate dG of binding on lowest-energy docked pose. Default: false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_mean_maxRad" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use mean maxRad for multi ligands? Default: false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stdev_multiplier" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Standard deviation multiplier for mean_maxRad. Default: 1.0
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ngen" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   number of generations
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="npool" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   (default) pool size
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pmut" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   (default) probability of mutation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="smoothing" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   (default) grid smoothing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsdthreshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   (default) RMSD threshold between pool structures
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_schedule" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   (default) During minimization, ramp fa_rep according to this schedule
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maxiter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   (default) maxiter for minimizer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   (default) pack for (N x #res) cycles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GenMeanFieldMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Run mean-field on pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="lambda_memory" type="xs:decimal" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Used in updating the original mean-field matrix to decrease oscillation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tolerance" type="xs:decimal" default="0.0001">
  <xs:annotation><xs:documentation xml:lang="en">
   Tolerance used to determine if convergence is achieved.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="xs:decimal" default="0.8">
  <xs:annotation><xs:documentation xml:lang="en">
   kT used in Boltzmann weighting.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="init_option" type="xs:decimal" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Determines initial values of mean-field matrix. A value of 1 forces initial values of 1/nrot and a value of 0 forces initial values of 0.  This has not been tested with a value of 0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="xs:decimal" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold for truncation of energy matrix values.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="unbound" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Unbind protein from substrate before running?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="genkic_selector_name">
 <xs:restriction base="xs:string">
  <xs:enumeration value="no_selector"/>
  <xs:enumeration value="random_selector"/>
  <xs:enumeration value="lowest_energy_selector"/>
  <xs:enumeration value="boltzmann_energy_selector"/>
  <xs:enumeration value="lowest_rmsd_selector"/>
  <xs:enumeration value="lowest_delta_torsion_selector"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="genkic_perturber_name">
 <xs:restriction base="xs:string">
  <xs:enumeration value="set_dihedral"/>
  <xs:enumeration value="set_bondangle"/>
  <xs:enumeration value="set_bondlength"/>
  <xs:enumeration value="set_backbone_bin"/>
  <xs:enumeration value="randomize_dihedral"/>
  <xs:enumeration value="randomize_alpha_backbone_by_rama"/>
  <xs:enumeration value="randomize_backbone_by_rama_prepro"/>
  <xs:enumeration value="randomize_backbone_by_bins"/>
  <xs:enumeration value="perturb_bondlength"/>
  <xs:enumeration value="perturb_bondangle"/>
  <xs:enumeration value="perturb_dihedral"/>
  <xs:enumeration value="perturb_dihedral_bbg"/>
  <xs:enumeration value="perturb_backbone_by_bins"/>
  <xs:enumeration value="copy_backbone_dihedrals"/>
  <xs:enumeration value="mirror_backbone_dihedrals"/>
  <xs:enumeration value="sample_cis_peptide_bond"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="genkic_filter_name">
 <xs:restriction base="xs:string">
  <xs:enumeration value="no_filter"/>
  <xs:enumeration value="loop_bump_check"/>
  <xs:enumeration value="atom_pair_distance"/>
  <xs:enumeration value="backbone_bin"/>
  <xs:enumeration value="alpha_aa_rama_check"/>
  <xs:enumeration value="rama_prepro_check"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="gen_kic_subelement_AddResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  "AddResidue" sub-tags are used to specify the residues that make up the chain of atoms to be closed, in order of connectivity.
 </xs:documentation></xs:annotation>
 <xs:attribute name="res_index" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The "res_index" option within an "AddResidue" sub-tag specifies the index, in Rosetta numbering, of the residue being added to the chain of residues to be closed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_subelement_AddTailResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Loops to be closed might have other chains of residues attached to them.  By default, GeneralizedKIC fails to respect covalent bonds to any but the end residues in the chain to be closed, and can tear these bonds apart as residues move.  Users can optionally specify a list of "tail" residues that are covalently attached to, and move with, the chain of residues to be closed.  For example, one might have a series of glycans attached to a serine residue in a protein loop that's being closed with GenKIC.  If these residues are specified as tail residues, then they will remain attached to the serine residue even as the loop that contains the serine residue moves.
 </xs:documentation></xs:annotation>
 <xs:attribute name="res_index" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The "res_index" option within an "AddTailResidue" sub-tag specifies the index, in Rosetta numbering, of the residue being added to the chain of residues constituting a "tail" that is intended to move with the chain to be closed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_subelement_SetPivots_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Pivots are atoms in the chain of atoms to be closed that are flanked by bonds whose dihedral values will be solved for analytically by the closure algorithm in order to close the loop. Currently, due to hard-coded assumptions in the kinematic closure numerical library, the first pivot must be the second atom in the chain to be closed, and the last pivot must be the second-to-last atom in the chain to be closed.
 </xs:documentation></xs:annotation>
 <xs:attribute name="res1" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The first pivot residue (by Rosetta index). Currently, due to hard-coded assumptions in the kinematic closure numerical library, the first pivot must be the second atom in the chain to be closed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom1" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The first pivot atom (by atom name). Currently, due to hard-coded assumptions in the kinematic closure numerical library, the first pivot must be the second atom in the chain to be closed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The middle pivot residue (by Rosetta index).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom2" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The middle pivot atom (by atom name).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res3" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The last pivot residue (by Rosetta index). Currently, due to hard-coded assumptions in the kinematic closure numerical library, the last pivot must be the second-to-last atom in the chain to be closed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom3" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The last pivot atom (by atom name). Currently, due to hard-coded assumptions in the kinematic closure numerical library, the last pivot must be the second-to-last atom in the chain to be closed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_sample_cis_subelement_AddResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  "AddResidue" sub-sub-tags are used within a "SampleCisPeptideBond" sub-tag to list all of the residues at which cis-peptide bonds should be sampled.
 </xs:documentation></xs:annotation>
 <xs:attribute name="index" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The index, in Rosetta numbering, of a residue whose omega value should sample 0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_subelement_SampleCisPeptideBond_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A "SampleCisPeptideBond" sub-tag is a shorthand for adding a sample_cis_peptide_bond GeneralizedKICperturber.  It tells the GeneralizedKIC mover to sample a cis-peptide bond at a particular residue some subset of the time.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="AddResidue" type="gen_kic_sample_cis_subelement_AddResidue_type"/>
 </xs:choice>
 <xs:attribute name="cis_prob" type="real" default="0.1">
  <xs:annotation><xs:documentation xml:lang="en">
   The probability of sampling a cis-peptide bond at a given position, where 1.0 means that cis is sampled 100% of the time, and 0.0 means that trans is sampled 100% of the time.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_subelement_CloseBond_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A "CloseBond" sub-tag is a shorthand for set_bondangle and set_bondlength GeneralizedKICperturbers, as well as an optional pair of randomize_dihedral perturbers for the flanking dihedral angles, and an optional set_torsion perturber.  It is intended to be used to set the ideal geometry for an open bond in a loop that GeneralizedKIC should close.
 </xs:documentation></xs:annotation>
 <xs:attribute name="res1" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue (Rosetta numbering) containing the first atom in the bond to be closed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom1" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The first atom (given as an atom name string) in the bond to be closed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue (Rosetta numbering) containing the second atom in the bond to be closed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom2" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The second atom (given as an atom name string) in the bond to be closed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondlength" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The length of the bond to be closed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle1" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The bond angle defined by B1, A1, A2, where A1 and A2 are the atoms in the bond to be closed and B1 is the last atom in the chain to be closed that's prior to the bond to be closed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle2" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The bond angle defined by A1, A2, B2, where A1 and A2 are the atoms in the bond to be closed and B2 is the first atom in the chain to be closed that's past the bond to be closed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="randomize_flanking_torsions" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, bonds flanking the bond to be closed will have their torsion values randomized.  If present, requires "prioratom_res" and "followingatom_res" attributes to be set.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prioratom_res" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The atom preceding the bond to be closed.  This is only required if the "randomize_flanking_torsions" option is used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prioratom" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The atom preceding the bond to be closed.  This is only required if the "randomize_flanking_torsions" option is used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="followingatom_res" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The atom following the bond to be closed.  This is only required if the "randomize_flanking_torsions" option is used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="followingatom" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The atom following the bond to be closed.  This is only required if the "randomize_flanking_torsions" option is used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="torsion" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   An optional torsion value for the bond to be closed.  If not specified, the input value persists.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_add_pert_subelement_AddResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The "AddResidue" sub-sub-tag in an "AddPerturber" sub-tag permits a residue to be defined on which the perturber may act.  Use multiple "AddResidue" tags to define more than one residue.
 </xs:documentation></xs:annotation>
 <xs:attribute name="index" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The index, in Rosetta numbering, of a residue on which this perturber should act.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_add_pert_subelement_AddAtoms_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The "AddAtoms" sub-sub-tag in an "AddPerturber" sub-tag permits one or more atoms to be defined, on which the perturber may act.  A particular type of perturber may take a list of one, two, three, or four atoms, depending on what it acts on.
 </xs:documentation></xs:annotation>
 <xs:attribute name="res1" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue (specified using Rosetta numbering) containing the first atom.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom1" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The first atom, specified as an atom name string.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue (specified using Rosetta numbering) containing the second atom.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The second atom, specified as an atom name string.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res3" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue (specified using Rosetta numbering) containing the third atom.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom3" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The third atom, specified as an atom name string.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res4" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue (specified using Rosetta numbering) containing the fourth atom.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom4" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The fourth atom, specified as an atom name string.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_add_pert_subelement_AddValue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The "AddValue" sub-sub-tag in an "AddPerturber" sub-tag permits a value to be set for those perturbers that take a value.  (An example of this is the "set_dihedral" perturber, which takes a value for the dihedral angle to set.)  Use multiple "AddValue" tags to specify more than one value.
 </xs:documentation></xs:annotation>
 <xs:attribute name="value" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The value to pass to the perturber.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_subelement_AddPerturber_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The "AddPerturber" sub-tag is used to add and configure GeneralizedKICperturbers.  GeneralizedKICperturbers alter the chain to be closed in some way prior to kinematic closure, allowing definition of a desired conformation or conformational sampling. They can only act on the chain to be closed, and have no effect on tail residues or on any other part of the input structure. Perturbers are applied in the order that they are defined. Different perturbers may alter the same degrees of freedom, sequentially.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="AddResidue" type="gen_kic_add_pert_subelement_AddResidue_type"/>
  <xs:element name="AddAtoms" type="gen_kic_add_pert_subelement_AddAtoms_type"/>
  <xs:element name="AddValue" type="gen_kic_add_pert_subelement_AddValue_type"/>
 </xs:choice>
 <xs:attribute name="effect" type="genkic_perturber_name" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the GeneralizedKICperturber (e.g. "perturb_dihedral", "set_bondangle", "randomize_alpha_backbone_by_rama", etc.).  See the Rosetta documentation wiki for a full list of available perturbers.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bin_params_file" type="xs:string" default="ABBA">
  <xs:annotation><xs:documentation xml:lang="en">
   The "randomize_backbone_by_bins" and "perturb_backbone_by_bins" perturbers require a bin definition file, set using this option.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="iterations" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   The "perturb_backbone_by_bins" perturber requires that a number of iterations be set. If the number of iterations is set to 1, only one residue, randomly chosen from the list provided, will have its mainchain torsions perturbed. If it is set higher, the algorithm iteratively picks a residue at random and perturbs it.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="must_switch_bins" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   This option is only used by the "perturb_backbone_by_bins" perturber.  If "must_switch_bins" is set to true, the chosen residue is forced into a different torsion bin; if false, it has some probability of remaining in the same torson bin, in which case its mainchain torsion values will be chosen randomly (in a biased manner, if possible) from within that bin.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bin" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The "set_backbone_bin" perturber draws random mainchain torsion values from a mainchain torsion bin defined in a bin params file.  The "bin" option names the bin from which the torsion values will be drawn.  Required for this perturber only.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="custom_rama_table" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The "randomize_alpha_backbone_by_rama" perturber may optionally draw random phi and psi values from one of several custom Ramachandran tables that offer either flattened or more stringent distributions.  These are listed on the Rosetta help wiki.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_add_filter_subelement_AddFilterParameterReal_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  An "AddFilterParameterReal" sub-sub-tag in an "AddFilter" tag sets a real-valued setting for a filter.  For example, the "atom_pair_distance" filter takes a real-valued parameter, called "distance", for the cutoff separation between two atoms used to discard solutions.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the real-valued paramter.  (For example, "distance" for the "atom_pair_distance" filter.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="value" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The value of the real-valued parameter.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_add_filter_subelement_AddFilterParameterInteger_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  An "AddFilterParameterInteger" sub-sub-tag in an "AddFilter" tag sets an integer setting for a filter.  For example, the "atom_pair_distance" filter takes two integer parameters, called "res1" and "res2", for the indices of the two residues containing the two atoms whose separation is to be measured.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the integer parameter.  (For example, "res1" or "res2" for the "atom_pair_distance" filter.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="value" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The value of the integer parameter.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_add_filter_subelement_AddFilterParameterBoolean_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  An "AddFilterParameterBoolean" sub-sub-tag in an "AddFilter" tag sets a Boolean setting for a filter.  For example, the "atom_pair_distance" filter has a Boolean parameter called "greater_than" which, when set to "true" selects for interatomic separation greater than a cutoff rather than less than the cutoff.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the Boolean paramter.  (For example, "greater_than" for the "atom_pair_distance" filter.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="value" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The value ("true" or "false") of the Boolean parameter.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_add_filter_subelement_AddFilterParameterString_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  An "AddFilterParameterString" sub-sub-tag in an "AddFilter" tag sets a string setting for a filter.  For example, the "atom_pair_distance" filter takes two string parameters, called "atom1" and "atom2", for the names of the two atoms whose separation is to be measured.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the string paramter.  (For example, "atom1" or "atom2" for the "atom_pair_distance" filter.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="value" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The value of the string parameter.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_subelement_AddFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  An "AddFilter" sub-tag adds a GeneralizedKICfilter, which discards solutions that do not pass certain criteria.  Generally, GeneralizedKICfilters are written to be considerably faster than conventional Rosetta filters, since they usually do not act on full poses.  They are applied before pre-selection movers.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="AddFilterParameterReal" type="gen_kic_add_filter_subelement_AddFilterParameterReal_type"/>
  <xs:element name="AddFilterParameterInteger" type="gen_kic_add_filter_subelement_AddFilterParameterInteger_type"/>
  <xs:element name="AddFilterParameterBoolean" type="gen_kic_add_filter_subelement_AddFilterParameterBoolean_type"/>
  <xs:element name="AddFilterParameterString" type="gen_kic_add_filter_subelement_AddFilterParameterString_type"/>
 </xs:choice>
 <xs:attribute name="type" type="genkic_filter_name" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the GeneralizedKICfilter to apply (e.g. "backbone_bin", "rama_prepro_check", "atom_pair_distance", etc.).  See the Rosetta help wiki for a full list of avaliable filters.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   A parameter required by several filters, including "backbone_bin", "alpha_aa_rama_check", and "rama_prepro_check": the index, in Rosetta numbering, of the residue that we're examining with this filter.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bin_params_file" type="xs:string" default="ABBA">
  <xs:annotation><xs:documentation xml:lang="en">
   A parameter specific for the "backbone_bin" filter: a filename for a file defining mainchain torsion bins.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bin" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A parameter specific for the "backbone_bin" filter: the mainchain torsion bin in which an amino acid residue must lie.  If the residue is not in this bin, the solution is discarded.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rama_cutoff_energy" type="real" default="0.3">
  <xs:annotation><xs:documentation xml:lang="en">
   A parameter specific for the "alpha_aa_rama_check" and "rama_prepro_check" filters: the value for the rama or rama_prepro score terms above which solutions are discarded.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="gen_kic_subelement_AddAtomPairDistanceFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The "AddAtomPairDistanceFilter" sub-tag is a shorthand for adding an "atom_pair_distance" GeneralizedKICFilter.  It discards solutions if pairs of atoms are separated by more than a cutoff distance.
 </xs:documentation></xs:annotation>
 <xs:attribute name="res1" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue (Rosetta index) containing the first atom in the pair whose separation we will be measuring.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom1" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The first atom in the pair whose separation we will be measuring, specified as an atom name string.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue (Rosetta index) containing the second atom in the pair whose separation we will be measuring.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom2" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The second atom in the pair whose separation we will be measuring, specified as an atom name string.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The cutoff inter-atomic distance for discarding solutions.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="greater_than" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If "greater_than" is set to true, the filter will discard any solution for which the atoms are not separated by AT LEAST the cutoff distance.  If it is false (the default), then any solution for which the atoms are separated by more than the cutoff distance is discarded.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GeneralizedKIC_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The GeneralizedKIC mover allows a user to define a chain of atoms whose conformation is to be sampled or altered subject to the constraint that it remain closed, or that it be closed if it starts out open.  The mover has myriad options for controlling sampling and selection of a solution, and can invoke other movers to apply to each closed solution that it finds.  It has been written to be fully general, and can operate on chains of atoms that pass through backbones, side-chains, ligands, etc.  No assumptions about alpha-amino acid backbones are hard-coded, so GeneralizedKIC should be fully compatible with any non-canonical entity.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="AddResidue" type="gen_kic_subelement_AddResidue_type"/>
  <xs:element name="AddTailResidue" type="gen_kic_subelement_AddTailResidue_type"/>
  <xs:element name="SetPivots" type="gen_kic_subelement_SetPivots_type"/>
  <xs:element name="SampleCisPeptideBond" type="gen_kic_subelement_SampleCisPeptideBond_type"/>
  <xs:element name="CloseBond" type="gen_kic_subelement_CloseBond_type"/>
  <xs:element name="AddPerturber" type="gen_kic_subelement_AddPerturber_type"/>
  <xs:element name="AddFilter" type="gen_kic_subelement_AddFilter_type"/>
  <xs:element name="AddAtomPairDistanceFilter" type="gen_kic_subelement_AddAtomPairDistanceFilter_type"/>
 </xs:choice>
 <xs:attribute name="low_memory_mode" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   The low_memory_mode option can be used to limit the amount of information about each solution found that is stored, in order to reduce memory consumption. In this mode, only loop degree-of-freedom values are stored prior to selection. The drawback, however, is it can be risk to use low-memory mode with a preselection mover. Any changes to the pose made by the preselection mover will not be stored, so the preselection mover will have to be re-applied to the selected pose after selection. This costs additional time. In addition, if the preselection mover has any stochastic component to its behaviour, then the second application may not produce identical results to the first. This means that what might have been the lowest-energy pose when the preselection mover was first applied could now be a relatively high-energy pose, for example. For this reason, be judicious in the use of low-memory mode. The preferred course is to stop GenKIC when N solutions have been found to limit memory usage.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="correct_polymer_dependent_atoms" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to true, atoms whose positions are dependent on polymer bonds, such as amino acid "H" and "O" atoms, will have their positions set to ideal coordinates after closure.  False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dont_fail_if_no_solution_found" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   By default, the GeneralizedKIC mover returns failure status if it fails to find a closed solution that passes filters.  Certain usage cases require that it does not fail.  If this option is set to true, it prevents GeneralizedKIC from returning a failure status, even if it finds no solution (in which case the input pose, which may have an open chain of atoms, is returned as the output pose).  This is necessary, for example, when GeneralizedKIC is used in conjunction with a ContingentFilter.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selector" type="genkic_selector_name" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The GeneralizedKICselector to use to pick a solution.  Solutions may be picked randomly ("random_selector"), by energy ("lowest_energy_selector"), or by other criteria.  See the Rosetta help wiki for more information on GeneralizedKICselectors, and for the full range of options.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selector_scorefunction" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A scorefunction that the GeneralizedKICselector will use to select the solution to return.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selector_kbt" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If the GeneralizedKICselector is set to "boltzmann_energy_selector", this is the Boltzmann temperature used when selecting a solution randomly, weighted by the Boltzmann probability of that solution.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_if_no_solution" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If this option is used and set to a positive integer N, GeneralizedKIC stops looking for closure solutions if no solution was found in the first N attempts.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="closure_attempts" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum number of times to try to find a solution.  Set this to zero to keep trying indefinitely (in which case the "stop_when_n_solutions_found" option should be used to prevent the mover from iterating forever).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_when_n_solutions_found" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   If this option is used and set to a positive integer N, GeneralizedKIC will stop looking for closure solutions as soon as at least N solutions have been found that pass filters.  Note that a GeneralizedKICselector must be specified even if this option is set to 1, because a single attempt can yield up to 16 solutions.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pre_selection_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   As an optional alternative to restricting oneself to backbone-only score terms, GeneralizedKIC permits the user to specify a pre-selection mover defined prior to the GeneralizedKIC block. This permits side-chain moves, such as repacking or side-chain minimization, prior to scoring with the full energy function. Note that this mover will be applied to all candidate solutions passing filters, which makes this option potentially very computationally expensive!
If a pre-selection mover is specified, the mover may alter geometry outside of the loop to be closed, or may alter the FoldTree, in which case these alterations will carry through to the final pose returned by GeneralizedKIC. TaskOperations and MoveMaps may be used appropriately in the definition of the mover in question to restrict its effects to the loop on which GeneralizedKIC is operating if the user does not wish to alter geometry outside of this loop. If one wishes to apply more than one pre-selection mover (for example, a PackRotamersMover followed by a sidechain-only MinMover, to repack and minimize side-chains), they may be combined in a ParsedProtocol mover.
As a final note, a mover may return failure status, or may encapsulate filters that return failure status, in which case the solution to which the mover has been applied will be discarded.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="contingent_filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
    A ContingentFilter can also be used to record whether the mover failed. The ContingentFilter is a specialized filter that has its value set by a mover. GeneralizedKIC can set the value of a ContingentFilter, specified using the contingent_filter flag, to true or false depending on whether the closure was successful or unsuccessful. Subsequent application of the filter, possibly at a later point, can then abort trajectories involving unsuccessful loop closure.  Note that this is a largely deprecated feature that has been retained since a few users have found it useful in some cases; for most usage cases, one can simply rely on the fact that the mover returns failure status if no closed solution is found.  It will likely be necessary to use the "dont_fail_if_no_solution_found" option if a ContingentFilter is used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GenericMonteCarlo_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Allows sampling structures by MonteCarlo with a mover. The score evaluation of pose during MC are done by Filters that can do report_sm(), not only ScoreFunctions
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Filters" type="generic_monte_carlo_Filters_type"/>
 </xs:choice>
 <xs:attribute name="trials" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of trials in a GenericMonteCarlo run. Will be automatically calculated when a task is included. See task_scaling for more information. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature value which affects the acceptance of new solutions according to the MC criterion
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_scaling" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   If a task is included, the number of designable residues will be calculated and the number of trials will be automatically set as task_scaling * (number designable residues). For example, if there are 10 designable residues and task_scaling is 5 (the default) the number of trials will be 50.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="adaptive_movers" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If the mover you call or a submover of that mover is of type ParsedProtocol with mode single-random, then GenericMonteCarlo can 'learn' the best sampling strategy by adapting the apply probabilities of individual movers within that ParsedProtocol. For each adaptation period (say 20 mover applies) the number of accepts of each submover is recorded (with pseudocounts of 1 for each mover) and during the next adaptation period the apply probabilities of the submovers in the ParsedProtocol are adjusted according in proportion to the acceptance probabilities of the previous stage. Due to the pseudocounts, all movers have at least some chance of being called.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="adaptation_period" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   goes together with adaptive_movers, defined above. Defaults to max( max_trials/10, 10 ) but can be set to any integer.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover to be used for sampling.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_name" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   Single filter case. See Filters subcategory for applying multiple filters.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="adaptive" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If the mover you call or a submover of that mover is of type ParsedProtocol with mode single-random, then GenericMonteCarlo can 'learn' the best sampling strategy by adapting the apply probabilities of individual movers within that ParsedProtocol. For each adaptation period (say 20 mover applies) the number of 'accepts of each submover is recorded (with pseudocounts of 1 for each mover) and during the next adaptation period the apply probabilities of the submovers in the ParsedProtocol are adjusted according in proportion to the acceptance probabilities of the previous stage. Due to the pseudocounts, all movers have at least some chance of being called.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_type" type="xs:string" default="low">
  <xs:annotation><xs:documentation xml:lang="en">
   low - MC samples by minimizing the structure score (REU: the more negative the better); high - MC samples by maximizing the structure score
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   As alternative to scoring by filters (See Filters subcategory), structures may be scored by a given scoring function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stopping_condition" type="xs:string" default="false_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   stops before trials are done if a filter evaluates to true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="drift" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   true - the state of the pose at the end of the previous iteration will be the starting state for the next iteration; false - the state of the pose at the start of each iteration will be reset to the state when the mover is first called ( Of course, this is not MC ).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="preapply" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   true - Automatically accept the first application of the sub-mover, ignoring the Boltzmann criterion. false - apply Boltzmann accept/reject to all applications of the mover. Though defaulting to true for historical reasons, it is highly recommended to set this to false unless you know you need it to be true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recover_low" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   true - at the end of application, the pose is set to the lowest (or highest if sample_type="high") scoring pose; false - the pose after apply completes is the last accepted pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bolz_rank" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with multiple filters. If no sub-filters are set with rank=1, the first filter is used for ranking. As a special case, if boltz_rank is set to true, the ranking score is a temperature-weighted sum of all filter values. (This value is equivalent to the effective value optimized by the MC protocol.) This boltz_rank score is computed by the equation SUM( multiplier * filter_value / filter_temperature ) over all filter values, where filter_value is the value returned by the filter and multiplier is 1 if the filter sample_type is low and -1 if the filter sample_type is high.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="saved_accept_file_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   save the most recent accepted structure in a temporary PDB? This allows recovery by checkpointing. Note that different processes would need to work from different directories or somehow control the checkpointing file name, else confusion will reign.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_accepted_trials" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum number of accepted trials. If not set max_accepted_trials=trials
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="saved_trial_number_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Checkpointing file for the current trial number. Allows the mover to recover after failure.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_tag" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   this is used by the called movers to set a certain tag. If saved_accept_file_name_ is set, then at exit the tag coming from the chosen mover is written to disk as, {saved_accept_file_name}.mover_tag. To work, mover_tag_ must be exposed to the movers being called.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reset_baselines" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If the filter is of type Sigmoid/Operator/CompoundStatement, look for all subfilters of type Sigmoid and reset their baseline to the pose's current filter evaluation at trial=1. Useful in cases where you want to set the thresholds relative to the pose's evaluation at the start of the MC trajectory.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="progress_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If specified opens a file in which each trial's outcome is reported (trial number, accept/reject, filter value, and pose sequence). Useful to monitor progress in MC
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GenericSimulatedAnnealer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs a simulated annealing simulation (so, a temperature schedule) instead of merely generic Monte Carlo, as does its parent class the GenericMonteCarloMover
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Filters" type="generic_monte_carlo_Filters_type"/>
 </xs:choice>
 <xs:attribute name="trials" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of trials in a GenericMonteCarlo run. Will be automatically calculated when a task is included. See task_scaling for more information. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature value which affects the acceptance of new solutions according to the MC criterion
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_scaling" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   If a task is included, the number of designable residues will be calculated and the number of trials will be automatically set as task_scaling * (number designable residues). For example, if there are 10 designable residues and task_scaling is 5 (the default) the number of trials will be 50.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="adaptive_movers" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If the mover you call or a submover of that mover is of type ParsedProtocol with mode single-random, then GenericMonteCarlo can 'learn' the best sampling strategy by adapting the apply probabilities of individual movers within that ParsedProtocol. For each adaptation period (say 20 mover applies) the number of accepts of each submover is recorded (with pseudocounts of 1 for each mover) and during the next adaptation period the apply probabilities of the submovers in the ParsedProtocol are adjusted according in proportion to the acceptance probabilities of the previous stage. Due to the pseudocounts, all movers have at least some chance of being called.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="adaptation_period" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   goes together with adaptive_movers, defined above. Defaults to max( max_trials/10, 10 ) but can be set to any integer.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover to be used for sampling.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_name" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   Single filter case. See Filters subcategory for applying multiple filters.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="adaptive" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If the mover you call or a submover of that mover is of type ParsedProtocol with mode single-random, then GenericMonteCarlo can 'learn' the best sampling strategy by adapting the apply probabilities of individual movers within that ParsedProtocol. For each adaptation period (say 20 mover applies) the number of 'accepts of each submover is recorded (with pseudocounts of 1 for each mover) and during the next adaptation period the apply probabilities of the submovers in the ParsedProtocol are adjusted according in proportion to the acceptance probabilities of the previous stage. Due to the pseudocounts, all movers have at least some chance of being called.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_type" type="xs:string" default="low">
  <xs:annotation><xs:documentation xml:lang="en">
   low - MC samples by minimizing the structure score (REU: the more negative the better); high - MC samples by maximizing the structure score
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   As alternative to scoring by filters (See Filters subcategory), structures may be scored by a given scoring function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stopping_condition" type="xs:string" default="false_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   stops before trials are done if a filter evaluates to true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="drift" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   true - the state of the pose at the end of the previous iteration will be the starting state for the next iteration; false - the state of the pose at the start of each iteration will be reset to the state when the mover is first called ( Of course, this is not MC ).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="preapply" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   true - Automatically accept the first application of the sub-mover, ignoring the Boltzmann criterion. false - apply Boltzmann accept/reject to all applications of the mover. Though defaulting to true for historical reasons, it is highly recommended to set this to false unless you know you need it to be true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recover_low" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   true - at the end of application, the pose is set to the lowest (or highest if sample_type="high") scoring pose; false - the pose after apply completes is the last accepted pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bolz_rank" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with multiple filters. If no sub-filters are set with rank=1, the first filter is used for ranking. As a special case, if boltz_rank is set to true, the ranking score is a temperature-weighted sum of all filter values. (This value is equivalent to the effective value optimized by the MC protocol.) This boltz_rank score is computed by the equation SUM( multiplier * filter_value / filter_temperature ) over all filter values, where filter_value is the value returned by the filter and multiplier is 1 if the filter sample_type is low and -1 if the filter sample_type is high.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="saved_accept_file_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   save the most recent accepted structure in a temporary PDB? This allows recovery by checkpointing. Note that different processes would need to work from different directories or somehow control the checkpointing file name, else confusion will reign.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_accepted_trials" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum number of accepted trials. If not set max_accepted_trials=trials
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="saved_trial_number_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Checkpointing file for the current trial number. Allows the mover to recover after failure.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_tag" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   this is used by the called movers to set a certain tag. If saved_accept_file_name_ is set, then at exit the tag coming from the chosen mover is written to disk as, {saved_accept_file_name}.mover_tag. To work, mover_tag_ must be exposed to the movers being called.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reset_baselines" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If the filter is of type Sigmoid/Operator/CompoundStatement, look for all subfilters of type Sigmoid and reset their baseline to the pose's current filter evaluation at trial=1. Useful in cases where you want to set the thresholds relative to the pose's evaluation at the start of the MC trajectory.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="progress_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If specified opens a file in which each trial's outcome is reported (trial number, accept/reject, filter value, and pose sequence). Useful to monitor progress in MC
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="history" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="eval_period" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="periodic_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checkpoint_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_checkpoint_file" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GenericSymmetricSampler_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO: Use to sample more closely around a specified symmetry DOF.
 </xs:documentation></xs:annotation>
 <xs:attribute name="dof_id" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Symmetry DOF number.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_min" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Min angle degrees to sample.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_max" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Max angle degrees to sample.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_step" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Step size to make while sampling angle degrees.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_disp_min" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Min translation in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_disp_max" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Max translation in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_disp_step" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Step size to make while sampling translation in angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="select_max" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO: most positive score to allow?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Manditory mover to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_name" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional filter to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional scorefunction to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GlycanInfoMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
A simple Mover that (currently) prints information about the glycan trees in the pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GlycanSampler_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Authors: Jared Adolf-Bryfogle (jadolfbr@gmail.com) and Jason Labonte (WLabonte@jhu.edu)
Main mover for GlycanTreeModeler, which optimizes glycans in a pose. You probably want to use that instead.Each round optimizes either one residue for BB sampling, linkage, or a [part of a ] branch for minimization and packing.Minimization and packing work by default by selecting a random glycan residue from any set movemap or all of them and then selecting the rest of the downstream branch.  Those residues are then minimized or packed.  Packing includes a neighbor packing shell. Currently uses a random sampler with a set of weights to each mover for sampling.
 </xs:documentation></xs:annotation>
 <xs:attribute name="kt" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature for metropolis criterion
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rounds" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of relax rounds to perform.  Will be multiplied by the number of glycan residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_min" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform a final minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pymol_movie" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Output a PyMOL movie of the run
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refine" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do not start with a random glycan conformation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_distance" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Neighbor distance for packing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartmin" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use Cartesian Minimization instead of Dihedral Minimization during packing steps.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tree_based_min_pack" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use Tree-based minimization and packing instead of minimizing and packing ALL residues each time we min.   Significantly impacts runtime.  If you are seeing crappy structures for a few sugars, turn this off.    This is default-on to decrease runtime for a large number of glycans.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_conformer_probs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the populations of the conformers as probabilities during our linkage conformer sampling.  This makes it harder to overcome energy barriers with more-rare conformers!
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_gaussian_sampling" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Set whether to build conformer torsions using a gaussian of the angle or through uniform sampling  up to 1 SD (default)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_rings" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize Carbohydrate Rings during minimization. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="shear" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the Shear Mover that is now compatible with glycans at an a probability of 10 percent
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="randomize_torsions" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If NOT doing refinement, control whether we randomize torsions at the start,  which helps to achieve low energy structures.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="match_sampling_of_modeler" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Option that matches the amount of sampling in a default GlycanTreeModeler run.   Used for benchmarking.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="inner_bb_cycles" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Inner cycles for each time we call BB sampling either through small/medium/large moves  or through the SugarBB Sampler.  This is multiplied by the number of glycans.   Scales poorly with GlycanModeler.  If 0 (default), we run the protocol normally
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="root_populations_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use population-based sampling for only the linkage between  the amino acid and glycan residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue Selector containing only glycan residues.  This is not needed, as this class will automatically select ALL glycan residues in the pose to model.  See the GlycanResidueSelector and the GlycanLayerSelector for control glycan selection.  Note that the ASN is not  technically a glycan.  Since dihedral angles are defined for a sugar from the upper to lower residue, the dihedral angles between the first glycan and the ASN are defined by the first glycan. . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GlycanTreeMinMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
 A class that selects the downstream branch from residues in a movemap/selector, and minimizes those residues if on in the primary glycan movemap. Multiple Applies randomly select a different residue in the movemap/selector
 </xs:documentation></xs:annotation>
 <xs:attribute name="min_rings" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize Ring Torsions?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_bb" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize the Backbone?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_chi" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize the Chi angles?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GlycanTreeModeler_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Brief: A protocol for optimizing glycan trees using the GlycanSampler by  computationally growing glycans from the roots out to the trees.

It is recommended to use this modeling algorithm in conjunction with the -beta scorefunction,  as this was shown to work best for modeling glycans.
QUECHING

By default, we model all glycans simultaneously.  First, all glycan roots (the start of the tree), and slowly unvirtualize 
all glycan residues, while only modeling each layer. 
Alternatively, we can choose a particular glycan tree, run the algorithm,  and then choose another glycan tree randomly until all 
glycan trees have been optimized. 
Here, we call this quenching. 

GLYCAN LAYERS 

Draw a tree on a paper.  We start with the beginning N residues, and work our way out towards the leaves. 
Layers are defined by the glycan residue distance to the rooot.   This enables branching residues to be considered the same 
layer conceptually and computationally, and allows them to be modeled together. 

--Residue Selection-- 

 You do not need a ResidueSelector passed in.  It will select all glycan residues automatically.
 However, if you do, you must only pass in glycan residues.   See the GlycanResidueSelector and the GlycanLayerSelector  for a very easy way to select specific glycan trees and residues. 
 </xs:documentation></xs:annotation>
 <xs:attribute name="refine" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do a refinement instead of a denovo model. This means NO randomization at the start of the protocol and modeling is done  in the context of the full glycan tree instead of using virtual (non-scored) residues during tree growth
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="glycan_sampler_rounds" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Round Number for the internal the GlycanSampler.   Default is the default of the GlycanSampler.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="quench_mode" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do quench mode for each glycan tree? Quench means model each individual glycan tree instead of all at once.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="layer_size" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Brief: Set the layer size we will be using.  A layer is a set of glycan residues that we will be optimizing.
  Current benchmarked protocol is set to 1.  Only change this for benchmarking. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="window_size" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Brief: Set the window size.  This is the overlap of the layers during modeling. 
 Current benchmarked protocol is set to 0.  Only change this for benchmarking.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rounds" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Current protocol is set to 1.  Rounds currently are directional, with every even round going backward.  Only change this for benchmarking.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_conformer_probs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use conformer probabilities instead of doing uniform sampling
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_gaussian_sampling" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Set whether to build conformer torsions using a gaussian of the angle or through uniform sampling up to 1 SD (default)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="force_virts_for_refinement" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Refinement now models layersin the context of the full glycan tree.
 Turn this option on to use non-scored residues (virtuals) at the ends of the tree that are not being modeled.
  This is how the de-novo protocol works.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="idealize" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Attempt to idealize the bond lengths/angles of glycan residues being modeled
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_min_pack_min" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Do a final set of cycles of min/pack
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_rings" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize Carbohydrate Rings during minimization. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartmin" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use Cartesian Minimization instead of Dihedral Minimization during packing steps.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hybrid_protocol" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Set to use a protocol where we build out the glycans, but re-model the full tree during the building process
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="shear" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the Shear Mover that is now compatible with glycans at an a probability of 10 percent
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="match_window_one" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Matches the number of rounds per layer with that of using a window of 1.  This is how all protocols were benchmarked.  Leave this on.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="root_populations_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use population-based sampling for only the linkage between the amino acid and glycan residue. Sounds nice, benchmarking showed this is only good for common glycans
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="kt" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Override the GlycanSampler kT (which defaults to 2.0)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue Selector containing only glycan residues.  This is not needed, as this class will automatically select ALL glycan residues in the pose to model.   See the GlycanResidueSelector and the GlycanLayerSelector for control glycan selection.   Note that the ASN is not technically a glycan.  Since dihedral angles are defined for a sugar from the upper to lower residue, the dihedral angles between the first glycan and the ASN are defined by the first glycan. . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GlycosyltransferaseMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Enzymatic mover to glycosylate a pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="species" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the species name of this simulated enzyme.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="enzyme_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the specific name of this simulated enzyme.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="efficiency" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Directly set the efficiency of this enzyme, ignoring whatever is in the database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perform_major_reaction_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Set this EnzymaticMover to perform only its major reaction.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perform_all_reactions" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow this EnzymaticMover to be promiscuous, performing a random transfer from among its possible co-substrates.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GraftSwitchMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Grafts a functional sequence onto the latch of a LOCKR type protein. Returns all threads where average degree of important residues is greater than the cutoff (defualt=6).  By default will find the c-terminal helix and set all positions as threadable.  Set n_term to true to find n-terminal helix instead.  Set start/end to define a custom range to begin threads.  Set selector to use a residue selector to define threadable residues and Rosetta will determine which positions can fit your sequence.
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue Selector defining residues that can be threaded onto.  Overrides default behavior and start/end if defined. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number defining the start of the threadable residue range.  Must be defined with 'end'. Overrides default behavior.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number to end the range of residues to allow threading.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_term" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Default behaivor without setting start/end or selector is to find the c-terminal helix and set all positions designable.  Set to true if latch is on the n-terminus instead.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="any_order" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   With multiple sequences, set to false if you want to maintain the order of sequences you've defined.  Useful if you need one seq closer to one terminus than the other.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_neighbors" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Set to false if you do not want neighboring residues to repack during threading
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="graft_on_latch_loop" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Set to false if you do not want the loop between the cage/latch to be threaded
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sequence" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma separated list of sequences to thread. A '-' indicates a gap where NATAA will be default
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="important_residues" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of residue numbers (1 corresponding to first residue in 'sequence') that must be buried/caged. Separate important residues for separate sequences with a '/' in order listed for the 'sequences' tag
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="burial_cutoff" type="real" default="6">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of neighboring residues that determines extent of burial
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_min" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Do a final minimization and pack neighbors after threading
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="choices_for_sample_types">
 <xs:restriction base="xs:string">
  <xs:enumeration value="low"/>
  <xs:enumeration value="high"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="greedy_opt_subelement_Filters_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  These are the names of the filters being input into GreedyOptMutationMover.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="AND">
   <xs:complexType mixed="true">
    <xs:attribute name="filter_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of the filter you want to apply. Load multiple filters from branch tags.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="sample_type" type="choices_for_sample_types" default="low">
     <xs:annotation><xs:documentation xml:lang="en">
      If your filter values are such that higher = better, use 'sample_type=high'
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="filter_delta" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Add sequence diversity; useful with nstruct greater than 1; randomly try any mutation that scores within N filter points of the best-scoring mutation at each position instead of just the first, e.g. filter_delta=0.5 for attempting any mutation within 0.5 filter points of the best one.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
</xs:complexType>

<xs:complexType name="greedy_opt_subelement_Filter_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  These are the attributes of a single filter being optimized.
 </xs:documentation></xs:annotation>
 <xs:attribute name="filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a single filter you wish you process.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_type" type="choices_for_sample_types" default="low">
  <xs:annotation><xs:documentation xml:lang="en">
   If your filter values are such that higher = better, use 'sample_type=high'
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_delta" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Add sequence diversity; useful with nstruct greater than 1; randomly try any mutation that scores wit     hin N filter points of the best-scoring mutation at each position instead of just the first, e.g. filter_delta=0.5 for attempting any mutation within 0.5 filter points of the best one.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GreedyOptMutationMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover will first attempt isolated/independent mutations defined in the input task operation, score/filter them all, rank them by score, then attempt to combine them, starting with the best scoring single mutation, accepting the mutation only if the filter score decreases (see skip_best_check for optional exception), and working down the list to the end. Optionally test one of the top N mutations at each positions instead of just the best.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Filters" type="greedy_opt_subelement_Filters_complex_type"/>
  <xs:element name="Filter" type="greedy_opt_subelement_Filter_complex_type"/>
 </xs:choice>
 <xs:attribute name="relax_mover" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   A mover for post-repacking relaxation (e.g. minimization)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If you want to see a pdb of every trial mutation, add 'dump_pdb=1'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_table" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, will save to a file the table of amino acids/filter values over which it is operating.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="parallel" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Run the point mutation calculator in parallel, use in conjunction with openMPI.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stopping_condition" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Stops before trials are done if a filter evaluates to true (accepting the last mutation that caused the filter to evaluate to true by default. See stop_before_condition to change this behavior).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_shell" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Default is set to -1, so there is no design. Set a positive value to determine the radius of design shell. This might be useful in case of reversion to native where more than one mutation is needed to revert.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The radius around which we repack around each tested/designed mutation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_before_condition" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Default = false. Stop mover once the stopping_condition is reached and do not accept the last mutation (ie, reject the mutation that set the stopping_condition to true).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_best_check" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Default = false. Accept mutations during the combining stage as long as they pass the filter(s), regardless of whether or not the value is the best so far.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rtmin" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do rtmin following repack.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="shuffle_order" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Randomize sequence position order of mutations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="diversify" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Diversify solutions to pareto front calculation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="incl_nonopt" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Default = false. Use with filter_delta. This option modifies filter_delta behavior such that all mutations that score within N filter points of the best are attempted in the combinatorial design stage.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a single filter you wish you process.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_type" type="choices_for_sample_types" default="low">
  <xs:annotation><xs:documentation xml:lang="en">
   If your filter values are such that higher = better, use 'sample_type=high'
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_delta" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Add sequence diversity; useful with nstruct greater than 1; randomly try any mutation that scores wit     hin N filter points of the best-scoring mutation at each position instead of just the first, e.g. filter_delta=0.5 for attempting any mutation within 0.5 filter points of the best one.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GreedyPeptideFoldPropensityOptimization_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover takes as input a pose consisting of or containing a peptide macrocycle, and attempts to introduce mutations in the macrocycle to maximize its fold propensity (based on a Tensorflow neural network-based predicted fold propensity).  The optimization algorithm is a greedy algorithm, in which the top N possible mutations (based on Tensorflow derivatives) are considered, the one that raises the score the most is accepted, and the cycle is repeated until the score does not improve further.  This mover ONLY alters the geometry of the peptide side-chains, not its backbone or any other part of the pose (unless there's a weird foldtree in which some other geometry depends on a side-chain).
 </xs:documentation></xs:annotation>
 <xs:attribute name="peptide_size" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The size of the peptide macrocycle, in residues.  Default 10.  This is used to select the Tensorflow model to load.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="model_version" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The version of the Tensorflow model to load.  Default 3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_types_to_consider" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of possible mutations to consider at each position.  If this is set to 0, all possible mutations are considered.  If it is nonzero, the top N at each position, as ranked by Tensorflow derivatives (destPNear/drestype), will be tried.  Default 0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="do_sidechain_minimization" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, peptide sidechains are minimized whenever a mutation is considered.  False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_iterations" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum number of iterations to attempt before giving up.  Default 100.  Set this to zero to indicate that there is no maximum.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mutation_threads" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of threads to use for considering mutations in parallel.  Note that multi-threading support requires the extras=cxx11thread command to be appended to the scons command when building.  This option is only used in the multi-threaded build.  The default, 0, means to use all threads.  The total number of threads that Rosetta launches is controlled with the -mulithreading:total_threads flag.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_scorefunction_for_optimization" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, then this mover optimizes (minimizes) the weighted sum of the output of the scorefunction provided with optimization_scorefxn and the estimated Gibbs free energy of folding (estimated PNear converted to an energy).  False by default, in which case only the value of PNear is optimized (maximized).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefunction_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If use_scorefunction_for_optimization is true, this sets the weight on the optimization scorefunction in the function to be optimized.  Defaults to 1.0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="estimated_deltaG_of_folding_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If use_scorefunction_for_optimization is true, this sets the weight on the estimated delta-G of folding in the function to be optimized.  Defaults to 1.0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_around_designable" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, then residues near the mutable positions are repacked.  Default true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_around_designable_radius" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The radius around mutable positions within which residues are repacked.  Defaults to 5.0 Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_debug_output_pdbs" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the mover will dump a timestamped PDB for each mutation that it considers.  False by default.  Only intended for debugging, not production runs!
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prohibited_restype_basenames" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of residue type base names.  If provided, mutations to these types will not be considered.  Not used if not provided.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimization_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A scorefunction that will be used during optimization if use_scorefunction_for_optimization is true.  Required input if use_scorefunction_for_optimization is true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packing_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The scorefunction that will be used for packing and sidechain minimization.  If not provided, the default scoring function (which was ref2015 at the time that this mover was written, but which may have changed since) will be used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="peptide_residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue selector to use to select the peptide macrocycle.  If not provided, it will be assumed that the whole pose consists only of the peptide. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue selector to use to select the mutable residues.  If not provided, it will be assumed that all peptide residues are mutable.  Note that, if this selector selects anything outside of the peptide, that part of the selection will be disregarded and will remain fixed. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GrowLigand_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Randomly connects a fragment from the library to the growing ligand.
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain ID.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_GrowPeptides_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Extend a structure by adding new reidues to N or C terminual.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Steal_seq_span">
   <xs:complexType mixed="true">
    <xs:attribute name="begin" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      First residue of a fragment.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Last residue of a fragment.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Seeds">
   <xs:complexType mixed="true">
    <xs:attribute name="begin" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      First residue of a fragment.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Last residue of a fragment.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="anchor" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      Use anchor residue for Seed.Specifies residue nr of anchor residue.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="SeedFoldTree" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use SeedFoldTree to setup fold tree.If "false", the fold tree will be extracted from the input pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ddg_based" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Comput jump atoms based on ddG
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extend_nterm" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Extend peptide N-terminally by n residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extend_cterm" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Extend peptide C-terminally by n residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="all_ala_N" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   N-terminally added amino acids are all ALA
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="all_ala_C" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   C-terminally added amino acids are all ALA
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nseq" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Not used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cseq" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Not used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_centroid" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Ouput the structure in centroid representation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Template pdb to take the sequence from. Required if sequence is nor specified.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sequence" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Sequence for growing peptide. Required if template_pdb is not specified.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_HBNet_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  HBNet is a method to explicitly detect and design hydrogen bond networks within Rosetta. It functions as a mover within the RosettaScripts framework and will exhaustively search for all networks within the design space that you define with TaskOperations
 </xs:documentation></xs:annotation>
 <xs:attribute name="start_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector that tells HBNet which residues to start from (will only search for networks that include these resid. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="core_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector that defines what HBNet considers "core"; used in buriedness determination for unsats; default is layer selector default using sidechain neighbors(core=5.2). The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="boundary_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector to define what HBNet considers boundary during comparisons/scoring of networks. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hb_threshold" type="real" default="-0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   2-body h-bond energy cutoff to define rotamer pairs that h-bond. I've found that -0.5 without ex1-ex2 is the best starting point. If using ex1-ex2, try -0.75. This parameter is the most important and requires some tuning; the tradeoff is that the more stringent (more negative), the faster it runs but you miss a lot of networks; too positive and it will run forever; using ex1-ex2 results in many redundant networks that end up being filtered out anyway.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="onebody_hb_threshold" type="real" default="-0.4">
  <xs:annotation><xs:documentation xml:lang="en">
   h-bond energy cutoff with their symmetric clones to define rotamer pairs that h-bond. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="charge_charge_rep_cutoff" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   new feature, not fully tested, use at your own risk!;
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clash_threshold" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   fa_rep energy above which two rotamers are considered clashing; used in all HBNet clash checks
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_score_limit" type="real" default="15.0">
  <xs:annotation><xs:documentation xml:lang="en">
   upper score limit for network against background pose to weed out anything terrible
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="find_native_networks" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Will find and report native networks in input pose but will also do design; for keep_existing_networks=true or extend_existing_networks=true, in addition to starting from "HBNet" PDBInfoLabel tags, HBnet will find all native networks in your input pose that meet your criteria (specified by options).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="store_network_scores_in_pose" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Will store internal evaluation metrics in the pose so they will be included in score.sc filesand accessible via ReadPoseExtraScoreFilter.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_poly_ala_background" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   for returned poses, rather than place network onto input pose, place into poly-ALA background;  where all positions that are designable or packable (according to user-defined task operations) are poly-alanine
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="find_only_native_networks" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   HBnet will find only find native networks in your input pose that meet your criteria (specified by options) and return a single pose with csts for those networks. If this option is true, all options below are overridden and HBNet does not search for new networks
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_existing_networks" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   In addition to design, Keeps existing networks from the input pose for each pose returned by HBNet, and turn on csts for all; existing networks are identified by default by "HBNet" PDBInfoLabel tags in the input pose, but can also be detected anew by setting find_native_networks=1. If keep_existing_networks=true and extend_existing_networks=false, then HBNet internally turns off design at input network positions (prevent_repacking); new networks are searched for and designed at the other positions based on your task_ops. If keep_existing_networks=true and extend_existing_networks=true, then HBNet internally puts only the input rotamer of each network residue into the IG to try to extend; an extended network will replace its native network if it is better (otherwise native networks retained).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extend_existing_networks" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Detects existing networks and tries to extend them, and also will search for new networks at other positions based on your criteria. Existing networks identified by HBNet PDBInfoLabel tags in the input pose, but can also be detected anew by setting find_native_networks=1. For existing networks, HBNet internally puts only the input rotamer of each network residue into the IG to try to extend; an extended network will replace its native network if it is better (otherwise native networks retained).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_extend_existing" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Will not look for new networks at other positions; will only try to extend and improve the existing networks.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   new feature, not fully tested, use at your own risk!; will minimize network on background pose before scoring/evaluating
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="store_subnetworks" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   store subnetworks as separate networks that can be passed back; not recommended
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secondary_search" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if during IG traversal, a search trajectory terminates in rotamer than cannot make any h-bonds, search again from that rotamer using a lower hb_threshold (-0.25)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secondary_threshold" type="real" default="-0.25">
  <xs:annotation><xs:documentation xml:lang="en">
   for secondary search option, what is the second (lower) hydrogen_bond_threshold to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_network_pdbs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   writes out pdb files of only the network (in poly-Ala background where any designable/packable residue is Ala -- rest of pose untouched); this is simply for debugging and visualizing the network as detected by HBNet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_cst_files" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   writes out Rosetta .cst constraint files for each network
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_replicates" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   max replicate networks that are allowed (defined as networks with same residue positions and aa types), but different rotamers; deafult is that replicates are not allowed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_replicates_before_branch" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   hack that improves runtime without significantly affecting results; use at your own risk! if set to be greater than 0, is the max replicate networks that are allowed before branching (defined as networks with same residue positions and aa types)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_replicates_before_unsat_check" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   hack that improves runtime without significantly affecting results; use at your own risk! max replicate networks that are allowed before unsat check is performed (defined as networks with same residue positions and aa types)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tyr_hydroxyls_must_donate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   new feature, not fully tested, use at your own risk!; require that TYR must donate to be considered satisfied
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hydroxyls_must_donate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   new feature, not fully tested, use at your own risk!; require that hydroxyls must donate their H to be considered satisfied
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_pdb_numbering" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   in tracer output, use pdb numbering and chains when printing out network info (instead of Rosetta sequential numbering)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_heavy_unsats_allowed" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   see max_unsat_Hpol for details
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="show_task" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   will show packer task by printing to TR, aka what's designable and packable and fixed based on your taskops
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_network_size" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   minimum number of residues required for each network. Note: in symmetric cases, this refers to the number of residues in the ASU!
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_network_size" type="non_negative_integer" default="15">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum number of residues required for each network
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_unique_networks" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   minimum number of networks with unique aa composition / rotamers
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_core_res" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   minimum core residues each network must have (as defined by core selector)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_boundary_res" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   minimum boundary residues a network must contain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_unsat_Hpol" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum number of buried unsatisfied polar Hpol atoms allowed in each network. Note that if there are heavy atom donors or acceptors that are buried and unsatisfied, those networks are thrown out; only unsatisfied Hpols where the heavy atom donor is making at least one hydrogen bond. This behavior can be overridden to allow heavy atom unsats by setting no_heavy_unsats_allowed=false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_percent_hbond_capacity" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   minimum percent_hbond_capacity a network must have, where 1.0 means the maximum number of h-bonds are made, considering all polar atoms in the rotamers that comprise the network; unlike satisfaction, this metric is independent of burial;  in rare cases, percent_hbond_capacity can be greater than 1, for example a hydroxyl could participate in 3 h-bonds even though we define max capacity as 2.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   print out all HBNet tracer statements; only useful for debugging
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_residues" type="xs:string" default="STRKHYWNQDE">
  <xs:annotation><xs:documentation xml:lang="en">
   string of one-letter AA codes; which polar residues types do you want to include in the search; the default is all AA's that can potentially make h-bonds, further restricted by the task_operations you pass.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_only_input_rot_for_start_res" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep the input rotamer for starting residues fixed; only sample proton chis during network search.  Note that the starting residue positions must otherwise be packable.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_resnums" type="residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   comma delimited list of residue positions to start network search from (e.g. "1,2,3,5"); now is better to use start_selector residue selector
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_no_hbnets" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   allows the program to continue when no hbnets are found
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="monte_carlo" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Step right up and try your luck with this stochastic HBNet protocol
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="monte_carlo_branch" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Outadated equivalent to monte_carlo
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="monte_carlo_seed_must_be_buried" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   (If monte_carlo_branch) only branch from hbonds where at least one residue is buried. Effectively, this results in only finding networks that have at least one buried residue.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="monte_carlo_seed_must_be_fully_buried" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   (If monte_carlo_branch) only branch from hbonds where both residues are buried. This results in only finding networks that have at least one buried hbond but this does not prevent having additional exposed hbonds.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_mc_nets" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   (if monte_carlo_branch) This is experimental and so far it does not look super useful. Maximum number of networks that the monte carlo protocol will store. Loose rule of thumb is to make this 10x the max number of nets you want to end up with. The reason you do not want this to be too large is that each of these networks goes through a relatively expensive quality check. A value of zero (which is default) represents having no limit.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="total_num_mc_runs" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   (if monte_carlo_branch) number of monte carlo runs to be divided over all the seed hbonds. A single monte carlo run appears to take roughly 1 ms (very loose estimate).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="seed_hbond_threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   (if monte_carlo_branch) Maybe you only want to branch from strong hbonds. If this value is -1.2, for example, then only hbonds with a strength of -1.2 or lower will be branched from.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_HBNetStapleInterface_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  "Staples" interface specificity with a hydrogen bond network.
 </xs:documentation></xs:annotation>
 <xs:attribute name="start_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector that tells HBNet which residues to start from (will only search for networks that include these resid. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="core_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector that defines what HBNet considers "core"; used in buriedness determination for unsats; default is layer selector default using sidechain neighbors(core=5.2). The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="boundary_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector to define what HBNet considers boundary during comparisons/scoring of networks. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hb_threshold" type="real" default="-0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   2-body h-bond energy cutoff to define rotamer pairs that h-bond. I've found that -0.5 without ex1-ex2 is the best starting point. If using ex1-ex2, try -0.75. This parameter is the most important and requires some tuning; the tradeoff is that the more stringent (more negative), the faster it runs but you miss a lot of networks; too positive and it will run forever; using ex1-ex2 results in many redundant networks that end up being filtered out anyway.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="onebody_hb_threshold" type="real" default="-0.4">
  <xs:annotation><xs:documentation xml:lang="en">
   h-bond energy cutoff with their symmetric clones to define rotamer pairs that h-bond. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="charge_charge_rep_cutoff" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   new feature, not fully tested, use at your own risk!;
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clash_threshold" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   fa_rep energy above which two rotamers are considered clashing; used in all HBNet clash checks
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_score_limit" type="real" default="15.0">
  <xs:annotation><xs:documentation xml:lang="en">
   upper score limit for network against background pose to weed out anything terrible
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="find_native_networks" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Will find and report native networks in input pose but will also do design; for keep_existing_networks=true or extend_existing_networks=true, in addition to starting from "HBNet" PDBInfoLabel tags, HBnet will find all native networks in your input pose that meet your criteria (specified by options).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="store_network_scores_in_pose" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Will store internal evaluation metrics in the pose so they will be included in score.sc filesand accessible via ReadPoseExtraScoreFilter.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_poly_ala_background" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   for returned poses, rather than place network onto input pose, place into poly-ALA background;  where all positions that are designable or packable (according to user-defined task operations) are poly-alanine
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="find_only_native_networks" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   HBnet will find only find native networks in your input pose that meet your criteria (specified by options) and return a single pose with csts for those networks. If this option is true, all options below are overridden and HBNet does not search for new networks
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_existing_networks" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   In addition to design, Keeps existing networks from the input pose for each pose returned by HBNet, and turn on csts for all; existing networks are identified by default by "HBNet" PDBInfoLabel tags in the input pose, but can also be detected anew by setting find_native_networks=1. If keep_existing_networks=true and extend_existing_networks=false, then HBNet internally turns off design at input network positions (prevent_repacking); new networks are searched for and designed at the other positions based on your task_ops. If keep_existing_networks=true and extend_existing_networks=true, then HBNet internally puts only the input rotamer of each network residue into the IG to try to extend; an extended network will replace its native network if it is better (otherwise native networks retained).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extend_existing_networks" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Detects existing networks and tries to extend them, and also will search for new networks at other positions based on your criteria. Existing networks identified by HBNet PDBInfoLabel tags in the input pose, but can also be detected anew by setting find_native_networks=1. For existing networks, HBNet internally puts only the input rotamer of each network residue into the IG to try to extend; an extended network will replace its native network if it is better (otherwise native networks retained).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_extend_existing" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Will not look for new networks at other positions; will only try to extend and improve the existing networks.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   new feature, not fully tested, use at your own risk!; will minimize network on background pose before scoring/evaluating
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="store_subnetworks" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   store subnetworks as separate networks that can be passed back; not recommended
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secondary_search" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if during IG traversal, a search trajectory terminates in rotamer than cannot make any h-bonds, search again from that rotamer using a lower hb_threshold (-0.25)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secondary_threshold" type="real" default="-0.25">
  <xs:annotation><xs:documentation xml:lang="en">
   for secondary search option, what is the second (lower) hydrogen_bond_threshold to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_network_pdbs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   writes out pdb files of only the network (in poly-Ala background where any designable/packable residue is Ala -- rest of pose untouched); this is simply for debugging and visualizing the network as detected by HBNet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_cst_files" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   writes out Rosetta .cst constraint files for each network
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_replicates" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   max replicate networks that are allowed (defined as networks with same residue positions and aa types), but different rotamers; deafult is that replicates are not allowed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_replicates_before_branch" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   hack that improves runtime without significantly affecting results; use at your own risk! if set to be greater than 0, is the max replicate networks that are allowed before branching (defined as networks with same residue positions and aa types)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_replicates_before_unsat_check" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   hack that improves runtime without significantly affecting results; use at your own risk! max replicate networks that are allowed before unsat check is performed (defined as networks with same residue positions and aa types)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tyr_hydroxyls_must_donate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   new feature, not fully tested, use at your own risk!; require that TYR must donate to be considered satisfied
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hydroxyls_must_donate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   new feature, not fully tested, use at your own risk!; require that hydroxyls must donate their H to be considered satisfied
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_pdb_numbering" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   in tracer output, use pdb numbering and chains when printing out network info (instead of Rosetta sequential numbering)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_heavy_unsats_allowed" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   see max_unsat_Hpol for details
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="show_task" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   will show packer task by printing to TR, aka what's designable and packable and fixed based on your taskops
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_network_size" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   minimum number of residues required for each network. Note: in symmetric cases, this refers to the number of residues in the ASU!
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_network_size" type="non_negative_integer" default="15">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum number of residues required for each network
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_unique_networks" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   minimum number of networks with unique aa composition / rotamers
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_core_res" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   minimum core residues each network must have (as defined by core selector)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_boundary_res" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   minimum boundary residues a network must contain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_unsat_Hpol" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum number of buried unsatisfied polar Hpol atoms allowed in each network. Note that if there are heavy atom donors or acceptors that are buried and unsatisfied, those networks are thrown out; only unsatisfied Hpols where the heavy atom donor is making at least one hydrogen bond. This behavior can be overridden to allow heavy atom unsats by setting no_heavy_unsats_allowed=false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_percent_hbond_capacity" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   minimum percent_hbond_capacity a network must have, where 1.0 means the maximum number of h-bonds are made, considering all polar atoms in the rotamers that comprise the network; unlike satisfaction, this metric is independent of burial;  in rare cases, percent_hbond_capacity can be greater than 1, for example a hydroxyl could participate in 3 h-bonds even though we define max capacity as 2.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   print out all HBNet tracer statements; only useful for debugging
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_residues" type="xs:string" default="STRKHYWNQDE">
  <xs:annotation><xs:documentation xml:lang="en">
   string of one-letter AA codes; which polar residues types do you want to include in the search; the default is all AA's that can potentially make h-bonds, further restricted by the task_operations you pass.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_only_input_rot_for_start_res" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep the input rotamer for starting residues fixed; only sample proton chis during network search.  Note that the starting residue positions must otherwise be packable.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_resnums" type="residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   comma delimited list of residue positions to start network search from (e.g. "1,2,3,5"); now is better to use start_selector residue selector
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_no_hbnets" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   allows the program to continue when no hbnets are found
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="monte_carlo" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Step right up and try your luck with this stochastic HBNet protocol
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="monte_carlo_branch" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Outadated equivalent to monte_carlo
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="monte_carlo_seed_must_be_buried" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   (If monte_carlo_branch) only branch from hbonds where at least one residue is buried. Effectively, this results in only finding networks that have at least one buried residue.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="monte_carlo_seed_must_be_fully_buried" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   (If monte_carlo_branch) only branch from hbonds where both residues are buried. This results in only finding networks that have at least one buried hbond but this does not prevent having additional exposed hbonds.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_mc_nets" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   (if monte_carlo_branch) This is experimental and so far it does not look super useful. Maximum number of networks that the monte carlo protocol will store. Loose rule of thumb is to make this 10x the max number of nets you want to end up with. The reason you do not want this to be too large is that each of these networks goes through a relatively expensive quality check. A value of zero (which is default) represents having no limit.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="total_num_mc_runs" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   (if monte_carlo_branch) number of monte carlo runs to be divided over all the seed hbonds. A single monte carlo run appears to take roughly 1 ms (very loose estimate).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="seed_hbond_threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   (if monte_carlo_branch) Maybe you only want to branch from strong hbonds. If this value is -1.2, for example, then only hbonds with a strength of -1.2 or lower will be branched from.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="combos" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   when combining multiple networks (max_networks_per_pose greater than 1) this is the max number of combinations tried for each network
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_networks_per_pose" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of networks to make in a pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_networks_per_pose" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of hydrogen bonds to generate per pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_intermolecular_hbonds" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of intermolecular hydrogen bonds to form
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_helices_contacted_by_network" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of helices the formed network should contact
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_asp_glu_hbonds" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of h-bonds Asp or Glu must participate in
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="span_all_helices" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Must the network span all helices in the pose?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_onebody_networks" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow networks within a pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="his_tyr" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Include histidine and tyrosine in the network
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pH_His" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Identify and handle pH-sensitive histidines
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="at_least_one_net_w_aromatic_sc" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   ensures each output pose has at least one net with at least one HYW; can be combined with other nets that don't
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="at_least_one_net_spans_all_helices" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   ensures each output pose has at least one net that spans all helices; can be combined with other nets that don't
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="at_least_one_net_fully_satisfied" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   ensures each output pose has at least one net that with 0 unseats, including 0 unsat Hpol; can be combined with other nets that don't
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_start_at_interface_pairs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Only start IG traversal with h-bonds that span across interface (different chains)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_aa_dependent_weights" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   weight twobody IG energies depending on aa type
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="all_helical_interfaces" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Interfaces must be composed of helices
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_symm_interfaces" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Only staple symmetric interfaces
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_distance" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Desired distance between partners at interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of jumps across interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="interpolation_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="linear"/>
  <xs:enumeration value="exponential"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_HamiltonianExchange_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Implements replica exchange in the MetropolisHastingsMover framework
 </xs:documentation></xs:annotation>
 <xs:attribute name="temp_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW_TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_low" type="real" default="0.6">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW_TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_high" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_levels" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_interpolation" type="interpolation_type" default="linear">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_stride" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="io_stride" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trust_current_temp" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stats_line_output" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stats_silent_output" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stats_file" type="xs:string" default="tempering.stats">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exchange_schedule" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File specifying exchange schedule
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_HighResDocker_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Randomly connects a fragment from the library to the growing ligand.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function to be used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movemap_builder" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a previously defined MoveMaoBuilder.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name (path to) the resfile.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of cycles to run.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_every_Nth" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform side chain repacking every Nth cycle.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_HighResEnsemble_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Independent high resolution optimization of each protein-ligand interface in ensemble.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function to be used during docking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chains" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Ligand chains, specified as the PDB chain IDs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movemap_builder" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a previously defined MoveMapBuilder for Docking phase.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_move" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a previously defined MoveMapBuilder for Minimization phase.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_score" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function to be used during minimizing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name (path to) the resfile.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of cycles to run.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rosetta" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use Rosetta scores as stand-in for experimental affinity (testing purposes)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_every_Nth" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform side chain repacking every Nth cycle.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_HotspotDisjointedFoldTree_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="ddG_threshold" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold to categorize residues as hotspots by ddG
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain with hotspots of interest, identified by sequentially numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radius" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Radius around which to calculate the local interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="stfhsh_residue" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing individual residues hotspots of which are to be hashed
 </xs:documentation></xs:annotation>
 <xs:attribute name="type" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue name for consideration
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_HotspotHasher_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TODO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="1" maxOccurs="unbounded">
  <xs:element name="residue" type="stfhsh_residue"/>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nstubs" type="non_negative_integer" default="1000 ">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of hotspot stubs to generate
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_residue_pdb_num" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number from which to generate hot spot stubs; provide this or target_residue_res_num
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_residue_res_num" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number from which to generate hot spot stubs; provide this or target_residue_pdb_num
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_distance" type="real" default="15.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Interface distance definition
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold below which stubs are favorable enough in energy to dump
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="in" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Input for a checkpoint of the hotspot hashing effort
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="out" type="xs:string" default="hash.stubs">
  <xs:annotation><xs:documentation xml:lang="en">
   Output where hashed stubs should be stored
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hotspot_filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter to apply to all hotspots before storage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="Hybridize_subelement_FragmentsType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Instructions for fragments files.  Should occur exactly once.
 </xs:documentation></xs:annotation>
 <xs:attribute name="three_mers" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   3mers fragments file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="small" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated vector of small (probably 3mer) fragments files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nine_mers" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   9mers fragments file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="big" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated vector of small (probably 3mer) fragments files
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="Hybridize_subelement_TemplateType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Instructions for templates. Must occur at least once, may occur as many times as you wish.
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   file path to pdb template
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_file" type="xs:string" default="AUTO">
  <xs:annotation><xs:documentation xml:lang="en">
   file path to constraints file associated with this template
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling frequency weight for this template
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmdef" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   symmdef file associated with this template (only if using symmetry)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="randomize" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma-seprated list of chains to randomize - not documented
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="auto_align" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   frustratingly undocumented
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="Hybridize_subelement_PairingsType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Used with FoldTreeHybridize and poorly documented
 </xs:documentation></xs:annotation>
 <xs:attribute name="file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   path to pairings file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sheets" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   used with FoldTreeHybridize, undocumented sheets and random_sheets are mutually exclusive.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="random_sheets" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   used with FoldTreeHybridize, undocumented sheets and random_sheets are mutually exclusive.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_templates" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   remove templates with incorrect pairings
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="Hybridize_subelement_DetailedControlsType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Used to prevent regions from being sampled extensively (meaning, don't remodel regions where the model is already correct)
 </xs:documentation></xs:annotation>
 <xs:attribute name="start_res" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   starting residue for a DetailedControl region
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_res" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   ending residue for a DetailedControl region; defaults to the rest of the Pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_template" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   if false, disallow template hybridization moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_abinitio" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   if false, disallow fragment insertion moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Hybridize_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This is the Hybridize mover at the core of comparative modeling (RosettaCM).  Typically its XML is written by a script rather than manually.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Fragments" type="Hybridize_subelement_FragmentsType"/>
  <xs:element name="Template" type="Hybridize_subelement_TemplateType"/>
  <xs:element name="Pairings" type="Hybridize_subelement_PairingsType"/>
  <xs:element name="DetailedControls" type="Hybridize_subelement_DetailedControlsType"/>
 </xs:choice>
 <xs:attribute name="stage1_increase_cycles" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Increase/decrease sampling in stage 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stage2_increase_cycles" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Increase/decrease sampling in stage 2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stage2_temperature" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   kT for the Monte Carlo simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stage2.5_increase_cycles" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Increase/decrease number of minimization steps following stage 2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fa_cst_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   constraints file for fullatom stage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="batch" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of centroid structures to generate per fullatom model. Setting this to 0 will only run centroid modeling.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_move" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   rigid body moves in stage 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_move_repeat" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   cycles in stage 1 that handle rigid body moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_pose_constraint" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to true, keep constraints on the incoming pose (useful if constraints are generated in a mover prior to hybridize)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cenrot" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   centroid rotamer modeling; necessary for stage2_pack_scorefxn to be useful; probably requires command line option -corrections:score:cenrot
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="csts_from_frags" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   when set, derives dihedral constraints from input fragments; you need to set 'dihedral_constraint' weight in the stages you want to use this
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_contig_insertion" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Limits the length of 'template recombination' moves. Useful when inputs are full-length (no gaps).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_after_stage1" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   minimize after stage 1 (?)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fragprob_stage2" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   controls the ratio of fragment insertions versus template recombination moves, implicit default 0.3
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="randfragprob_stage2" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   controls the number of random fragfile insertions versus 'cutpoint' insertions, implicit default 0.5
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stage1_1_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   set number of cycles for this stage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stage1_2_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   set number of cycles for this stage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stage1_3_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   set number of cycles for this stage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stage1_4_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   set number of cycles for this stage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stage1_probability" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   probability of doing 'fold tree hybridize' for stage one (with rigid body moves(?) instead of 'frag insertion in unaligned regions'
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_hetatm" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, use ligands from input template files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hetatm_cst_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If add_hetatm is enabled, this will set the weight on automatically generated intra-ligand restraints.  Called hetatm_self_cst_weight in documentation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hetatm_to_protein_cst_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If add_hetatm is enabled, this will set the weight on automatically generated ligand-protein restraints. Called hetatm_prot_cst_weight in documentation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="realign_domains" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If unset, this will not align the input domains to each other before running the protocol. Unsetting this option requires that input domains be previously aligned to a common reference frame. This option may be useful to unset for building models into density (if all inputs are docking into density).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="realign_domains_stage2" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If set, realign domains in between the two centroid stages; default only aligns the initial models.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_non_init_chunks" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Normally, secondary structure chunks are used from the starting model to set the foldtree. This option will steal chunks from other templates as well (as long as they do not overlap with current chunks); the number is the expected number of chunks (poisson distribution). This option is recommended when starting from an extended chain.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="frag_1mer_insertion_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   For fine control of protocol behavior, control the relative weight of this move type.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="small_frag_insertion_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   For fine control of protocol behavior, control the relative weight of this move type.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="big_frag_insertion_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   For fine control of protocol behavior, control the relative weight of this move type.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chunk_insertion_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   For fine control of protocol behavior, control the relative weight of this move type.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="frag_weight_aligned" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow fragment insertions in template regions. The default is 0; increasing this will lead to increased model diversity.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="auto_frag_insertion_weight" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   automatically set fragment insertion weights
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_registry_shift" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Add a random move that shifts the sequence during model-building
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeats" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   repeats for relax step
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disulf_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If specified, force the attached disulfide patterning
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_global_frame" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   only valid in Cartesian Hybridize; undocumented
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="linmin_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   only valid in Cartesian Hybridize; undocumented
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartfrag_overlap" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   only valid in Cartesian Hybridize; undocumented
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="seqfrags_only" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   only valid in Cartesian Hybridize; undocumented
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_long_min" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   only valid in Cartesian Hybridize; skip a final minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stage1_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction for stage 1 (looked up from DataMap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stage2_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction for stage 2 (looked up from DataMap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stage2_min_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction for stage 2 minimization (looked up from DataMap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stage2_pack_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction for stage 2 'packing' (looked up from DataMap. Only valid if boolean cenrot is true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fa_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction for fullatom stage (looked up from DataMap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="domain_pcut" type="real" default="0.18">
  <xs:annotation><xs:documentation xml:lang="en">
   Used in DDomainParse. Aggressively undocumented.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="domain_hcut" type="real" default="0.81">
  <xs:annotation><xs:documentation xml:lang="en">
   Used in DDomainParse. Aggressively undocumented.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="domain_length" type="non_negative_integer" default="38">
  <xs:annotation><xs:documentation xml:lang="en">
   Used in DDomainParse.  Aggressively undocumented.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="coord_cst_res" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Idealize_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Idealizes the bond lengths and angles of a pose. It then minimizes the pose in a stripped-down energy function in the presence of coordinate constraints
 </xs:documentation></xs:annotation>
 <xs:attribute name="atom_pair_constraint_weight" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for atom pair constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="coordinate_constraint_weight" type="real" default="0.01">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for coordinate constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fast" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Don't minimize or calculate stats after each idealization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chainbreaks" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep chainbreaks if they exist
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_CA_rmsd" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Report CA RMSD?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_residues_in_csts" type="residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Ignore these residues when applying constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="impose_constraints" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Impose constraints on the pose?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constraints_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Only impose constraints and don't idealize
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pos_list" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   List of positions to idealize
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_IdealizeAnomericHydrogens_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Mover to idealize carbohydrate anomeric hydrogens
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_IdealizeHelices_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Builds ideal helices in the specified residue spans
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Helix">
   <xs:complexType mixed="true">
    <xs:attribute name="start" type="residue_number" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      First residue in helix to idealize
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="residue_number" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Last residue in helix to idealize
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function to use for minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for coordinate constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_width" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Width for bound function for coordinate constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_If_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Implements a simple IF (filter(pose)) THEN true_mover(pose) ELSE false_mover(pose). true_mover is required, false_mover is not
 </xs:documentation></xs:annotation>
 <xs:attribute name="filter_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter used for the if else statement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="true_mover_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover to be execuated when filter returns true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="false_mover_name" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover to be execuated when filter returns false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_InitializeByBins_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Set mainchain torsions based on the probability of occurancegiven the torsion angles of the preceeding amino acid.
 </xs:documentation></xs:annotation>
 <xs:attribute name="bin_params_file" type="xs:string" default="ABBA">
  <xs:annotation><xs:documentation xml:lang="en">
   File identifier indicating which set of bin parameters is desired.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   First residue of the backbone stretch of interest.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Last residue of the backbone stretch of interest.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_InsertPoseIntoPoseMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Authors: Jared Adolf-Bryfogle (jadolfbr@gmail.com) and Steven Lewis
Inserts a pose between the specified residues of a second pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="start" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Insert AFTER this residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Insert BEFORE this residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="copy_pdbinfo" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Copy PDB info to new pose?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="spm_reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_InsertResMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Inserts ideal residues into pose. Useful for extending helices
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="xs:string" default="999">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resType" type="xs:string" default="H">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="steal_angles_from_res" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grow_toward_Nterm" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="phi" type="real" default="-57.8">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="psi" type="real" default="-47.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega" type="real" default="180.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="additionalResidue" type="xs:string" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_InsertZincCoordinationRemarkLines_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_InsertionSiteTestMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="span">
   <xs:complexType mixed="true">
    <xs:attribute name="begin_pdb_num" type="residue_number">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number in PDB numbering (residue number + chain ID)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="begin_res_num" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end_pdb_num" type="residue_number">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number in PDB numbering (residue number + chain ID)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end_res_num" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="test_insert_ss" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allowed_sc_increase" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="seqpos" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="PDB_numbering" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeats" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_InstallFarnesylMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Install farnesyl moieties at each cysteine provided in the residue selector.
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_per_residue" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Sample each residue as it's added
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_InterfaceAnalyzerMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Authors: Steven Lewis, Bryan Der, Ben Stranges, Jared Adolf-Bryfogle
This mover reports scores and statistics useful for judging the quality of protein-protein interfaces
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_separated" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   repack chains after separation (better evaluation of unbound state)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_input" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   repack the input before calculating bound state values
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   use a resfile for packing operations note BOOLEAN
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packstat" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   run packstat on bound state
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_sc" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   run interface_sc on bound state
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tracer" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   report output to a Tracer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_jobname" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   when reporting output (especially to tracer), label with the job name (like 1UBQ_0001)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fixedchains" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list of PDB chains on one side of the interface, most useful when you have multiple chains on each side.  Notice that 'jump', 'interface', 'fixedchains', and 'ligandchain' are all mutually exclusive.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   docking-style interface definitions, like HL_AB for chains HL vs AB for the interface.  Notice that 'jump', 'interface', 'fixedchains', and 'ligandchain' are all mutually exclusive.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ligandchain" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Move ONLY this PDB chain.  Notice that 'jump', 'interface', 'fixedchains', and 'ligandchain' are all mutually exclusive.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residues upstream/downstream of this Jump are on opposite sides of the interface; this Jump moves in the separation step.  Notice that 'jump', 'interface', 'fixedchains', and 'ligandchain' are all mutually exclusive.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefile_reporting_prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix to add to column names for the values that are put in the Pose for eventual output into a score file. An extra underscore is added between the value specified here and the standard column names if this option is used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_InterfaceDdGMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover reports the change in binding affinity (ddG) after mutation in the interface
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   jump that connects two sides of the interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="positive_integer_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list (or just one) chain number(s) that defines one side of the interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_name" type="chain_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list (or just one) name/letter of chain(s) that defines one side of the interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mut_ref_savepose_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of previously defined SavePoseMover that has stored the mutant Pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wt_ref_savepose_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of previously defined SavePoseMover that has stored the wildtype Pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="db_reporter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of previously defined db_report mover. Reporter (and its associated features) will be run on the bound mutant, bound wildtype, unbound mutant, and unbound wildtype states
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_InterfaceRecapitulation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="mover_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of mover to be applied, either a DesignRepack or PackRotamers
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pssm" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the pssm score be calculated against a possibly-provided pose reference?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_InterfaceScoreCalculator_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  InterfaceScoreCalculator calculates a myriad of ligand specific scores and appends them to the output file. After scoring the complex the ligand is moved 1000 Å away from the protein. The model is then scored again. An interface score is calculated for each score term by subtracting separated energy from complex energy.
 </xs:documentation></xs:annotation>
 <xs:attribute name="chains" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma separated chains to dock.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefxn of choice.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   This is your native pdb without interface mutations. If a native structure is specified, 4 additional score terms are calculated: ligand_centroid_travel, ligand_radious_of_gyration, ligand_rms_no_super, and ligand_rms_with_super.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native_ensemble_best" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the native pose has multiple residues for the given chains, and the travel and rmsd metrics will be computed as the best (lowest) value from any of them.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normalize" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The normalization function you wish to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="compute_grid_scores" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If compute_grid_scores is true, the scores for each grid will be calculated. This may result in the regeneration of the scoring grids, which can be slow.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_in_membrane" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the interface score of the pose will be computed in solution and in the membrane. Requires pose to have membrane_info object as set in RosettaMP.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grid_set" type="xs:string" default="default">
  <xs:annotation><xs:documentation xml:lang="en">
   The Grid Set to use when computing grid scores.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_InterlockAroma_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string" default="soft_rep">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_repulsion_energy" type="real" default="30.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_env_energy" type="real" default="-0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="limit_aroma_chi2" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_pdbs" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_InverseRotamersCstGenerator_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_InvrotTreeCstGenerator_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cstfile" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_ligand_to_pose" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_IteratedConvergence_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Repeatedly applies a sub-mover until the given filter returns a value within the given delta for the given number of cycles
 </xs:documentation></xs:annotation>
 <xs:attribute name="mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   the mover to repeatedly apply
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   the mover to repeatedly apply
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   the filter to use when assaying for convergence (should return a reasonable value from report_sm())
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   the filter to use when assaying for convergence (should return a reasonable value from report_sm())
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta" type="real" default="0.1">
  <xs:annotation><xs:documentation xml:lang="en">
   how close do the filter values have to be to count as converged
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   for how many mover applications does the filter value have to fall within delta of the reference value before counting as converged. If the filter is outside of the range, the reference value is reset to the new filter value
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maxcycles" type="non_negative_integer" default="1000">
  <xs:annotation><xs:documentation xml:lang="en">
   exit regardless if filter doesn't converge within this many applications of the mover - intended mainly as a safety check to prevent infinite recursion
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_IterativeLoophashLoopInserter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="loop_anchor" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Loop anchor residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_torsion_rms" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum rmsd of flanking regions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_torsion_rms" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   min rmsd rmsd of flanking regions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_closure_deviation" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   closure deviation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_sizes" type="nnegative_int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Loop sizes, as a comma-separated list
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_lh_radius" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum loophash radius, an integer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="modify_flanking_regions" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Whether we are allowed to modify flanking regions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_flanking_residues_to_match" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   If we are modifying flanking regions, then this many residues must match
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_insertions" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Probably-integral description of how many insertions are appropriate over the course of simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="loop_subelement_Loop_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Use this element to define a series of loops in subtags, one loop per subtag
 </xs:documentation></xs:annotation>
 <xs:attribute name="start" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue index (pose numbering) for the first position in the loop.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue index (pose numbering) for the last position in the loop.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cut" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue index (pose numbering) for the cutpoint residue (i.e. the cut residue will be the lower end of the chain break, and the cut+1 residue will be the upper end of the chain break). If a zero value is given, it will be interpretted as saying that the cutpoint should be chosen using the logic in protocols::loops::Loop::choose_cutpoint
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_rate" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The probability that you would like the loop will be skipped (such as by the IndependentLoopMover); a value less than zero means never skip, a value greater than one means always skip - NOT RESPECTED BY ALL PROTOCOLS
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rebuild" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to true, then the initial backbone dihedrals for the loop will be overwritten to produce an extended conformation (i.e. phi=-150 degres, psi=150, omego=180) and the bond angles and lengths will be idealized - NOT RESPECTED BY AL PROTOCOLS
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_JacobiLoopClosureMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs loop closure on a single loop using the Jacobi algorithm
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Loop" type="loop_subelement_Loop_type"/>
 </xs:choice>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to loops file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_cycles" type="non_negative_integer" default="200">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of cycles per run. Quit the run even if not converged at this point.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="err_rot_allowed" type="real" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum norm of rotational error [deg] for closure to be accepted as successful.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="err_lin_allowed" type="real" default="0.1">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum norm of linear error [Ang] for closure to be accepted as successful.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Setting that determines whether or not to output non-critical information.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_JumpRotamerSidechain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Non-discrete side chain sampling using Dunbrack rotamer probabilities/distributions
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_KeepRegionMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Keeps a specified region of the current pose and deletes the rest
 </xs:documentation></xs:annotation>
 <xs:attribute name="nter_overhang" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of residues N terminal to start to include
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cter_overhang" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of residues C terminal to end to include
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   First residue to keep
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Last residue to keep
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_KicMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_KinaseMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Enzymatic mover to phosphorylate a pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="species" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the species name of this simulated enzyme.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="enzyme_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the specific name of this simulated enzyme.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="efficiency" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Directly set the efficiency of this enzyme, ignoring whatever is in the database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perform_major_reaction_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Set this EnzymaticMover to perform only its major reaction.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perform_all_reactions" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow this EnzymaticMover to be promiscuous, performing a random transfer from among its possible co-substrates.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LabelPoseFromResidueSelectorMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add/Remove labels to/from residues defined by ResidueSelector.
 </xs:documentation></xs:annotation>
 <xs:attribute name="property" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   New label to add to the residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_property" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Label to remove from the selected residues (if present).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from_remark" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Read the LABELS from REMARKs in the input structure or silent file (when called, ignores all other attributes, so actively setting it to false makes the mover do nothing).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying residues to be labeled. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LegacyAddStartnodeFragments_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Steals native fragment for residues between the provided start_res and end_res and adds it to the provided frag9 file
 </xs:documentation></xs:annotation>
 <xs:attribute name="start_res" type="positive_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Beginning of window for fragment stealing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_res" type="positive_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   End of window for fragment stealing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="GlobalRequirements">
 <xs:choice>
  <xs:element name="LegacyGlobalLengthRequirement" type="LegacyGlobalRequirements_LegacyGlobalLengthRequirement_type"/>
  <xs:element name="LegacyResidueRetentionRequirement" type="LegacyGlobalRequirements_LegacyResidueRetentionRequirement_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="LegacyGlobalRequirements_LegacyGlobalLengthRequirement_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sets limits on minimum and maximum length of each segment with a given DSSP
 </xs:documentation></xs:annotation>
 <xs:attribute name="max_length" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum length of each segment in residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_length" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum length of each segment in residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dssp" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Whitespace-delimited list of valid DSSP characters for which to apply this requirement
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="nnegative_int_wsslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="[+]?[0-9]+(\s+[-+]?[0-9]+)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="LegacyGlobalRequirements_LegacyResidueRetentionRequirement_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Specifies residues that must be retained during assembly
 </xs:documentation></xs:annotation>
 <xs:attribute name="model_id" type="xs:integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Model for which residues are being specified
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="required_resnums" type="nnegative_int_wsslist" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Whitespace delimited list of required residue numbers
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="LegacyAssemblyMover_GlobalRequirements_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Subelement used to define global assembly requirements
 </xs:documentation></xs:annotation>
 <xs:group ref="GlobalRequirements" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:group name="IntraSegmentRequirements">
 <xs:choice>
  <xs:element name="LegacySegmentDsspRequirement" type="LegacyIntraSegRequirements_LegacySegmentDsspRequirement_type"/>
  <xs:element name="LegacySegmentLengthRequirement" type="LegacyIntraSegRequirements_LegacySegmentLengthRequirement_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="LegacyIntraSegRequirements_LegacySegmentDsspRequirement_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sets allowed DSSP for a segment
 </xs:documentation></xs:annotation>
 <xs:attribute name="dssp" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Whitespace-delimited list of valid DSSP characters for this segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="LegacyIntraSegRequirements_LegacySegmentLengthRequirement_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sets limits on minimum and maximum length of a segment
 </xs:documentation></xs:annotation>
 <xs:attribute name="max_length" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum length of segment in residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_length" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum length of segment in residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="LegacyAssemblyMover_IntraSegmentRequirements_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Subelement used to define intra-segment assembly requirements
 </xs:documentation></xs:annotation>
 <xs:group ref="IntraSegmentRequirements" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="index" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Which segment to apply these requirements to
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LegacyAppendAssemblyMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Builds an assembly from a previously specified starting node using a Monte Carlo protocol
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="1">
  <xs:element name="GlobalRequirements" type="LegacyAssemblyMover_GlobalRequirements_type"/>
  <xs:element name="IntraSegmentRequirements" type="LegacyAssemblyMover_IntraSegmentRequirements_type"/>
 </xs:choice>
 <xs:attribute name="model_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of input model file (can also be provided on command line)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of input score (edge) file (can also be provided on command line)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_segments" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of segments (SSEs including loops) in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_segments" type="non_negative_integer" default="50">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of segments in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="base_native_bonus" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If performing design, what score bonus should residues be given for maintaining one of their native identities? Defaults to 1.5 in constructor.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_cutoff" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of neighbors to turn on favoring native residue. NOTE: This option currently doesn't do anything. Defaults to 15 in constructor.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of Monte Carlo cycles to perform
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_temperature" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial kT value for simulated annealing (1.5 to 2 recommended)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_temperature" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Final kT value for simulated annealing (0.1 recommended)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_assembly_score" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Assemblies with scores better than this value will be kept; -2.0 recommended
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_best_assembly_score" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Recover lowest-scoring assembly?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_probability" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of adding a segment in a given cycle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delete_probability" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of deleting a segment in a given cycle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="switch_probability" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of performing a switch in a given cycle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_non_contiguous_assembly" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Discard assemblies with missing residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LegacyAssemblyConstraintsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Applies residue type constraints based on all native identities at each position in a legacy SEWING assembly
 </xs:documentation></xs:annotation>
 <xs:attribute name="native_rotamers_file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of input native rotamers file generated using Legacy SEWING
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native_bonus" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Score bonus to give to native residue identities during design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native_pro_bonux" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Score bonus to give to native prolines during design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LegacyEnumerateAssemblyMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Enumerates all possible assemblies for the model/edge file and keeps those with assembly scores better than a cutoff value
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="1">
  <xs:element name="GlobalRequirements" type="LegacyAssemblyMover_GlobalRequirements_type"/>
  <xs:element name="IntraSegmentRequirements" type="LegacyAssemblyMover_IntraSegmentRequirements_type"/>
 </xs:choice>
 <xs:attribute name="model_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of input model file (can also be provided on command line)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of input score (edge) file (can also be provided on command line)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_segments" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of segments (SSEs including loops) in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_segments" type="non_negative_integer" default="50">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of segments in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="base_native_bonus" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If performing design, what score bonus should residues be given for maintaining one of their native identities? Defaults to 1.5 in constructor.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_cutoff" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of neighbors to turn on favoring native residue. NOTE: This option currently doesn't do anything. Defaults to 15 in constructor.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_assembly_score" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum assembly score cutoff (-2.0 recommended)
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LegacyGivenPathAssemblyMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Creates an assembly from the given model IDs in the given order.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="1">
  <xs:element name="GlobalRequirements" type="LegacyAssemblyMover_GlobalRequirements_type"/>
  <xs:element name="IntraSegmentRequirements" type="LegacyAssemblyMover_IntraSegmentRequirements_type"/>
 </xs:choice>
 <xs:attribute name="model_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of input model file (can also be provided on command line)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of input score (edge) file (can also be provided on command line)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_segments" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of segments (SSEs including loops) in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_segments" type="non_negative_integer" default="50">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of segments in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="base_native_bonus" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If performing design, what score bonus should residues be given for maintaining one of their native identities? Defaults to 1.5 in constructor.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_cutoff" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of neighbors to turn on favoring native residue. NOTE: This option currently doesn't do anything. Defaults to 15 in constructor.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="path" type="int_cslist" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of model IDs (in order) to incorporate into the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LegacyGreedyAssemblyMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  At each cycle, it tries a given number of edges and chooses the best scoring assembly for that round.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="1">
  <xs:element name="GlobalRequirements" type="LegacyAssemblyMover_GlobalRequirements_type"/>
  <xs:element name="IntraSegmentRequirements" type="LegacyAssemblyMover_IntraSegmentRequirements_type"/>
 </xs:choice>
 <xs:attribute name="model_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of input model file (can also be provided on command line)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of input score (edge) file (can also be provided on command line)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_segments" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of segments (SSEs including loops) in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_segments" type="non_negative_integer" default="50">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of segments in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="base_native_bonus" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If performing design, what score bonus should residues be given for maintaining one of their native identities? Defaults to 1.5 in constructor.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_cutoff" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of neighbors to turn on favoring native residue. NOTE: This option currently doesn't do anything. Defaults to 15 in constructor.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of rounds during which we will add to the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_edges_per_node" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of edges to try per cycle
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LegacyKicSampler_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This sampler was written to compare kinematicMover and the new KicMover and is only meant to be a debugging tool.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to loops file
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LegacyMonteCarloAssemblyMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Builds an assembly using a Monte Carlo simulated annealing protocol with the given temperature schedule and probabilities of adding/deleting/switching segments each cycle
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="1">
  <xs:element name="GlobalRequirements" type="LegacyAssemblyMover_GlobalRequirements_type"/>
  <xs:element name="IntraSegmentRequirements" type="LegacyAssemblyMover_IntraSegmentRequirements_type"/>
 </xs:choice>
 <xs:attribute name="model_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of input model file (can also be provided on command line)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of input score (edge) file (can also be provided on command line)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_segments" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of segments (SSEs including loops) in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_segments" type="non_negative_integer" default="50">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of segments in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="base_native_bonus" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If performing design, what score bonus should residues be given for maintaining one of their native identities? Defaults to 1.5 in constructor.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_cutoff" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of neighbors to turn on favoring native residue. NOTE: This option currently doesn't do anything. Defaults to 15 in constructor.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of Monte Carlo cycles to perform
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_temperature" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial kT value for simulated annealing (1.5 to 2 recommended)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_temperature" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Final kT value for simulated annealing (0.1 recommended)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_assembly_score" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Assemblies with scores better than this value will be kept; -2.0 recommended
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_best_assembly_score" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Recover lowest-scoring assembly?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_probability" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of adding a segment in a given cycle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delete_probability" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of deleting a segment in a given cycle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="switch_probability" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of performing a switch in a given cycle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_non_contiguous_assembly" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Discard assemblies with missing residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LegacyRepeatAssemblyMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Builds repeat proteins using cycles in the SewGraph
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="1">
  <xs:element name="GlobalRequirements" type="LegacyAssemblyMover_GlobalRequirements_type"/>
  <xs:element name="IntraSegmentRequirements" type="LegacyAssemblyMover_IntraSegmentRequirements_type"/>
 </xs:choice>
 <xs:attribute name="model_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of input model file (can also be provided on command line)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of input score (edge) file (can also be provided on command line)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_segments" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of segments (SSEs including loops) in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_segments" type="non_negative_integer" default="50">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of segments in the assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="base_native_bonus" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If performing design, what score bonus should residues be given for maintaining one of their native identities? Defaults to 1.5 in constructor.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_cutoff" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of neighbors to turn on favoring native residue. NOTE: This option currently doesn't do anything. Defaults to 15 in constructor.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_repeating_segments" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of segments per repeating unit
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold_score_of_complete_cycle" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Assemblies with scores below this value after each cycle will proceed to the requirement check.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LigandBindingAssemblyMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  AssemblyMover designed to add contacts to specified ligand atoms and then build an assembly around the ligand.
 </xs:documentation></xs:annotation>
 <xs:all>
  <xs:element name="AssemblyScorers" type="assembly_mover_AssemblyScorers_complex_type" minOccurs="0" maxOccurs="1"/>
  <xs:element name="AssemblyRequirements" type="assembly_mover_AssemblyRequirements_complex_type" minOccurs="0" maxOccurs="1"/>
  <xs:element name="Ligands" type="assembly_mover_Ligands_complex_type" minOccurs="0" maxOccurs="1"/>
 </xs:all>
 <xs:attribute name="start_temperature" type="real" default="0.6">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature at start of simulated annealing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_temperature" type="real" default="0.6">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature at end of simulated annealing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_probability" type="real" default="0.05">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of adding a triplet of segments at any given step during assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delete_probability" type="real" default="0.005">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of deleting a terminal triplet of segments at any given step during assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="conformer_switch_probability" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability of switching ligand conformers during assembly. This should only be used if a ligand is present AND if you have provided conformers for that ligand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="window_width" type="positive_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   Required number of overlapping residues for two segments to be considered a match. Used in hashless SEWING only (for hashed SEWING, this is determined by the hasher settings used when generating the edge file).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimum_cycles" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of Monte Carlo cycles for assembly before completion requirements are checked.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maximum_cycles" type="non_negative_integer" default="100000">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of Monte Carlo cycles for assembly before forced termination.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="model_file_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to file defining segments to use during assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hashed" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the hasher during assembly to check overlap of all atoms? Requires an input edge file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="edge_file_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to edge file to use during assembly (only used if hashed is set to true)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_segments" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of segments to include in the final assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_segment_length" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of residues to include in a segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_pose_per_move" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Setting to true will output a pose after each move/revert.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recover_lowest_assembly" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Setting to true will output the lowest assembly in the final pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recursive_depth" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   How many nodes after the terminal node should we keep track of alignments for?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pose_segment_starts" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue numbers of the first residue in each segment in the input pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pose_segment_ends" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue numbers of the last residue in each segment in the input pose. Length must match that of pose_segment_starts.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pose_segment_dssp" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String indicating the secondary structure of user-specified segments, one character per segment (e.g. HLH for a helix-loop-helix motif). Length should match that of pose_segment_starts and pose_segment_ends if specified.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="strict_dssp_changes" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Segments require at least a 2-residue change in DSSP to specify a new segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_segments_from_dssp" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Determine segment boundaries based on pose secondary structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="match_segments" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Which segments from the input pose should we be able to append onto? Defaults to exterior segments.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="partner_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of PDB file containing binding partner for this assembly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="required_resnums" type="refpose_enabled_residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue numbers of residues in the input structure that must be preserved
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_recursion" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   How many alignments from the end nodes should be stored in memory?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="modifiable_terminus" type="xs:string" default="B">
  <xs:annotation><xs:documentation xml:lang="en">
   Which terminus of the starting node may be modified.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_partner" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the output pdb contain the partner?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extend_mode" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should SEWING append only a single helix?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_node_vital_segments" type="xs:string" default="all">
  <xs:annotation><xs:documentation xml:lang="en">
   Which segments from starting node are vital? (terminal or all)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="required_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector specifying residues in the input structure that must be preserved. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_cutoff" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Cutoff for distance in Angstroms between segment and ligand to check for contacts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segment_distance_cutoff" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of segments away from the starting structure to look for contacts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="binding_cycles" type="non_negative_integer" default="1000">
  <xs:annotation><xs:documentation xml:lang="en">
   How many cycles to check for ligand contacts before giving up
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="build_site_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we stop after finding all of the desired contacts?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name to identify this mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LigandDesign_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform ligand design
 </xs:documentation></xs:annotation>
 <xs:attribute name="option_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Option file name.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LinkageConformerMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Authors: Jared Adolf-Bryfogle (jadolfbr@gmail.com)  and Jason W. Labonte (JWLabonte@jhu.edu)
Mover to sample glycan linkages using conformers generated from the PDB using adaptive kernal density estimates.
 </xs:documentation></xs:annotation>
 <xs:attribute name="upper_resnum" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sugar_bb_if_needed" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use sugar backbone data if needed?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="idealize_torsions" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the Mean values of each torsion angle making up a conformer instead of sampling using the SD either uniformly or through a gaussian.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="gaussian_sampling" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use standard deviation and means to sample on the gaussian of each torsion angle that make up a conformer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_protein_linkage" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Also sample linkage between glycan and protein
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_conformer_population_stats" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use statistics about conformer populations for sampling
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="root_populations_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use population-based sampling for only the linkage between the amino acid and glycan residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoadDensityMap_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  PHENIX crystallographic refinement interface code. Loads an electron density map
 </xs:documentation></xs:annotation>
 <xs:attribute name="mapfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to density map
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_scale" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   set sidechain scaling in density map to this factor
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="window" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   set window in the density map to this value
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoadPDB_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Replaces current PDB with one from disk. This is probably only useful in checkpointing, since this mover deletes all information gained so far in the trajectory.
 </xs:documentation></xs:annotation>
 <xs:attribute name="filename" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to PDB file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Appends the pose conformation to the current pose by a new jump
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoadVarSolDistSasaCalculatorMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Stupid class that modifies global data to interface with the global-data-heavy PoseMetricFactory in order to change the way solvent accessible surface areas are calculated
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoadZnCoordNumHbondCalculatorMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LocalBackboneMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Move the backbone between two selected pivots. Conformation changes are restricted two reisidues between pivot1 - 1 and pivot2 + 1.
 </xs:documentation></xs:annotation>
 <xs:attribute name="move_type" type="xs:string" default="translate">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the type of backbone movement. Available settings are 'translate', 'rotate', 'shear' and 'circular_permute'. 'translate' is the default setting.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pivot1" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   First pivot residue.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pivot2" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Second pivot residue.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LocalRelax_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Sets the scorefxn for both pack and min stages.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Sets the scorefxn for both packing only.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Sets the scorefxn for min only
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ncyc" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of cycles to perform localrelax
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nexp" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of expansions to perform
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="K" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   K is added to NBR_RADIUS-i and NBR_RADIUS-j to determine the size of the packing/minimization shells
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_iter" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum iterations to perform in minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_schedule" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   not really verbose, just dump intermediate files to the local directory
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_cart" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopAnalyzerMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover reports scores and statistics useful for judging the quality of loops
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Loop" type="loop_subelement_Loop_type"/>
 </xs:choice>
 <xs:attribute name="use_tracer" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   report output to a Tracer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to loops file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopBuilder_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Builds in backbone atoms for loop regions where they are missing. The backbones created by LoopBuilder will have ideal bond lengths, ideal bond angles, and torsions picked from a Ramachandran distribution.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to loops file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_attempts" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Stop after n cycles irrespective of convergence.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="KIC_or_CCD">
 <xs:restriction base="xs:string">
  <xs:pattern value="KIC|CCD"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="PERTURB_or_REFINE">
 <xs:restriction base="xs:string">
  <xs:pattern value="perturb|refine"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_LoopCM_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The LoopCM builds one of the following four movers: LoopMover_Perturb_KIC, LoopMover_Refine_KIC, LoopMover_Perturb_CCD, LoopMover_Refine_CCD.
 </xs:documentation></xs:annotation>
 <xs:attribute name="algorithm" type="KIC_or_CCD" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Choose whether to use "KIC" or "CCD" for loop modeling.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="style" type="PERTURB_or_REFINE" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Choose either "perturb" or "refine" to trigger large or only small torsion angle changes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopCreationMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_inserter" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover with which to insert the loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_closer" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover with which to close the loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdbs" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the mover dump PDBs?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refine" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the mover do refinement?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="attempts_per_anchor" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many of 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_loops" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the mover minimize loops?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_loops" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Also design loops?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_neighbors" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the mover include neighbors in minimization?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_anchors" type="nnegative_int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   What residues should serve as loop anchors?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="asym_size" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   A cryptic, integer option.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_by_lam" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we filter by the LoopAnalyzer score?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lam_score_cutoff" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If so, what should the score cutoff be?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopFinder_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="interface" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Interface in jump numbering of interest; this numbering is sequential.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ch1" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Interested in loops from 'chain 1' of the jump?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ch2" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Interested in loops from 'chain 2' of the jump?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_length" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum loop length of interest
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_length" type="non_negative_integer" default="1000">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum loop length of interest
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_cutoff" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance over which to consider the 'interface' between chains
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mingap" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   How far away from other loops must new loops be?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnum" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number to define distance cutoff; use this or pdb_num
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_num" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number to define distance cutoff; use this or resnum
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="CA_CA_distance" type="real" default="15">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance cutoff from user-defined residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopHash_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Mover to perform full loop hash. (more explanation?)
 </xs:documentation></xs:annotation>
 <xs:attribute name="min_bbrms" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Min backbone torsion angle rmsd for the loop window
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_bbrms" type="real" default="100000">
  <xs:annotation><xs:documentation xml:lang="en">
   Min backbone torsion angle rmsd for the loop window
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_rms" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Min Anstrom Rmsd cuttofs for loophash generated structures
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_rms" type="real" default="4.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Max Anstrom Rmsd cuttofs for loophash generated structures
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_nstruct" type="positive_integer" default="1000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Max models to create in loophash
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_radius" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   max loophash radius
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_struct_per_radius" type="positive_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   For each radius in radius list, generate n structures.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Save space and assume structure is ideal?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_by_phipsi" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter-out non-ideal phipsi.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_weight_const" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   sets the same sample weight throughout the pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_sizes" type="nnegative_int_cslist" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Sizes of loops for loophash
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="db_path" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to DB -- if not specified then command-line flag is used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nprefilter" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   OSOLETE
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prefilter_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function for pre-filtering step.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ncentroid" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   number of structures to carry over to subsequent stages
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nfullatom" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   number of structures to carry over to subsequent stages
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="centroid_filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter after centroid stages.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ranking_cenfilter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter for ranking in centroid mode
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Relax mover applied in batches
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="batch_size" type="non_negative_integer" default="32">
  <xs:annotation><xs:documentation xml:lang="en">
   batch relax batch size
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fullatom_filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   uses the filter's report_sm method to rank and report the best decoys
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopHashDiversifier_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Simple mover that uses loophash to replace randomly chosen fragments in a given pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="num_iterations" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of loophash runs to execute
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_try_div" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of loophash runs to try in each execution
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="diversify_loop_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_inter_ss_bbrms" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Min torsion-angle rmsd for residue windows that span two pieces of secondary structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_inter_ss_bbrms" type="real" default="100000">
  <xs:annotation><xs:documentation xml:lang="en">
   Max torsion-angle rmsd for residue windows that span two pieces of secondary structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_intra_ss_bbrms" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Min torsion-angle rmsd for residue windows that are a single pieces of secondary structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_intra_ss_bbrms" type="real" default="100000">
  <xs:annotation><xs:documentation xml:lang="en">
   Max torsion-angle rmsd for residue windows that are a single pieces of secondary structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_rms" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Min Anstrom Rmsd cuttofs for loophash generated structures
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_rms" type="real" default="100.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Max Anstrom Rmsd cuttofs for loophash generated structures
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_radius" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   max loophash radius
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_struct" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Max models to create in loophash (number of fragment tried is 200x this)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Save space and assume structure is ideal?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_by_phipsi" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter-out non-ideal phipsi.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="window_size" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   loophash window size and loophash fragment size
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_cen_cst" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function for constraint centroid mode sampling
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_rama_cst" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="db_path" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to DB -- if not specified then command-line flag is used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="centroid_filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter after centroid stage using this filter.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ranking_cenfilter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Prune decoys based on the filter's apply function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopHashLoopClosureMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Close loops using loophash library
 </xs:documentation></xs:annotation>
 <xs:attribute name="loop_insert" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Instruction string in Between Chains format: e.g. "A6B7CDE" to insert a loop of size 6 between chain A and B and another of 7 between B and C loop_insert, loop_insert_rclrc, and blueprint are mutually exclusive options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_insert_rclrc" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Instruction string in Residue:Chain:Length format: e.g. 25:A:6,50:B:7 for a loop of size 6 residues after 25 (and before 26, implicit) and another of size 7 residues between 50 and 51. loop_insert, loop_insert_rclrc, and blueprint are mutually exclusive options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   loop_insert, loop_insert_rclrc, and blueprint are mutually exclusive options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loophash_db_path" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   path to the loophash library
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loophash_ex_limit" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   loop extension limit
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="quick_and_dirty" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   remodel quick and dirty?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry_definition" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The structure is symmetric. Specify symmetry definition. symmetry_definition and repeat_strucutre are mutually exclusive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeat_structure" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of times the structure should be repeated. symmetry_definition and repeat_strucutre are mutually exclusive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lh_filter_string" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_linear_chainbreak" type="real" default="0.07">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_trajectory" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   number of trajectories
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="save_top" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   keep top n scores
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="canonical_res_char">
 <xs:restriction base="xs:string">
  <xs:maxLength value="1"/>
  <xs:pattern value="[ACDEFGHIKLMNPQRSTVWY]"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_LoopLengthChange_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A Mover for changing the length of a loop; does not close the loop afterwards.
 </xs:documentation></xs:annotation>
 <xs:attribute name="loop_start" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Starting residue number for loop, formatted in seqpos or PDB or refpose numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_end" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Ending residue number for loop, formatted in seqpos or PDB or refpose numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta" type="xs:integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of residues to extend or contract the loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restype" type="canonical_res_char">
  <xs:annotation><xs:documentation xml:lang="en">
   Only valid if delta is positive. Char of residue type to insert, on [ACDEFGHIKLMNPQRSTVWY] (the canonicals).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="config_options">
 <xs:restriction base="xs:string">
  <xs:pattern value="kic|kic_with_frags|loophash_kic|empty"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="LoopMover_Loop_subelement_BuildType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Configure the build step. If "skip" is enabled, none of the loops will be rebuilt.You may also provide this tag with any option or subtag that would be understood by LoopBuilder.
 </xs:documentation></xs:annotation>
 <xs:attribute name="sfxn_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of iterations to make in the sfxn loop.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of iterations to make in the mover loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_rama" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If enabled, the Ramachandran weight will start near zero and will finish at whatever it was in the original score function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_rep" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If enabled, the repulsive weight will start near zero andwill finish at whatever it was in the original score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_down_cst" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If enabled, the constraint weight will start at whatever value in the scorefunction and end at 0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_temp" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Ramp the temperature during the temp loop.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initial_temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial temperature. Ignored if temperature ramping is disabled.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Final temperature. Ignored if temperature ramping is disabled.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If "skip" is enabled, the corresponding step will be skipped
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="LoopMover_Loop_subelement_CentroidType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Configure the centroid refinement step. If "skip" is enabled, none of the loops will be rebuilt. You may also provide this tag with any option or subtag that would be understood by LoopProtocol.
 </xs:documentation></xs:annotation>
 <xs:attribute name="sfxn_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of iterations to make in the sfxn loop.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of iterations to make in the mover loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_rama" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If enabled, the Ramachandran weight will start near zero and will finish at whatever it was in the original score function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_rep" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If enabled, the repulsive weight will start near zero andwill finish at whatever it was in the original score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_down_cst" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If enabled, the constraint weight will start at whatever value in the scorefunction and end at 0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_temp" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Ramp the temperature during the temp loop.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initial_temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial temperature. Ignored if temperature ramping is disabled.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Final temperature. Ignored if temperature ramping is disabled.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If "skip" is enabled, the corresponding step will be skipped
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="LoopMover_Loop_subelement_FullatomType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Configure the centroid refinement step. If "skip" is enabled, none of the loops will be rebuilt. You may also provide this tag with any option or subtag that would be understood by LoopProtocol.
 </xs:documentation></xs:annotation>
 <xs:attribute name="sfxn_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of iterations to make in the sfxn loop.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of iterations to make in the mover loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_rama" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If enabled, the Ramachandran weight will start near zero and will finish at whatever it was in the original score function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_rep" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If enabled, the repulsive weight will start near zero andwill finish at whatever it was in the original score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_down_cst" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If enabled, the constraint weight will start at whatever value in the scorefunction and end at 0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_temp" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Ramp the temperature during the temp loop.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initial_temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial temperature. Ignored if temperature ramping is disabled.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Final temperature. Ignored if temperature ramping is disabled.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If "skip" is enabled, the corresponding step will be skipped
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopModeler_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform a complete loop modeling simulation, including the build, centroid, and fullatom steps. It is a wrapper around other modeling movers.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Loop" type="loop_subelement_Loop_type"/>
  <xs:element name="Build" type="LoopMover_Loop_subelement_BuildType"/>
  <xs:element name="Centroid" type="LoopMover_Loop_subelement_CentroidType"/>
  <xs:element name="Fullatom" type="LoopMover_Loop_subelement_FullatomType"/>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to loops file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="config" type="config_options" default="kic">
  <xs:annotation><xs:documentation xml:lang="en">
   Configure the local backbone move used in the refinement steps.If kic_with_frags is specified, -loops:frag_sizes and -loops:frag_files options are required.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="auto_refine" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Disable "auto_refine" if you wantto specify your own refinement moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_fa" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function for full atom modeling.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_cen" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function for modeling in centroid representation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fast" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Only test run (fewer cycles)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loophash_perturb_sequence" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Let LoopHashKIC also perturb the amino acid sequence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loophash_seqposes_no_mutate" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Sequence positions that should not be mutated by LoopHashKIC.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="closuremethod">
 <xs:restriction base="xs:string">
  <xs:enumeration value="ccd"/>
  <xs:enumeration value="automatic"/>
  <xs:enumeration value="kinematic"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_LoopMoverFromCommandLine_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="protocol" type="closuremethod" default="ccd">
  <xs:annotation><xs:documentation xml:lang="en">
   Which loop closure protocol to use?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perturb" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturb before closure?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refine" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a refinement protocol?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="intermedrelax" type="rosetta_bool" default="no">
  <xs:annotation><xs:documentation xml:lang="en">
   Use an intermediate relax protocol?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remodel" type="rosetta_bool" default="no">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform a remodeling protocol?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax" type="rosetta_bool" default="no">
  <xs:annotation><xs:documentation xml:lang="en">
   A final round of fullatom relaxation?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refine_score" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perturb_score" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_file" type="xs:string" default="loops.loops">
  <xs:annotation><xs:documentation xml:lang="en">
   File from which loops definitions might be read
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopMover_Perturb_CCD_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Model one single loop in centroid mode using CCD loop closure. Reads only commandline options.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopMover_Perturb_KIC_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Model one single loop using KIC for loop closure. Reads only commandline options.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopMover_Perturb_QuickCCD_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform quickCCD loop closure. Reads only commandline options.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopMover_Perturb_QuickCCD_Moves_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Kinematic loop closure main protocol.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopMover_Refine_Backrub_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs loop refinement using backrub moves. Reads only commandline options.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopMover_Refine_CCD_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform loop refinement using CCD for loop closure.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
  <xs:element name="MoveMap">
   <xs:complexType mixed="true">
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="set_fold_tree_from_loops" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Set fold tree using loop info. Default = true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set score function to be used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_from_cache" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow the loops to be set from the segments stored in the poses observer cache.Makes it possible to have LoopMovers be part of parser protocols where the loopswere determined by some previous on the fly step . Default = true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="outer_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Set number of outer cycles.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_inner_cycles" type="non_negative_integer" default="250">
  <xs:annotation><xs:documentation xml:lang="en">
   Finish inner cycles latest after n cycles. Default = 250
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_initial" type="real" default="1.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial Boltzman temperature. Default = 1.5
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_final" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Final Boltzman temperature. Default = 0.5
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The format for loops is: Start:End:Cut,Start:End:Cut... RosettaResnum or PDB Numbering accepted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopMover_Refine_KIC_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Refines the polypeptide segments in the LoopMover_Refine_KIC::loops_ class variable from their current conformationsIs controlled through command line options only
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopMover_SlidingWindow_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  LoopMover utilizing fragment insertion, ccd loop closure, and minimization
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="mover_status">
 <xs:restriction base="xs:string">
  <xs:enumeration value="MS_SUCCESS"/>
  <xs:enumeration value="FAIL_RETRY"/>
  <xs:enumeration value="FAIL_DO_NOT_RETRY"/>
  <xs:enumeration value="FAIL_BAD_INPUT"/>
  <xs:enumeration value="FAIL"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_LoopOver_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="drift" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Avoid repeatedly restoring from a saved pose (which is intended to prevent drift)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="iterations" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of iterations
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ms_whenfail" type="mover_status" default="MS_SUCCESS">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover status to emit upon failure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="begin_w_int">
 <xs:restriction base="xs:string">
  <xs:pattern value="^[0-9]"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="LoopMover_Loop_subelement_AcceptanceCheckType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add a Monte Carlo score function evaluationand acceptance check between any of your movers.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" default="loop_modeling">
  <xs:annotation><xs:documentation xml:lang="en">
   "name" attribute of mover after which to do AcceptanceCheck.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopProtocol_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Optimizes a region of protein backbone using a simulated annealing MonteCarlo simulation.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="AcceptanceCheck" type="LoopMover_Loop_subelement_AcceptanceCheckType"/>
  <xs:element name="Loop" type="loop_subelement_Loop_type"/>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to loops file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sfxn_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of iterations to make in the sfxn loop.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of iterations to make in the mover loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_rama" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If enabled, the Ramachandran weight will start near zero and will finish at whatever it was in the original score function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_rep" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If enabled, the repulsive weight will start near zero andwill finish at whatever it was in the original score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_down_cst" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If enabled, the constraint weight will start at whatever value in the scorefunction and end at 0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_temp" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Ramp the temperature during the temp loop.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initial_temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial temperature. Ignored if temperature ramping is disabled.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Final temperature. Ignored if temperature ramping is disabled.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_cycles" type="begin_w_int">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of iterations to make in the temp loop. This number may optionally be followed by an "x",in which case the number of iterations will be the given number times the length of the loop being sampled.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="auto_refine" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Invoke the built-in refiners after any user-specified movers.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fast" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Test mode, reduces number of cycles.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopRefineInnerCycleContainer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This class is a LoopRefineInnerCycle that contains one or more other LoopRefineInnerCycles to allow a developer to quickly string together existing LoopRefineInnerCycles in new ways to create new loop refinement protocols.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopRelaxMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Allows protocols in LoopMover_KIC to be combined with other loop modeling protocols
 </xs:documentation></xs:annotation>
 <xs:attribute name="cmd_line_csts" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use constraints from command line
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="copy_sidechains" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Copy sidechain torsions from input pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rebuild_filter" type="real" default="999">
  <xs:annotation><xs:documentation xml:lang="en">
   Below this score, loops will not need to rebuild
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="compute_rmsd" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Compute RMSD to input?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_rebuild_tries" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of times to attempt rebuilding the loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remodel" type="xs:string" default="quick_ccd">
  <xs:annotation><xs:documentation xml:lang="en">
   What type of move to use for remodeling?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="intermedrelax" type="rosetta_bool" default="no">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform intermediate relax moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refine" type="xs:string" default="refine_ccd">
  <xs:annotation><xs:documentation xml:lang="en">
   What type of refinement to perform
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax" type="rosetta_bool" default="no">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform relax moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="read_fragments" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Read loop fragments files from command line
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score4L" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The format for loops is: Start:End:Cut,Start:End:Cut... RosettaResnum or PDB Numbering accepted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopRemodel_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="protocol" type="closuremethod" default="ccd">
  <xs:annotation><xs:documentation xml:lang="en">
   Method for loop closure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perturb" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturb before closure?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refine" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a refinement protocol?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refine_score" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perturb_score" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="auto_loops" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Automatically detect/assign loops
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Do design!
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hurry" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Fast mode
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   cycles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_file" type="xs:string" default="loops.loops">
  <xs:annotation><xs:documentation xml:lang="en">
   File from which loops definitions might be read
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_start_pdb_num" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Loop start, in PDB/seqpos/reference pose numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_start_resnum" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Loop start, in PDB/seqpos/reference pose numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_end_pdb_num" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Loop end, in PDB/seqpos/reference pose numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_end_pdbnum" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Loop end, in PDB/seqpos/reference pose numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoophashLoopInserter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="loop_anchor" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Loop anchor residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_torsion_rms" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum rmsd of flanking regions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_torsion_rms" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   min rmsd rmsd of flanking regions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_closure_deviation" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   closure deviation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_sizes" type="nnegative_int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Loop sizes, as a comma-separated list
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_lh_radius" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum loophash radius, an integer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="modify_flanking_regions" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Whether we are allowed to modify flanking regions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_flanking_residues_to_match" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   If we are modifying flanking regions, then this many residues must match
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_LoopmodelWrapper_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Run loopmodel.
 </xs:documentation></xs:annotation>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a loop file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fast" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Run fewer cycles. E.g. for testing.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="three_dim_real_vector">
 <xs:restriction base="xs:string">
  <xs:pattern value="[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?,[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?,[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_MPDockingMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Mover used to dock membrane proteins
 </xs:documentation></xs:annotation>
 <xs:attribute name="cen_sfxn_weights" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Weights to use for low-resolution docking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fa_sfxn_weights" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Weights to use for high-resolution docking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="center" type="three_dim_real_vector">
  <xs:annotation><xs:documentation xml:lang="en">
   3D coordinates of membrane center
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normal" type="three_dim_real_vector">
  <xs:annotation><xs:documentation xml:lang="en">
   3D coordinates of normal vector
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump number that should be moveable
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MPDockingSetupMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Set up for membrane protein docking.
 </xs:documentation></xs:annotation>
 <xs:attribute name="optimize1" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Optimize partner 1?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimize2" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Optimize partner 2?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pose1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name for pose 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pose2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name for pose 2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="span1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name for spanfile 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="span2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name for spanfile 2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MPFastRelaxMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs FastRelax on membrane proteins
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MPLipidAccessibility_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Mover that computes which residues are lipid accessible and puts that information into the B-factors: 50 is lipid accessible, 0 is lipid INaccessible
 </xs:documentation></xs:annotation>
 <xs:attribute name="angle_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Angle cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="slice_width" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Slice width
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="shell_radius" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Shell radius
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tm_alpha" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   tm_alpha
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MPSymDockMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Given an asymmetric starting pose, setup the pose for symmetry, add a membrane representation for the full symmetric complex, position the pose at the center of mass of all transmembrane spans, and proceed with the standard symmetric docking protocol.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MakeAsymmetricStructureDataMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Transform the StructureData for a symmetric Pose into its asymmetric equivalent, by replicating across subunits as appropriate
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MakeBundle_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The MakeBundle mover builds a helical bundle parametrically, using the Crick parameterization, given a set of Crick parameter values.  Note that the Crick parameterization is compatible with arbitrary helices (including strands, which are special cases of helices in which the turn per residue is about 180 degrees).
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Helix">
   <xs:complexType mixed="true">
    <xs:attribute name="crick_params_file" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      File name of a file containing Crick parameters for the secondary structure type desired.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="residue_name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      For a specific helix, residue, indicated by name, from which to build the helical bundle.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="helix_length" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      For a specific helix, length, in residues, for this helix
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="r0" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Major helix radius, in Angstroms.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="r0_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for r0 should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="omega0" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Major helix twist per residue, stored in radians.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="omega0_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for omega0 should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="pitch_from_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which pitch value should be copied in order to set omega0, the twist per residue.  An alternative to "omega0_copies_helix".
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega0" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Rotation of a helix about the z-axis, stored in radians.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega0_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for delta_omega0 should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega1" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Rotation of a helix about its own axis, stored in radians.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega1_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for delta_omega1 should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_t" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Offset along the polypeptide backbone, in residues.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_t_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for delta_t should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z0_offset" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Offset along the global z-axis, in Angstroms.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z0_offset_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for z0_offset should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z1_offset" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Offset along the superhelical path through space, in Angstroms.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z1_offset_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for z1_offset should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="epsilon" type="real" default="1.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Lateral squash parameter/eccentricity of the cross-section of a bundle or barrel.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="epsilon_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for epsilon should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="repeating_unit_offset" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      Shift, in residues, of the repeating unit of a helix.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="r1_peratom" type="real_wsslist" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      Minor helix radius -- a vector of real numbers in Angstroms, with one per atom in the repeating unit of a helix.  Read from Crick params file, and not normally set by hand.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="omega1" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Minor helix twist per residue, stored in radians.  Read from Crick params file, and not normally set by hand, sampled, or perturbed.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="omega1_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for omega1 should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z1" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Minor helix rise per residue along the helix axis, in Angstroms.  Read from Crick params file, and not normally set by hand, sampled, or perturbed.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z1_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for z1 should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega1_peratom" type="real_wsslist" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      Minor helix angular offsets of each mainchain atom in the repeating unit, in radians.  Read from Crick params file, and not normally set by hand.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_z1_peratom" type="real_wsslist" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      Minor helix axial offsets of each mainchain atom in the repeating unit, in Angstroms.  Read from Crick params file, and not normally set by hand.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="invert" type="rosetta_bool" default="false">
     <xs:annotation><xs:documentation xml:lang="en">
      Inversion state of this helix -- true for inverted.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="set_dihedrals" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      True indicates that the parametric machinery will set mainchain torsion values.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="set_bondangles" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      True indicates that the parametric machinery will allow mainchain bond angle values to deviate from ideality.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="set_bondlengths" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      True indicates that the parametric machinery will allow mainchain bond length values to deviate from ideality.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="r0" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Major helix radius, in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega0" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Major helix twist per residue, stored in radians.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega0" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation of a helix about the z-axis, stored in radians.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation of a helix about its own axis, stored in radians.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_t" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset along the polypeptide backbone, in residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z0_offset" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset along the global z-axis, in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_offset" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset along the superhelical path through space, in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon" type="real" default="1.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Lateral squash parameter/eccentricity of the cross-section of a bundle or barrel.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeating_unit_offset" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Shift, in residues, of the repeating unit of a helix.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r1_peratom" type="real_wsslist" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix radius -- a vector of real numbers in Angstroms, with one per atom in the repeating unit of a helix.  Read from Crick params file, and not normally set by hand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix twist per residue, stored in radians.  Read from Crick params file, and not normally set by hand, sampled, or perturbed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix rise per residue along the helix axis, in Angstroms.  Read from Crick params file, and not normally set by hand, sampled, or perturbed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1_peratom" type="real_wsslist" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix angular offsets of each mainchain atom in the repeating unit, in radians.  Read from Crick params file, and not normally set by hand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_z1_peratom" type="real_wsslist" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix axial offsets of each mainchain atom in the repeating unit, in Angstroms.  Read from Crick params file, and not normally set by hand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Inversion state of this helix -- true for inverted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_dihedrals" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   True indicates that the parametric machinery will set mainchain torsion values.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_bondangles" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   True indicates that the parametric machinery will allow mainchain bond angle values to deviate from ideality.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_bondlengths" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   True indicates that the parametric machinery will allow mainchain bond length values to deviate from ideality.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_degrees" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Input values in degrees, instead of radians
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Symmetry setting (n-fold; 0 or 1 === no symmetry
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry_copies" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   How many symmetry copies will be generated? 'All' if zero, only the first one if 1, but you can ask for any other number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reset" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Reset the input pose, instead of appending the bundle to it
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="crick_params_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name of a file containing Crick parameters for the secondary structure type desired.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For a specific helix, residue, indicated by name, from which to build the helical bundle.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="helix_length" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   For a specific helix, length, in residues, for this helix
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MakeBundleHelix_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This is a helper mover called by the MakeBundle and BundleGridSampler movers.  It is NOT intended to be invoked directly from RosettaScripts.  As such, it has no configurable settings.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MakeCanonicalHelix_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Forms a canonical alpha helix between the specified residues
 </xs:documentation></xs:annotation>
 <xs:attribute name="helix_start" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue to start with; by default, residue 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="helix_end" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue to end with - user added
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MakeJunctionsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Makes junctions from file
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb_cache" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   caches the junctions/DHR as required during runtime
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_cache_max_size" type="non_negative_integer" default="2000">
  <xs:annotation><xs:documentation xml:lang="en">
   max number of pdbs to save in cache.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="designs" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   File with one design per line
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function used for packing and design.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="junction_rmsd_thresh" type="real" default="1.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Not all junctions are perfectly identical structurally. in the first junction. This sets a threshold for allowed difference.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MakeLatticeMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  If you wish to model a structure in its crystal lattice, a symmetry definition file is not needed. Rather, one can use the flag -symmetry_definition CRYST1.
 </xs:documentation></xs:annotation>
 <xs:attribute name="contact_dist" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Command line '-interaction_shell ##' OR XML 'contact_dist=##' specifies the distance (in Angstrom) away from the input structure to generate symmetric partners.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MakeLayerMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Make a 2D lattice from the input PDB and CRYST1 line. The CRYST1 line must correspond to one of the 17 layer groups.
 </xs:documentation></xs:annotation>
 <xs:attribute name="contact_dist" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Command line '-interaction_shell ##' OR RosettaScripts 'contact_dist=##' specifies the distance (in Angstrom) away from the input structure to generate symmetric partners.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MakePolyX_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Convert pose into poly XXX ( XXX can be any amino acid )
 </xs:documentation></xs:annotation>
 <xs:attribute name="aa" type="xs:string" default="ALA">
  <xs:annotation><xs:documentation xml:lang="en">
   using amino acid type for converting
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_pro" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Pro is not converted to XXX
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_gly" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Gly is not converted to XXX
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_disulfide_cys" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   disulfide CYS is not converted to XXX
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_chis" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set these chis for every residue placed. Must specify same number of chis as in rotamer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="valid_make_star_topology_modes">
 <xs:restriction base="xs:string">
  <xs:enumeration value="default"/>
  <xs:enumeration value="disconnected"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_MakeStarTopology_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sets up a star topology fold tree for this pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="mode" type="valid_make_star_topology_modes" default="default">
  <xs:annotation><xs:documentation xml:lang="en">
   Set up default or disconnected star topology?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restore" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Apply the fold tree set up on a previous run of this mover to the pose?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tag" type="xs:string" default="nulltag">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a previously defined fold tree to be used in this mover. If the fold tree has not been defined, it will be set as the default fold tree.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The saved pose to take the forldtree from if restoring without a prior save.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="jumpfuncmangled_Jump_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Define a jump container
 </xs:documentation></xs:annotation>
 <xs:attribute name="jump" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump in question
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="explosion" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Degree of extensive sampling at this jump
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_name" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   filter with which to eliminate bad solutions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_name" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   mover for additional sampling
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allowed_aas" type="xs:string" default="ADEFIKLMNQRSTVWY">
  <xs:annotation><xs:documentation xml:lang="en">
   amino acids allowed in design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_minimize" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="jumpsfuncmangled_Jumps_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Map a hotspot conformation from a source to a target pose
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Jump" type="jumpfuncmangled_Jump_type"/>
 </xs:choice>
</xs:complexType>

<xs:complexType name="mover_MapHotspot_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Map out the residues that might serve as a hotspot region on a target. This requires massive user guidance. Each hot-spot residue should be roughly placed by the user (at least as backbone) against the target. Each hot-spot residue should have a different chain ID. The method iterates over all allowed residue identities and all allowed rotamers for each residue. Tests its filters and for the subset that pass selects the lowest-energy residue by score12. Once the first hot-spot residue is identified it iterates over the next and so on until all hot-spot residues are placed. The output contains one file per residue identity combination.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Jumps">
   <xs:complexType mixed="true">
    <xs:attribute name="jump" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Jump in question
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="explosion" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      Degree of extensive sampling at this jump
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="filter_name" type="xs:string" default="true_filter">
     <xs:annotation><xs:documentation xml:lang="en">
      filter with which to eliminate bad solutions
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="mover_name" type="xs:string" default="null">
     <xs:annotation><xs:documentation xml:lang="en">
      mover for additional sampling
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="allowed_aas" type="xs:string" default="ADEFIKLMNQRSTVWY">
     <xs:annotation><xs:documentation xml:lang="en">
      amino acids allowed in design
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="scorefxn_minimize" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of score function to use
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="clash_check" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform a clash check
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="file_name_prefix" type="xs:string" default="map_hs">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix for filenames
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MatDesGreedyOptMutationMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover will first attempt isolated/independent mutations defined in the input task operation, score/filter them all, rank them by score, then attempt to combine them, starting with the best scoring single mutation, accepting the mutation only if the filter score decreases (see skip_best_check for optional exception), and working down the list to the end. Optionally test one of the top N mutations at each positions instead of just the best.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Filters" type="greedy_opt_subelement_Filters_complex_type"/>
  <xs:element name="Filter" type="greedy_opt_subelement_Filter_complex_type"/>
 </xs:choice>
 <xs:attribute name="relax_mover" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   A mover for post-repacking relaxation (e.g. minimization)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If you want to see a pdb of every trial mutation, add 'dump_pdb=1'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_table" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, will save to a file the table of amino acids/filter values over which it is operating.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="parallel" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Run the point mutation calculator in parallel, use in conjunction with openMPI.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stopping_condition" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Stops before trials are done if a filter evaluates to true (accepting the last mutation that caused the filter to evaluate to true by default. See stop_before_condition to change this behavior).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_shell" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Default is set to -1, so there is no design. Set a positive value to determine the radius of design shell. This might be useful in case of reversion to native where more than one mutation is needed to revert.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The radius around which we repack around each tested/designed mutation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_before_condition" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Default = false. Stop mover once the stopping_condition is reached and do not accept the last mutation (ie, reject the mutation that set the stopping_condition to true).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_best_check" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Default = false. Accept mutations during the combining stage as long as they pass the filter(s), regardless of whether or not the value is the best so far.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rtmin" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do rtmin following repack.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="shuffle_order" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Randomize sequence position order of mutations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="diversify" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Diversify solutions to pareto front calculation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="incl_nonopt" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Default = false. Use with filter_delta. This option modifies filter_delta behavior such that all mutations that score within N filter points of the best are attempted in the combinatorial design stage.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a single filter you wish you process.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_type" type="choices_for_sample_types" default="low">
  <xs:annotation><xs:documentation xml:lang="en">
   If your filter values are such that higher = better, use 'sample_type=high'
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_delta" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Add sequence diversity; useful with nstruct greater than 1; randomly try any mutation that scores wit     hin N filter points of the best-scoring mutation at each position instead of just the first, e.g. filter_delta=0.5 for attempting any mutation within 0.5 filter points of the best one.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_task_for_filters" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Returns a Null pointer if incompatible filter type is passed through the xml. Would be nice if task_factory() was a standard method of the filter class, so that we could make a Virtual task_factory() method in the Filter base class and not have to have this specific to TaskAwareScoreTypeFilter.  If this proves useful, then perhaps we could consider that...
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="force_natro_for_stored_tasks" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Get reference pose with rotamer(s) to be forced back.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use input native protein as reference pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Input alternative reference pdb.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_thresholds" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   This is a string describing a pattern of comma-separated descriptors. Each filter is related to a pair of either 'upper' or 'lower', then a comma, then a decimal describing the filter threshold the greedyopt can tolerate. An example for one filter that has an upper limit of a change of 0.3 is 'upper,0.3'. I could combined then with a second filter that can tolerate up to 0.05 lower than the original value: 'upper,0.3,lower,0.05'. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_for_match_match_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing individual matches
 </xs:documentation></xs:annotation>
 <xs:attribute name="ref_pos" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Reference position
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segment" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Segment also, possibly, specified from blueprint file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mod_pos_start" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Start of range of modified positions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mod_pos_end" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   End of range of modified positions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mod_pos" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Single modified position
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MatchResiduesMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="match" type="subtag_for_match_match_type"/>
 </xs:choice>
 <xs:attribute name="reference" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Reference pose for comparison
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold for accuracy of match
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Blueprint file may provide start and end points
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="superimpose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Superimpose the input pose by its matched position
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="matcher_constraint_combination_Combination_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A fully-specified combinaiton of the six parameters needed to define an individual constraint. One or more Combinations can be specified in each MatcherConstraint tag.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="DistanceAB">
   <xs:complexType mixed="true">
    <xs:attribute name="x0" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      x0 specifies the optimum distance x0 for the respective value.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="xtol" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      xtol specifies the allowed tolerance of the value
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="k" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      force constant k, or the strength of the parameter. If x is the value of the constrained parameter, the score penalty applied will be: 0 if |x - x0| is less than xtol and k * ( |x - x0| - xtol ) otherwise. This is only relevant for enzdes, and is not used by the matcher.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="periodicity" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      the periodicity of the constraint. For example, if x0 is 120 and per is 360, the constraint function will have a its minimum at 120 degrees. If x0 is 120 and per is 180, the constraint function will have two minima, one at 120 degrees and one at 300 degrees. If x0 is 120 and per is 120, the constraint function will have 3 minima, at 120, 240, and 360 degrees. In the case of distances, i.e. when specifying the DistanceAB parameter, this value has a special meaning: it indicates whether the constrained interaction is covalent or not with '1' meaning covalent and '0' meaning non-covalent. If the constraint is covalent, Rosetta will not evaluate the vdW term between DownstreamResidue:Atom1 and UpstreamResidue:Atom1 and their [1,3] neighbors.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="noSamples" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      specifies how many samples the matcher, if using the classic matching algorithm ( see the matcher documentation ), will place between the x0 and x0 +- tol value. If the value in this column is n, the matcher will sample 2n+1 points for the respective parameter. Note: the number of samples is also influenced by the periodicity, with the matcher sampling around every x0.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="AngleA">
   <xs:complexType mixed="true">
    <xs:attribute name="x0" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      x0 specifies the optimum distance x0 for the respective value.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="xtol" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      xtol specifies the allowed tolerance of the value
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="k" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      force constant k, or the strength of the parameter. If x is the value of the constrained parameter, the score penalty applied will be: 0 if |x - x0| is less than xtol and k * ( |x - x0| - xtol ) otherwise. This is only relevant for enzdes, and is not used by the matcher.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="periodicity" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      the periodicity of the constraint. For example, if x0 is 120 and per is 360, the constraint function will have a its minimum at 120 degrees. If x0 is 120 and per is 180, the constraint function will have two minima, one at 120 degrees and one at 300 degrees. If x0 is 120 and per is 120, the constraint function will have 3 minima, at 120, 240, and 360 degrees. In the case of distances, i.e. when specifying the DistanceAB parameter, this value has a special meaning: it indicates whether the constrained interaction is covalent or not with '1' meaning covalent and '0' meaning non-covalent. If the constraint is covalent, Rosetta will not evaluate the vdW term between DownstreamResidue:Atom1 and UpstreamResidue:Atom1 and their [1,3] neighbors.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="noSamples" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      specifies how many samples the matcher, if using the classic matching algorithm ( see the matcher documentation ), will place between the x0 and x0 +- tol value. If the value in this column is n, the matcher will sample 2n+1 points for the respective parameter. Note: the number of samples is also influenced by the periodicity, with the matcher sampling around every x0.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="AngleB">
   <xs:complexType mixed="true">
    <xs:attribute name="x0" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      x0 specifies the optimum distance x0 for the respective value.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="xtol" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      xtol specifies the allowed tolerance of the value
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="k" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      force constant k, or the strength of the parameter. If x is the value of the constrained parameter, the score penalty applied will be: 0 if |x - x0| is less than xtol and k * ( |x - x0| - xtol ) otherwise. This is only relevant for enzdes, and is not used by the matcher.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="periodicity" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      the periodicity of the constraint. For example, if x0 is 120 and per is 360, the constraint function will have a its minimum at 120 degrees. If x0 is 120 and per is 180, the constraint function will have two minima, one at 120 degrees and one at 300 degrees. If x0 is 120 and per is 120, the constraint function will have 3 minima, at 120, 240, and 360 degrees. In the case of distances, i.e. when specifying the DistanceAB parameter, this value has a special meaning: it indicates whether the constrained interaction is covalent or not with '1' meaning covalent and '0' meaning non-covalent. If the constraint is covalent, Rosetta will not evaluate the vdW term between DownstreamResidue:Atom1 and UpstreamResidue:Atom1 and their [1,3] neighbors.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="noSamples" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      specifies how many samples the matcher, if using the classic matching algorithm ( see the matcher documentation ), will place between the x0 and x0 +- tol value. If the value in this column is n, the matcher will sample 2n+1 points for the respective parameter. Note: the number of samples is also influenced by the periodicity, with the matcher sampling around every x0.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="TorsionA">
   <xs:complexType mixed="true">
    <xs:attribute name="x0" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      x0 specifies the optimum distance x0 for the respective value.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="xtol" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      xtol specifies the allowed tolerance of the value
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="k" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      force constant k, or the strength of the parameter. If x is the value of the constrained parameter, the score penalty applied will be: 0 if |x - x0| is less than xtol and k * ( |x - x0| - xtol ) otherwise. This is only relevant for enzdes, and is not used by the matcher.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="periodicity" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      the periodicity of the constraint. For example, if x0 is 120 and per is 360, the constraint function will have a its minimum at 120 degrees. If x0 is 120 and per is 180, the constraint function will have two minima, one at 120 degrees and one at 300 degrees. If x0 is 120 and per is 120, the constraint function will have 3 minima, at 120, 240, and 360 degrees. In the case of distances, i.e. when specifying the DistanceAB parameter, this value has a special meaning: it indicates whether the constrained interaction is covalent or not with '1' meaning covalent and '0' meaning non-covalent. If the constraint is covalent, Rosetta will not evaluate the vdW term between DownstreamResidue:Atom1 and UpstreamResidue:Atom1 and their [1,3] neighbors.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="noSamples" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      specifies how many samples the matcher, if using the classic matching algorithm ( see the matcher documentation ), will place between the x0 and x0 +- tol value. If the value in this column is n, the matcher will sample 2n+1 points for the respective parameter. Note: the number of samples is also influenced by the periodicity, with the matcher sampling around every x0.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="TorsionB">
   <xs:complexType mixed="true">
    <xs:attribute name="x0" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      x0 specifies the optimum distance x0 for the respective value.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="xtol" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      xtol specifies the allowed tolerance of the value
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="k" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      force constant k, or the strength of the parameter. If x is the value of the constrained parameter, the score penalty applied will be: 0 if |x - x0| is less than xtol and k * ( |x - x0| - xtol ) otherwise. This is only relevant for enzdes, and is not used by the matcher.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="periodicity" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      the periodicity of the constraint. For example, if x0 is 120 and per is 360, the constraint function will have a its minimum at 120 degrees. If x0 is 120 and per is 180, the constraint function will have two minima, one at 120 degrees and one at 300 degrees. If x0 is 120 and per is 120, the constraint function will have 3 minima, at 120, 240, and 360 degrees. In the case of distances, i.e. when specifying the DistanceAB parameter, this value has a special meaning: it indicates whether the constrained interaction is covalent or not with '1' meaning covalent and '0' meaning non-covalent. If the constraint is covalent, Rosetta will not evaluate the vdW term between DownstreamResidue:Atom1 and UpstreamResidue:Atom1 and their [1,3] neighbors.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="noSamples" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      specifies how many samples the matcher, if using the classic matching algorithm ( see the matcher documentation ), will place between the x0 and x0 +- tol value. If the value in this column is n, the matcher will sample 2n+1 points for the respective parameter. Note: the number of samples is also influenced by the periodicity, with the matcher sampling around every x0.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="TorsionAB">
   <xs:complexType mixed="true">
    <xs:attribute name="x0" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      x0 specifies the optimum distance x0 for the respective value.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="xtol" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      xtol specifies the allowed tolerance of the value
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="k" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      force constant k, or the strength of the parameter. If x is the value of the constrained parameter, the score penalty applied will be: 0 if |x - x0| is less than xtol and k * ( |x - x0| - xtol ) otherwise. This is only relevant for enzdes, and is not used by the matcher.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="periodicity" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      the periodicity of the constraint. For example, if x0 is 120 and per is 360, the constraint function will have a its minimum at 120 degrees. If x0 is 120 and per is 180, the constraint function will have two minima, one at 120 degrees and one at 300 degrees. If x0 is 120 and per is 120, the constraint function will have 3 minima, at 120, 240, and 360 degrees. In the case of distances, i.e. when specifying the DistanceAB parameter, this value has a special meaning: it indicates whether the constrained interaction is covalent or not with '1' meaning covalent and '0' meaning non-covalent. If the constraint is covalent, Rosetta will not evaluate the vdW term between DownstreamResidue:Atom1 and UpstreamResidue:Atom1 and their [1,3] neighbors.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="noSamples" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      specifies how many samples the matcher, if using the classic matching algorithm ( see the matcher documentation ), will place between the x0 and x0 +- tol value. If the value in this column is n, the matcher will sample 2n+1 points for the respective parameter. Note: the number of samples is also influenced by the periodicity, with the matcher sampling around every x0.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
</xs:complexType>

<xs:complexType name="matcher_constraint_UpstreamResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Which atoms are constrained and what type of residue they are in
 </xs:documentation></xs:annotation>
 <xs:attribute name="atom1" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the first atom to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the second atom to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom3" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the third atom to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the residue to consider for the constraint
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="matcher_constraint_DownstreamResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Which atoms are constrained and what type of residue they are in
 </xs:documentation></xs:annotation>
 <xs:attribute name="atom1" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the first atom to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the second atom to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom3" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the third atom to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the residue to consider for the constraint
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="matcher_constraint_MatcherConstraint_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A complete description of an interaction pair to sample, including residue types, atoms to use as reference points to build coordinate frames, and one or Combinations.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="UpstreamResidue" type="matcher_constraint_UpstreamResidue_type"/>
  <xs:element name="DownstreamResidue" type="matcher_constraint_DownstreamResidue_type"/>
  <xs:element name="Combination" type="matcher_constraint_combination_Combination_type"/>
 </xs:choice>
</xs:complexType>

<xs:complexType name="mover_MatcherMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Wrapper mover for the matcher.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MatcherConstraint" type="matcher_constraint_MatcherConstraint_type"/>
 </xs:choice>
 <xs:attribute name="residues_for_geomcsts" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of residue selectors specifying residues to be used in geometric constraints. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="incorporate_matches_into_pose" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Incorporate the identified matches into the input pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MembraneEnergyLandscapeSampler_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sample the membrane energy function landscape using a given energy function
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sfxn_weights" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Energy function weights file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rotation_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation axis: XY, XZ, or YZ
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should I treat this like an interface landscape scanning problem?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MembranePositionFromTopologyMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes and sets the initial position of the membrane
 </xs:documentation></xs:annotation>
 <xs:attribute name="anchor_at_res1" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we do a simple reorder anchoring the membrane at residue 1?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MembraneTopology_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Inserts membrane topology from a membrane span file into a pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="span_file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   path to transmembrane topology prediction file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="attachment_termini_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="n_term"/>
  <xs:enumeration value="c_term"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="init_overlap_sequence_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="input_pose"/>
  <xs:enumeration value="xml_pose"/>
  <xs:enumeration value="both"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_MergePDB_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Align + combine parts of the pdb
 </xs:documentation></xs:annotation>
 <xs:attribute name="symm_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Symmetry definition file if pose symmetric. hack for now
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="attachment_termini" type="attachment_termini_type" default="n_term">
  <xs:annotation><xs:documentation xml:lang="en">
   termini to  attach to, can be c_term or n_term
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="xs:string" default="A">
  <xs:annotation><xs:documentation xml:lang="en">
   chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overlap_length" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   length of overlap between the two structures
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overlap_rmsd" type="real" default="0.3">
  <xs:annotation><xs:documentation xml:lang="en">
   How similiar the structures must be
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overlap_scan_range_cmdLine_pose" type="non_negative_integer" default="20">
  <xs:annotation><xs:documentation xml:lang="en">
   how far in from the term to scan on the cmdLine input pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overlap_scan_range_xml_pose" type="non_negative_integer" default="20">
  <xs:annotation><xs:documentation xml:lang="en">
   how far in from the term to scan on the xml input pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="attach_pdb" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   the pdb to be attached, this is the pdb that moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_range" type="real" default="9">
  <xs:annotation><xs:documentation xml:lang="en">
   distance from attachment and distance between new interacting residues allowed to design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packing_range" type="real" default="8">
  <xs:annotation><xs:documentation xml:lang="en">
   distance from designable_residues allowed to pack
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="detect_disulf_before_pack" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   detects disulfides before repacking, be sure to elimate them first with -detect_disulf false flag
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="do_minimize" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform energy minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_design_label" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   residues to not design or pack
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="duplicate_rmsd_pose_threshold" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   if poses are the same length they are eliminated if the rmsd check
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="init_overlap_sequence" type="init_overlap_sequence_type" default="input_pose">
  <xs:annotation><xs:documentation xml:lang="en">
   where to take the overlap sequence from input_pose, xml_pose, or both which takes from closest element on a different SS.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function used for packing and design.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_only_first" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   only does minimization on the first overlap and outputs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_overlap_positions" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   outputs overlap positions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="do_design" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform design on sequence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clash_threshold" type="real" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   score0 clash threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MergePDBatOverlapMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Makes junctions from file
 </xs:documentation></xs:annotation>
 <xs:attribute name="attachment_termini" type="attachment_termini_type" default="n_term">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overlap_length" type="non_negative_integer" default="40">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_overlap_rmsd" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="attach_pdb" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="do_minimize" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform energy minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function used for packing and design.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MetricRecorder_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record numeric metrics to a tab-delimited text file
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Torsion">
   <xs:complexType mixed="true">
    <xs:attribute name="rsd" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue this torsion belongs to
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Type of this torsion (e.g. CHI )
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="torsion" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Which of the specified torsion angles are we modifying? E.g. 1 for chi1
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Unique identifier for this torsion
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="AllChi">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      unique identifier for this tag
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="AllBB">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      unique identifier for this tag
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="stride" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   How often in terms of cycles to take a snapshot and output to file?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of output file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_limit" type="non_negative_integer" default="500">
  <xs:annotation><xs:documentation xml:lang="en">
   How much information in kb to store in memory before writing to disk
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cumulate_jobs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Combine MPI jobs into a single file?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cumulate_replicas" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Combine replicas into a single file?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prepend_output_name" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Prepend the current job output name to the file name
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="metropolis_hastings_AddNew_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Specify a new mover as a subtag and add it to the protocol
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:group ref="mover"/>
 </xs:choice>
 <xs:attribute name="sampling_weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MetropolisHastings_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs Metropolis-Hastings Monte Carlo simulations which can be used to estimate a distribution of thermodynamic states (see documentation for details)
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="mover_name" type="xs:string" default="null">
     <xs:annotation><xs:documentation xml:lang="en">
      Name attribute of previously defined mover to add
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="sampling_weight" type="real" default="1.0">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="AddNew" type="metropolis_hastings_AddNew_type"/>
 </xs:choice>
 <xs:attribute name="trials" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of MonteCarlo trials to perform
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checkpoint_interval" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How often in terms of cycles to checkpoint?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real" default="0.6">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature for Metropolis criterion
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wte" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use WTEBiasEnergy?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wte_stride" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Stride for WTE score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wte_omega" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Omega for WTE score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wte_gamma" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Gamma for WTE score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wte_grid_min" type="real" default="-10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum grid value for WTE score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wte_grid_max" type="real" default="1000.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum grid value for WTE score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wte_grid_size" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Grid size for WTE score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wte_output" type="xs:string" default="wte_bias.grid">
  <xs:annotation><xs:documentation xml:lang="en">
   Output file for WTE score function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MinMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Does minimization over sidechain and/or backbone
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="jump" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of jumps to minimize over (be sure this jump exists!). If set to "ALL", all jumps will be set to minimize. If set to "0", jumps will be set not to minimize
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="abs_score_convergence_threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep minimizing until difference before minimization is less than this threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_iter" type="non_negative_integer" default="200">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum number of iterations allowed. This default is also very loose. This and the tolerance setting both affect if you will reach convergence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="type" type="minimizer_type" default="lbfgs_armijo_nonmonotone">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimizer type. linmin, dfpmin, dfpmin_armijo, dfpmin_armijo_nonmonotone. dfpmin minimzers can also be used with absolute tolerance (add "atol" to the minimizer type).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tolerance" type="real" default="0.01">
  <xs:annotation><xs:documentation xml:lang="en">
   Criteria for convergence of minimization. The default is very loose, it's recommended to specify something less than 0.01. max_iter also affects convergence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartesian" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform cartesian minimization?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondangle" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize bond angles?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondlength" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize bond lengths?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize chi angles?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize backbone torsion angles?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize omega torsions?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb_task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Task operations specifying residues for backbone minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi_task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Task operations specifying residues for sidechain minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondangle_task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Task operations specifying residues for bond angle minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondlength_task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Task operation specifying residues for bond length minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movemap_factory" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the already-defined MoveMapFactory that will be used to alter the default behavior of the MoveMap. By default, all backbone, chi, and jump DOFs are allowed to change. A MoveMapFactory can be used to change which of those DOFs are actually enabled. Be warned that combining a MoveMapFactory with a MoveMap can result in unexpected behavior. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MinPackMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Packs then minimizes a sidechain before calling MonteCarlo on the change. It can be modified with user supplied ScoreFunction or TaskOperation. It does not do backbone, ridged body minimization.
 </xs:documentation></xs:annotation>
 <xs:attribute name="nonideal" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   open up the bond-angle- and bond-length DOFs to minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartesian" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   use cartesian minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="off_rotamer_pack" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   instead of using core::pack::min_pack, use core::pack::off_rotamer_pack
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   It is reccomended to change the weights you are using to the score12minpack weights. These are the standard score12 weights with the reference energies refit for sequence recovery profile when using the MinPackMover. Without these weights you will see a lot of Tryptophan residues on the surface of a protein. default is score12
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MinimizationRefiner_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform gradient minimization on the loop being sampled. Both the sidechainand backbone atoms are allowed to move, and no restraints are used
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to loops file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MinimizeBackbone_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform backbone mimimization of a docked structure.
 </xs:documentation></xs:annotation>
 <xs:attribute name="interface" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma separated chains to dock.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ModifyVariantType_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add or remove variant types on specified residues.
 </xs:documentation></xs:annotation>
 <xs:attribute name="add_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of variant types to add to the specified residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of variant types to remove from the specified residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="update_polymer_bond_dependent_atoms" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Rebuilds the atoms that are depenent on polymer bonds for the specified residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Select residues for modifying variant types. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="temp_interpolator_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="const"/>
  <xs:enumeration value="exponential"/>
  <xs:enumeration value="linear"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_ModulatedMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Used in replica docking.  This is a rigid body mover container, for n-replica docking.  Each modulatedMover holds n rigid body movers with different step sizes, and applies them according to the current temperature.
 </xs:documentation></xs:annotation>
 <xs:sequence>
  <xs:group ref="mover" minOccurs="1" maxOccurs="1"/>
  <xs:choice minOccurs="0" maxOccurs="unbounded">
   <xs:element name="Interp">
    <xs:complexType mixed="true">
     <xs:attribute name="key" type="xs:string" use="required">
      <xs:annotation><xs:documentation xml:lang="en">
       key to look up this Interpolator in the mover prototype map
       </xs:documentation></xs:annotation>
     </xs:attribute>
     <xs:attribute name="dim" type="non_negative_integer" default="1">
      <xs:annotation><xs:documentation xml:lang="en">
       exchange happens between neighbouring cells in a 'dim' dimensional grid; in temperature replica-exchange usually D=1.
       </xs:documentation></xs:annotation>
     </xs:attribute>
     <xs:attribute name="curve" type="temp_interpolator_type" use="required">
      <xs:annotation><xs:documentation xml:lang="en">
       Does this Interpolator use a 'const', 'linear', or 'exponential' curve?
       </xs:documentation></xs:annotation>
     </xs:attribute>
     <xs:attribute name="start" type="real">
      <xs:annotation><xs:documentation xml:lang="en">
       start temperature to interpolate from. Only used if curve = 'linear' or 'exponential'.
       </xs:documentation></xs:annotation>
     </xs:attribute>
     <xs:attribute name="end" type="real">
      <xs:annotation><xs:documentation xml:lang="en">
       end temperature to interpolate to; Only used if curve = 'linear' or 'exponential'.
       </xs:documentation></xs:annotation>
     </xs:attribute>
     <xs:attribute name="value" type="real">
      <xs:annotation><xs:documentation xml:lang="en">
       temperature value, only used if curve='const' (in other words, interpolate from 'value' to 'value'
       </xs:documentation></xs:annotation>
     </xs:attribute>
    </xs:complexType>
   </xs:element>
  </xs:choice>
 </xs:sequence>
 <xs:attribute name="tempering" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The previously declared HamiltonianExchange mover that will be used manage temperature and scorefunction exchanging
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MonteCarloRecover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Associated with GenericMonteCarlo and MonteCarloTest. Recover a pose from a GenericMonteCarloMover. Useful in conjunction with MonteCarloRecover (below) if you're running a trajectory consisting of many different sorts of movers, and would like at each point to decide whether the pose has made an improvement.
 </xs:documentation></xs:annotation>
 <xs:attribute name="MC_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of a previously defined GenericMonteCarloMover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recover_low" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   recover the lowest-energy pose, or the last pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MonteCarloReset_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Applies reset on given pose and mover (MC_name)
 </xs:documentation></xs:annotation>
 <xs:attribute name="MC_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   MC Mover to be reset
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MonteCarloTest_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Associated with GenericMonteCarlo. Simply test the MC criterion of the specified GenericMonteCarloMover and save the current pose if accept. Useful in conjunction with MonteCarloRecover (below) if you're running a trajectory consisting of many different sorts of movers, and would like at each point to decide whether the pose has made an improvement.
 </xs:documentation></xs:annotation>
 <xs:attribute name="MC_name" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   name of a previously defined GenericMonteCarloMover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MotifDnaPacker_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="clash_test_residue_names">
 <xs:restriction base="xs:string">
  <xs:enumeration value="GLY"/>
  <xs:enumeration value="ALA"/>
  <xs:enumeration value="VAL"/>
  <xs:enumeration value="NATIVE"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_MotifGraft_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  MotifGraft is a new implementation of the well know motif grafting protocol. The protocol can recapitulate previous grafts made by the previous Fortran protocol (de novo loop insertions has not been implemented yet). The current protocol ONLY performs the GRAFT of the fragment(s), hence invariably, at least, it MUST be followed by design and minimization/repacking steps
 </xs:documentation></xs:annotation>
 <xs:attribute name="context_structure" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The path/name of the context structure pdb
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="motif_structure" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The path/name of the motif pdb (can contain multiple discontiguos motif separated by the keyword TER)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="RMSD_tolerance" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum RMSD tolerance (Angstrom) for the alignment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="NC_points_RMSD_tolerance" type="real" default="340282346638528859811704183484516925440.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum RMSD tolerance (Angstrom) for the alignment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clash_atom_scale" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The relative scale of the atoms used during clash checking compared to their normal size. Set this number less than 1 if you want to use a soft clash check. Defaults to 0.5 due to legacy.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clash_score_cutoff" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum number of atomic clashes that are tolerated. The number of atom clashes are = (motif vs scaffold) + (scaffold vs pose), after the translation and mutation (to the "clash_test_residue") of the scaffold. Recommended: "5"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_fragment_size" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The minimum size fragment that can be inserted. Useful if you need to set large enough that small fragments could be produced.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="combinatory_fragment_size_delta" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Is a string separated by a colon that defines the maximum number of amino acids in which the Motif size can be variated in the N- and C-terminal regions (e.g. "positive-int:positive-int"). If several fragments are present the values should be specified by the addition of a comma (eg. 0:0, 1:2, 0:3). All the possible combinations in deltas of 1 amino acid will be tested
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_fragment_replacement_size_delta" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Is a string separated by a semicolon that specifies a range with the minimum and maximum size difference of the fragment that can be replaced in the scaffold. For example: "-1:2", means that the fragment replaced in the scaffold can be in the range of motifSize-1to motifSize+2, practically: if the motif size is 10a.a., in this example the motif can replace a fragment in the scaffold of 9,10 or 11 amino acids. (possible values: negative-int:positive-int). If several fragments are present the values should be specified by the addition of a comma (eg. -1:0, -1:2, 0:3). This option has effect only if the alignment mode is set to full_motif_bb_alignment="0"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clash_test_residue" type="clash_test_residue_names">
  <xs:annotation><xs:documentation xml:lang="en">
   The Motif will be mutated before test for clashes (possible values: "GLY", "ALA", "VAL", "NATIVE"), except if the option "NATIVE" is specified. It is recommended to use "GLY" or "ALA"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hotspots" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Is a string separated by a semicolon that defines the index of the aminoacids that are considered hotspots. i.e. that this positions will not be mutated for clash check and will be labeled in the PDBinfo. The format is "index1:index2:...:indexN"). If several fragments are present the values should be specified by the addition of a comma "(eg. 0:1:3,1:2,0:3:5)"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="full_motif_bb_alignment" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Boolean that defines the motif fragment(s) alignment mode is full Backbone or not (i.e. only N-C- points)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_independent_alignment_per_fragment" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   **EXPERIMENTAL** When more that one fragment is present, after the global alignment, this option will allow each fragment to re-align independently to the scaffold. In most cases you want this option to be turned OFF
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="graft_only_hotspots_by_replacement" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Analogous to the old multigraft code option "fragment replacement", this option will only align the scaffold, and then copy the side-chains identities and torsions (only for hotspots). No BB will be modified. This option is useful only if the RMSD between the motif and the target fragment in the scaffold is very low (e.g. less than 0.3 A), otherwise you can expect extraneous results
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_allow_if_N_point_match_aa_identity" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   This option will only perform grafts if the N-/C- point amino acids in the motif match the amino acids to be replaced in the target Scaffold fragment. This can be useful if for example one is looking to replace a fragment that starts in a S-S bridge
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_allow_if_C_point_match_aa_identity" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   This option will only perform grafts if the N-/C- point amino acids in the motif match the amino acids to be replaced in the target Scaffold fragment. This can be useful if for example one is looking to replace a fragment that starts in a S-S bridge
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="revert_graft_to_native_sequence" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   This option will revert/transform/modify the sequence of the graft piece(s) in the sequence of the native scaffold, except the hotspots. This option only can work in conjunction with the full_bb alignment mode (full_motif_bb_alignment="1") and, of course, it only makes sense if you are replacing fragments in the target scaffold that are of the same size of your motif, which is the default behavior for full_bb alignment.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_repeat_same_graft_output" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If turned on it will prevent the generation of repeated outputs, in combination with a large number of -nstruc (e.g. 100), it can be useful to extract all the matches without repetition, since when the last n-graft match is reached the mover will stop. if turned off, the usual -nstruct behavior will happen, that is: rosetta will stop only when -nstructs are generated (even if it has to repeat n-times the same result) or if the mover fails (i.e. no graft matches at all).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_cluster_tolerance" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   If this is enabled (set greater than 0), grafts will be clustered before being output in order to remove redundant grafts. This setting is the RMSD that will be used for clustering. This RMSD is not exact, but is correlated with an actual RMSD.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Only output results that pass this filter. This filter is applied before clustering. If many of your outputs fail your filters, apply the filter here will ensure that if any member of a cluster can pass the filter, that that member will be output.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MoveMapFactoryToNamedMoveMapMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds to the DataMap a MoveMap obtained from applying the MoveMapFactory.
 </xs:documentation></xs:annotation>
 <xs:attribute name="movemap" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the expected created MoveMap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movemap_factory" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the MoveMapFactory to be Processed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MultipleOutputWrapper_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice>
  <xs:element name="ROSETTASCRIPTS" type="rosetta_scripts_parser_ROSETTASCRIPTS_type"/>
  <xs:group ref="mover"/>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_output_poses" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_attempts" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_mover_state" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="pose_selector">
 <xs:choice>
  <xs:element name="AndSelector" type="pose_selector_AndSelector_complex_type"/>
  <xs:element name="ClusterPoseSelector" type="pose_selector_ClusterPoseSelector_complex_type"/>
  <xs:element name="Filter" type="pose_selector_Filter_complex_type"/>
  <xs:element name="OrSelector" type="pose_selector_OrSelector_complex_type"/>
  <xs:element name="TopNByProperty" type="pose_selector_TopNByProperty_complex_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="pose_selector_AndSelector_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="pose_selector" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="pose_property_reporter">
 <xs:choice>
  <xs:element name="EnergyReporter" type="pose_property_reporter_EnergyReporter_complex_type"/>
  <xs:element name="FilterReporter" type="pose_property_reporter_FilterReporter_complex_type"/>
  <xs:element name="RMSDReporter" type="pose_property_reporter_RMSDReporter_complex_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="pose_property_reporter_EnergyReporter_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefunction" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function weights to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="term" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score term to evaluate
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="filter">
 <xs:choice>
  <xs:element name="AASynthesisFitnessCost" type="filter_AASynthesisFitnessCost_type"/>
  <xs:element name="AlaScan" type="filter_AlaScan_type"/>
  <xs:element name="AlignmentAAFinder" type="filter_AlignmentAAFinder_type"/>
  <xs:element name="AlignmentGapInserter" type="filter_AlignmentGapInserter_type"/>
  <xs:element name="AngleToVector" type="filter_AngleToVector_type"/>
  <xs:element name="AtomCount" type="filter_AtomCount_type"/>
  <xs:element name="AtomicContact" type="filter_AtomicContact_type"/>
  <xs:element name="AtomicContactCount" type="filter_AtomicContactCount_type"/>
  <xs:element name="AtomicDistance" type="filter_AtomicDistance_type"/>
  <xs:element name="AverageDegree" type="filter_AverageDegree_type"/>
  <xs:element name="AveragePathLength" type="filter_AveragePathLength_type"/>
  <xs:element name="BindingStrain" type="filter_BindingStrain_type"/>
  <xs:element name="Boltzmann" type="filter_Boltzmann_type"/>
  <xs:element name="BundleReporter" type="filter_BundleReporter_type"/>
  <xs:element name="BuriedSurfaceArea" type="filter_BuriedSurfaceArea_type"/>
  <xs:element name="BuriedUnsatHbonds" type="filter_BuriedUnsatHbonds_type"/>
  <xs:element name="BuriedUnsatHbonds2" type="filter_BuriedUnsatHbonds2_type"/>
  <xs:element name="Ca_Irms" type="filter_Ca_Irms_type"/>
  <xs:element name="CalculatorFilter" type="filter_CalculatorFilter_type"/>
  <xs:element name="CavityVolume" type="filter_CavityVolume_type"/>
  <xs:element name="ChainBreak" type="filter_ChainBreak_type"/>
  <xs:element name="ChainCountFilter" type="filter_ChainCountFilter_type"/>
  <xs:element name="ChainExists" type="filter_ChainExists_type"/>
  <xs:element name="ClashCheck" type="filter_ClashCheck_type"/>
  <xs:element name="ClashWithTarget" type="filter_ClashWithTarget_type"/>
  <xs:element name="CombinedValue" type="filter_CombinedValue_type"/>
  <xs:element name="CompleteConnections" type="filter_CompleteConnections_type"/>
  <xs:element name="CompoundStatement" type="filter_CompoundStatement_type"/>
  <xs:element name="ConservedPosMutationFilter" type="filter_ConservedPosMutationFilter_type"/>
  <xs:element name="ConstraintFulfilmentFilter" type="filter_ConstraintFulfilmentFilter_type"/>
  <xs:element name="ConstraintScore" type="filter_ConstraintScore_type"/>
  <xs:element name="ContactMolecularSurface" type="filter_ContactMolecularSurface_type"/>
  <xs:element name="ContingentFilter" type="filter_ContingentFilter_type"/>
  <xs:element name="CoreDunbrack" type="filter_CoreDunbrack_type"/>
  <xs:element name="CoreResiduesPerElement" type="filter_CoreResiduesPerElement_type"/>
  <xs:element name="CycpepSymmetryFilter" type="filter_CycpepSymmetryFilter_type"/>
  <xs:element name="DNAClashCheck" type="filter_DNAClashCheck_type"/>
  <xs:element name="DSasa" type="filter_DSasa_type"/>
  <xs:element name="DdGScan" type="filter_DdGScan_type"/>
  <xs:element name="Ddg" type="filter_Ddg_type"/>
  <xs:element name="Delta" type="filter_Delta_type"/>
  <xs:element name="DesignableResidues" type="filter_DesignableResidues_type"/>
  <xs:element name="DiffAtomBurial" type="filter_DiffAtomBurial_type"/>
  <xs:element name="DisulfideEntropy" type="filter_DisulfideEntropy_type"/>
  <xs:element name="DisulfideFilter" type="filter_DisulfideFilter_type"/>
  <xs:element name="EnergyPerResidue" type="filter_EnergyPerResidue_type"/>
  <xs:element name="EnzScore" type="filter_EnzScore_type"/>
  <xs:element name="EnzdesScorefileFilter" type="filter_EnzdesScorefileFilter_type"/>
  <xs:element name="Expiry" type="filter_Expiry_type"/>
  <xs:element name="ExposedHydrophobics" type="filter_ExposedHydrophobics_type"/>
  <xs:element name="FNat" type="filter_FNat_type"/>
  <xs:element name="FalseFilter" type="filter_FalseFilter_type"/>
  <xs:element name="FileExist" type="filter_FileExist_type"/>
  <xs:element name="FileRemove" type="filter_FileRemove_type"/>
  <xs:element name="FilterScan" type="filter_FilterScan_type"/>
  <xs:element name="Fnat" type="filter_Fnat_type"/>
  <xs:element name="Fnonnat" type="filter_Fnonnat_type"/>
  <xs:element name="Foldability" type="filter_Foldability_type"/>
  <xs:element name="FragQual" type="filter_FragQual_type"/>
  <xs:element name="FragmentLookupFilter" type="filter_FragmentLookupFilter_type"/>
  <xs:element name="FragmentScoreFilter" type="filter_FragmentScoreFilter_type"/>
  <xs:element name="Geometry" type="filter_Geometry_type"/>
  <xs:element name="GetRBDOFValues" type="filter_GetRBDOFValues_type"/>
  <xs:element name="HBNetScore" type="filter_HBNetScore_type"/>
  <xs:element name="HBondAcceptor" type="filter_HBondAcceptor_type"/>
  <xs:element name="HBondDonor" type="filter_HBondDonor_type"/>
  <xs:element name="HSSTriplet" type="filter_HSSTriplet_type"/>
  <xs:element name="HbondsToAtom" type="filter_HbondsToAtom_type"/>
  <xs:element name="HbondsToResidue" type="filter_HbondsToResidue_type"/>
  <xs:element name="HeavyAtom" type="filter_HeavyAtom_type"/>
  <xs:element name="HelixBendFilter" type="filter_HelixBendFilter_type"/>
  <xs:element name="HelixHelixAngle" type="filter_HelixHelixAngle_type"/>
  <xs:element name="HelixKink" type="filter_HelixKink_type"/>
  <xs:element name="HelixPairing" type="filter_HelixPairing_type"/>
  <xs:element name="Holes" type="filter_Holes_type"/>
  <xs:element name="IRmsd" type="filter_IRmsd_type"/>
  <xs:element name="I_sc" type="filter_I_sc_type"/>
  <xs:element name="IfThenFilter" type="filter_IfThenFilter_type"/>
  <xs:element name="InterRepeatContactsPerResidue" type="filter_InterRepeatContactsPerResidue_type"/>
  <xs:element name="InterfaceBindingEnergyDensityFilter" type="filter_InterfaceBindingEnergyDensityFilter_type"/>
  <xs:element name="InterfaceHbonds" type="filter_InterfaceHbonds_type"/>
  <xs:element name="InterfaceHoles" type="filter_InterfaceHoles_type"/>
  <xs:element name="InterfaceHydrophobicResidueContacts" type="filter_InterfaceHydrophobicResidueContacts_type"/>
  <xs:element name="InterfacePacking" type="filter_InterfacePacking_type"/>
  <xs:element name="InterlockingAroma" type="filter_InterlockingAroma_type"/>
  <xs:element name="IntraRepeatContactsPerResidue" type="filter_IntraRepeatContactsPerResidue_type"/>
  <xs:element name="Irms" type="filter_Irms_type"/>
  <xs:element name="LRmsd" type="filter_LRmsd_type"/>
  <xs:element name="LigBurial" type="filter_LigBurial_type"/>
  <xs:element name="LigInterfaceEnergy" type="filter_LigInterfaceEnergy_type"/>
  <xs:element name="LongestContinuousApolarSegment" type="filter_LongestContinuousApolarSegment_type"/>
  <xs:element name="LongestContinuousPolarSegment" type="filter_LongestContinuousPolarSegment_type"/>
  <xs:element name="LoopAnalyzerFilter" type="filter_LoopAnalyzerFilter_type"/>
  <xs:element name="Lrmsd" type="filter_Lrmsd_type"/>
  <xs:element name="MPSpanAngle" type="filter_MPSpanAngle_type"/>
  <xs:element name="MembAccesResidueLipophilicity" type="filter_MembAccesResidueLipophilicity_type"/>
  <xs:element name="MolarMass" type="filter_MolarMass_type"/>
  <xs:element name="MolecularMass" type="filter_MolecularMass_type"/>
  <xs:element name="MotifScore" type="filter_MotifScore_type"/>
  <xs:element name="MoveBeforeFilter" type="filter_MoveBeforeFilter_type"/>
  <xs:element name="MultipleSigmoids" type="filter_MultipleSigmoids_type"/>
  <xs:element name="Mutations" type="filter_Mutations_type"/>
  <xs:element name="NMerPSSMEnergy" type="filter_NMerPSSMEnergy_type"/>
  <xs:element name="NMerSVMEnergy" type="filter_NMerSVMEnergy_type"/>
  <xs:element name="Ncontacts" type="filter_Ncontacts_type"/>
  <xs:element name="NeighborType" type="filter_NeighborType_type"/>
  <xs:element name="NetCharge" type="filter_NetCharge_type"/>
  <xs:element name="NonSequentialNeighbors" type="filter_NonSequentialNeighbors_type"/>
  <xs:element name="OligomericAverageDegree" type="filter_OligomericAverageDegree_type"/>
  <xs:element name="Operator" type="filter_Operator_type"/>
  <xs:element name="OversaturatedHbondAcceptorFilter" type="filter_OversaturatedHbondAcceptorFilter_type"/>
  <xs:element name="PackStat" type="filter_PackStat_type"/>
  <xs:element name="ParallelBetaPairingPreference" type="filter_ParallelBetaPairingPreference_type"/>
  <xs:element name="PeptideDeriver" type="filter_PeptideDeriver_type"/>
  <xs:element name="PeptideInternalHbondsFilter" type="filter_PeptideInternalHbondsFilter_type"/>
  <xs:element name="PoseComment" type="filter_PoseComment_type"/>
  <xs:element name="PoseInfo" type="filter_PoseInfo_type"/>
  <xs:element name="PreProline" type="filter_PreProline_type"/>
  <xs:element name="PropagateClashCheck" type="filter_PropagateClashCheck_type"/>
  <xs:element name="Range" type="filter_Range_type"/>
  <xs:element name="ReadPoseExtraScoreFilter" type="filter_ReadPoseExtraScoreFilter_type"/>
  <xs:element name="RelativePose" type="filter_RelativePose_type"/>
  <xs:element name="RelativeSegment" type="filter_RelativeSegment_type"/>
  <xs:element name="RemoveLigandFilter" type="filter_RemoveLigandFilter_type"/>
  <xs:element name="RepackWithoutLigand" type="filter_RepackWithoutLigand_type"/>
  <xs:element name="RepeatParameter" type="filter_RepeatParameter_type"/>
  <xs:element name="ReplicateFilter" type="filter_ReplicateFilter_type"/>
  <xs:element name="Report" type="filter_Report_type"/>
  <xs:element name="ResInInterface" type="filter_ResInInterface_type"/>
  <xs:element name="ResidueBurial" type="filter_ResidueBurial_type"/>
  <xs:element name="ResidueChirality" type="filter_ResidueChirality_type"/>
  <xs:element name="ResidueConformerFilter" type="filter_ResidueConformerFilter_type"/>
  <xs:element name="ResidueCount" type="filter_ResidueCount_type"/>
  <xs:element name="ResidueDepth" type="filter_ResidueDepth_type"/>
  <xs:element name="ResidueDistance" type="filter_ResidueDistance_type"/>
  <xs:element name="ResidueIE" type="filter_ResidueIE_type"/>
  <xs:element name="ResidueLipophilicity" type="filter_ResidueLipophilicity_type"/>
  <xs:element name="ResidueSelectionDistance" type="filter_ResidueSelectionDistance_type"/>
  <xs:element name="ResidueSetChainEnergy" type="filter_ResidueSetChainEnergy_type"/>
  <xs:element name="Rmsd" type="filter_Rmsd_type"/>
  <xs:element name="RmsdFromResidueSelectorFilter" type="filter_RmsdFromResidueSelectorFilter_type"/>
  <xs:element name="RmsdSimple" type="filter_RmsdSimple_type"/>
  <xs:element name="RotamerBoltzmannWeight" type="filter_RotamerBoltzmannWeight_type"/>
  <xs:element name="RotamerBoltzmannWeight2" type="filter_RotamerBoltzmannWeight2_type"/>
  <xs:element name="SSBisectddGFilter" type="filter_SSBisectddGFilter_type"/>
  <xs:element name="SSDegree" type="filter_SSDegree_type"/>
  <xs:element name="SSElementLengthFilter" type="filter_SSElementLengthFilter_type"/>
  <xs:element name="SSMotifFinder" type="filter_SSMotifFinder_type"/>
  <xs:element name="SSPrediction" type="filter_SSPrediction_type"/>
  <xs:element name="SSShapeComplementarity" type="filter_SSShapeComplementarity_type"/>
  <xs:element name="SSamount" type="filter_SSamount_type"/>
  <xs:element name="Sasa" type="filter_Sasa_type"/>
  <xs:element name="SavePoseConstraintToFile" type="filter_SavePoseConstraintToFile_type"/>
  <xs:element name="SaveResfileToDisk" type="filter_SaveResfileToDisk_type"/>
  <xs:element name="ScoreCutoffFilter" type="filter_ScoreCutoffFilter_type"/>
  <xs:element name="ScorePoseSegmentFromResidueSelectorFilter" type="filter_ScorePoseSegmentFromResidueSelectorFilter_type"/>
  <xs:element name="ScoreType" type="filter_ScoreType_type"/>
  <xs:element name="SecondaryStructure" type="filter_SecondaryStructure_type"/>
  <xs:element name="SecondaryStructureCount" type="filter_SecondaryStructureCount_type"/>
  <xs:element name="SecondaryStructureHasResidue" type="filter_SecondaryStructureHasResidue_type"/>
  <xs:element name="SecretionPredictionFilter" type="filter_SecretionPredictionFilter_type"/>
  <xs:element name="SequenceDistance" type="filter_SequenceDistance_type"/>
  <xs:element name="SequenceRecovery" type="filter_SequenceRecovery_type"/>
  <xs:element name="ShapeComplementarity" type="filter_ShapeComplementarity_type"/>
  <xs:element name="SheetTopology" type="filter_SheetTopology_type"/>
  <xs:element name="ShowConstraints" type="filter_ShowConstraints_type"/>
  <xs:element name="SidechainRmsd" type="filter_SidechainRmsd_type"/>
  <xs:element name="Sigmoid" type="filter_Sigmoid_type"/>
  <xs:element name="SimpleHbondsToAtomFilter" type="filter_SimpleHbondsToAtomFilter_type"/>
  <xs:element name="SimpleMetricFilter" type="filter_SimpleMetricFilter_type"/>
  <xs:element name="SpanTopologyMatchPose" type="filter_SpanTopologyMatchPose_type"/>
  <xs:element name="SpecificResiduesNearInterface" type="filter_SpecificResiduesNearInterface_type"/>
  <xs:element name="StemFinder" type="filter_StemFinder_type"/>
  <xs:element name="Stochastic" type="filter_Stochastic_type"/>
  <xs:element name="StrandCurvatureByLevels" type="filter_StrandCurvatureByLevels_type"/>
  <xs:element name="StrandHelixGeometryFilter" type="filter_StrandHelixGeometryFilter_type"/>
  <xs:element name="StubScore" type="filter_StubScore_type"/>
  <xs:element name="StubScoreLoops" type="filter_StubScoreLoops_type"/>
  <xs:element name="SymUnsatHbonds" type="filter_SymUnsatHbonds_type"/>
  <xs:element name="SymmetricMotif" type="filter_SymmetricMotif_type"/>
  <xs:element name="TMsAAComp" type="filter_TMsAAComp_type"/>
  <xs:element name="TMsSpanMembrane" type="filter_TMsSpanMembrane_type"/>
  <xs:element name="TaskAwareSASA" type="filter_TaskAwareSASA_type"/>
  <xs:element name="TaskAwareScoreType" type="filter_TaskAwareScoreType_type"/>
  <xs:element name="TerminusDistance" type="filter_TerminusDistance_type"/>
  <xs:element name="Time" type="filter_Time_type"/>
  <xs:element name="Torsion" type="filter_Torsion_type"/>
  <xs:element name="TotalSasa" type="filter_TotalSasa_type"/>
  <xs:element name="TrueFilter" type="filter_TrueFilter_type"/>
  <xs:element name="worst9mer" type="filter_worst9mer_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="filter_AASynthesisFitnessCost_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Measures the fitness cost of an amino acid sequence
 </xs:documentation></xs:annotation>
 <xs:attribute name="fitnessCostPerATP" type="real" default="0.00001">
  <xs:annotation><xs:documentation xml:lang="en">
   Sets the fitness loss cost per metabolic cost (think ATP usage) for synthesis
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="non_negative_integer" default="1000">
  <xs:annotation><xs:documentation xml:lang="en">
   threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_AlaScan_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform alanine scanning over a particular jump-defined interface, with a certain number of repeats with which to average results. Repacking is suggested.
 </xs:documentation></xs:annotation>
 <xs:attribute name="interface_distance_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance from chain 1 to define chain 2's interface, and vice versa
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="partner1" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform alanine mutations on chain 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="partner2" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform alanine mutations on chain 2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   An inter-chain jump over which the calculation is performed, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeats" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of repeats over which to average
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Assume a symmetric pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Repack in a radius around the mutated residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_AlignmentAAFinder_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Cleans an alignment, such that all amino acids are measured in the same chemical environment
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude_AA_threshold" type="real" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   How large may the score be of the an amino acid in the target sequence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="alignment_file" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   alignment_file to be cleaned
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_mover" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   Relax mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_seqid_threshold" type="real" default="0.50">
  <xs:annotation><xs:documentation xml:lang="en">
   Sequence identity threshold of indel motif matching loops
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="available_AAs_file" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   output path
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_AlignmentGapInserter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Cleans an alignment, such that all amino acids are measured in the same chemical environment
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_score_diffs" type="real_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of exclude site thresholds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="alignment_file" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   alignment_file to be cleaned
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_clean_seq_num" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sequence number in the alignment to filter. If unspecifed all will be filtered
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cleaned_alignment_file" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   output file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="available_AAs_file" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   input file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nbr_e_threshold" type="real" default="0.1">
  <xs:annotation><xs:documentation xml:lang="en">
   res res energy for neighbor classification
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_seqid_thresholds" type="real_cslist" default="0.65">
  <xs:annotation><xs:documentation xml:lang="en">
   Sequence identity thresholds of indel motif matching loops
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="indel_motif_radius" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   If indel motif radius is 2 then 2 residues will be included up and downstream from target position
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_AngleToVector_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter on the value of the angle between a vector between two atoms in the first residue of a chain and a reference vector.
 </xs:documentation></xs:annotation>
 <xs:attribute name="min_angle" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum angle to pass the filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_angle" type="real" default="90.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum angle to pass the filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atm1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   First atom in vector definition
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atm2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Seocnd atom in vector definition
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="char">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain whose first residue's two atoms are in question
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refx" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   x coordinate of vector
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refy" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   y coordinate of vector
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refz" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   z coordinate of vector
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_AtomCount_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="atom_limit" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="char" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_AtomicContact_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="distance" type="real" default="4.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance below which a contact counts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="range1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Space-separated pair of integers indicating the first residue range over which to evaluate the filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue1" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number that may be making atomic contacts with residue2; only read if range1 is not provided
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue2" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number that may be making atomic contacts with the range of residues range1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sidechain" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Count sidechain contacts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="backbone" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Count contacts to the backbone
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="protons" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Count contacts made by protons
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="partition_types">
 <xs:restriction base="xs:string">
  <xs:enumeration value="none"/>
  <xs:enumeration value="jump"/>
  <xs:enumeration value="chain"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_AtomicContactCount_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Counts sidechain carbon-carbon contacts among the specified residues under the given distance cutoff.
 </xs:documentation></xs:annotation>
 <xs:attribute name="distance" type="real" default="4.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance across which to count a contact
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="non_local" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Detect only non-local contacts, i.e., sequence distance more than 2. Positions in separate chains are automatically considered non-local
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_contact" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Only count one atom contact per residue. This option ignores normalize_by_sasa and normalize_by_carbon_count
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="count_SD_NE1" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   In addition to carbon atoms, count methionine SD and tryptophan NE1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="partition" type="partition_types" default="none">
  <xs:annotation><xs:documentation xml:lang="en">
   Partition across which to define contacts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normalize_by_sasa" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Normalize contacts by sasa
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normalize_by_carbon_count" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Normalize contacts by number of carbons
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss_only" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Only consider SS elements (i.e., non-L)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="taskA" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of task operations to use for selecting residue set A.  This is an alternative to using "task_operations" to select a single group of residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="taskB" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of task operations to use for selecting residue set B.  This is an alternative to using "task_operations" to select a single group of residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which to define contacts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the sym dof -- a symmetry-aware jump identifier
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_AtomicDistance_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filters on the distance between two specific atoms or the minimal distance between atoms of two specific types, on one or two residues.
 </xs:documentation></xs:annotation>
 <xs:attribute name="distance" type="real" default="4.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance threshold between atoms in question
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomtype1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Type desired for first atom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomtype2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Type of second atom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomname1" type="xs:string" default="CB">
  <xs:annotation><xs:documentation xml:lang="en">
   Name desired for first atom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomname2" type="xs:string" default="CB">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of second atom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue1" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   First residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue2" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Second residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res1_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Alternative to using the residue1 option. This residue selector must select exactly one residue!. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Alternative to using the residue2 option. This residue selector must select exactly one residue!. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_AverageDegree_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  What is the average degree connectivity of a subset of residues? Found to be useful for discriminating non-interacting designs from natural complexes.
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Lower limit below which the filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_threshold" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Count neighbors for residues closer than this distance
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_AveragePathLength_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the average shortest path length on the 'network' of the single-chain protein topology, considering residues as nodes and peptide and disulfide bonds as edges.
 </xs:documentation></xs:annotation>
 <xs:attribute name="path_tightness" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Tightness of path length threshold; lower values are more stringent
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_path_length" type="real" default="99999">
  <xs:annotation><xs:documentation xml:lang="en">
   The absolute maximum, protein-size-independent, to pass the filter for path length.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_BindingStrain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the energetic strain in a bound monomer. Automatically respects symmetry
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which to compute binding
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Strain must be less than this value to pass
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_mover" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   Relax mover employed to relieve the unbound state
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Boltzmann_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Compute the boltzmann-weighted sum of positive and negative filter values.
 </xs:documentation></xs:annotation>
 <xs:attribute name="fitness_threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold below which fitness must fall
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real" default="0.6">
  <xs:annotation><xs:documentation xml:lang="en">
   Boltzmann temperature for simulation (kT)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="triage_threshold" type="real" default="-9999">
  <xs:annotation><xs:documentation xml:lang="en">
   Above this value (e.g. delta score/delta ddg), a negative state will be counted in the Boltzmann fitness calculation. This prevents the dilution of negative states
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="norm_neg" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   normalize the fitness of the mutation state in relative to the original state. When triage_threshold is used the number of negative states is changed, therefore norm_neg is needed in order to compare mutations in the same position.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="positive_filter_names" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Names of positive filters
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="negative_filter_names" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Names of negative filters
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="anchors" type="real_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold energy values above which positive states really hurt
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="behav">
 <xs:restriction base="xs:string">
  <xs:enumeration value="ALWAYS_TRUE"/>
  <xs:enumeration value="ALWAYS_FALSE"/>
  <xs:enumeration value="FILTER"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_BundleReporter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_type" type="xs:string" default="total_score">
  <xs:annotation><xs:documentation xml:lang="en">
   Score type on which to filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="behavior" type="behav" default="ALWAYS_TRUE">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter behavior
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold above which the filter may fail (do not need or want to specify if filter behavior is ALWAYS_TRUE or ALWAYS_FALSE)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_sequence" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Report the bundle sequence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_three_letter_code" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   In reporting the bundle sequence, use three letter codes (may be desirable in case of noncanonical amino acids, in particular, where using the AA or one letter code would be a poor choice).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="BuriedSurfaceAreaFilter_atom_mode_choices">
 <xs:restriction base="xs:string">
  <xs:enumeration value="all_atoms"/>
  <xs:enumeration value="hydrophobic_atoms"/>
  <xs:enumeration value="polar_atoms"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_BuriedSurfaceArea_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter computes the total buried surface area for a pose or a subset of a pose selected by a residue selector.  It discards poses with buried surface area below (or above) a user-defined threshold value.  Note that this filter operates ONLY on canonical L-amino acids, their D-amino acid counterparts, and glycine; it will compute a buried surface area of zero for all other types.
 </xs:documentation></xs:annotation>
 <xs:attribute name="select_only_FAMILYVW" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, then only hydrophobic residues and alanine (phe, ala, met, ile, leu, tyr, val, or trp) are counted.  If false (the default), then all residues are counted.  Note that this is combined with AND logic to create the final residue selection if a residue selector is also provided (that is, residues that are selected by the selector AND which are in the set FAMILYVW are used to compute the buried surface area).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_out_low" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true (the default), then poses with buried surface area below the cutoff are rejected.  If false, then poses with buried surface area above the cutoff are rejected.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutoff_buried_surface_area" type="real" default="500">
  <xs:annotation><xs:documentation xml:lang="en">
   The buried surface area below which (or above which, if "filter_out_low" is false) a pose is rejected.  Defaults to 500 square Angstroms, an arbitrarily-chosen value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom_mode" type="BuriedSurfaceAreaFilter_atom_mode_choices" default="all_atoms">
  <xs:annotation><xs:documentation xml:lang="en">
   The subset of atoms to use in the calculation.  Defaults to "all_atoms", but allowed values also include "hydrophobic_atoms" and "polar_atoms".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   An optional, previously-defined residue selector.  If provided, then only the selected residues are used in computing buried surface area.  If not provided, then all residues are used. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_BuriedUnsatHbonds_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   residue selector that tells the filter to restrict the Unsat search to only those residues. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_legacy_options" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   revert to legacy options (equivalent to old, original BuriedUnsat Filter; WARNING! If this is true, will overwrite all other options
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="generous_hbonds" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   count all h-bonds (not just those scored by the default scorefxn in rosetta
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_hbond_energy" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Max energy for an hbond to be accepted as making an hbond. This can go positive!!! Defaults to -score::hb_max_energy (which defaults to 0).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_vsasa" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   use vsasa insteady of legacy sasa for burial calculation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_surface_res" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   many polar atoms on surface atoms get flagged as buried unsat becuause they are occluded by a long sidechina (e.g. Lys or Arg) that could easily move out of the way; this option ignores surface residues, as deinfed by SASA (default) or sc_neighbors if use_sc_neighbors=true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_bb_heavy_unsats" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   ignore bb heayy atom unsats when using hbnet-style behavior
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sc_neighbors" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   use sc_neighbors insteady of SASA for burial calculations
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_ddG_style" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   perform ddG style calcation: the Unsats are calculated by subtracting all unsats in bound state from unbound state; this is how the original BuriedUnsatHBondsFilter works
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_interface" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   restrict unsat search only to interface residues; if true and more than one chain it's ignored
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="print_out_info_to_pdb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   print all info to pdb file into addition to tracer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_number" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   The jump over which to evaluate the filter; only applies to use_ddG_style
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dalphaball_sasa" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use DAlphaBall to calculate SASA.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutoff" type="non_negative_integer" default="20">
  <xs:annotation><xs:documentation xml:lang="en">
   The upper threshold for counted buried unsat H-bonds, above which the filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="probe_radius" type="real" default="1.4">
  <xs:annotation><xs:documentation xml:lang="en">
   probe radius to use for SASA buriedness calculations; default is grabbed from sasa_calculator_probe_radius in options code, which defaults to 1.4
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="burial_cutoff" type="real" default="0.3">
  <xs:annotation><xs:documentation xml:lang="en">
   used to determine burial; deafault legacy SASA atomic_burial_cutoff is 0.3; default VSASA cutoff is 0.1; if use_sc_neighbors=true, default becomes 4.4 or can be user-specified to sc_neighbor cutoff that is desired
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="probe_radius_apo" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   If set greater than 0, use a different probe_radius for the apo phase of use_ddG_style.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="burial_cutoff_apo" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   If set greater than 0, use a different burial_cutoff for the apo phase of use_ddG_style.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_surface_cutoff" type="real" default="45.0">
  <xs:annotation><xs:documentation xml:lang="en">
   cutoff to determine which residues are surface if ignore_surface_res=true; default is 45.0 for SASA, 20.0 for VSASA and 2.0 if use_sc_neighbors=true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomic_depth_selection" type="real" default="-1">
  <xs:annotation><xs:documentation xml:lang="en">
   Include only atoms past a certain depth. Depth is from edge of SASA surface to center of atom. Pose converted to poly-LEU before SASA surface calculation. -1 to disable.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomic_depth_probe_radius" type="real" default="2.3">
  <xs:annotation><xs:documentation xml:lang="en">
   Probe radius for atomic_depth_selection. Set this high to exclude pores. Set this low to allow the SASA surface to enter pores.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomic_depth_resolution" type="real" default="0.25">
  <xs:annotation><xs:documentation xml:lang="en">
   Resolution for atomic depth calculations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomic_depth_apo_surface" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   If set greater than 0, atoms must be less deep than this to be considered buried during ddG calculations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_reporter_behavior" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   report as filter score the type of unsat turned on; this is now TRUE by default
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_hbnet_behavior" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   no heavy unstas allowed (will return 9999); if no heavy unstas, will count Hpol unsats; FALSE by default; if set to true, will NOT use reporter behavior
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_all_unsats" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   report all unsats
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_all_heavy_atom_unsats" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   report all heavy atom unsats; IF ALL REORTER OPTIONS ARE FALSE, THIS BECOMES TRUE AND DEFAULT REPORTS ALL HEAVY UNSATS
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_sc_heavy_atom_unsats" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   report side chain heavy atom unsats
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_bb_heavy_atom_unsats" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   report back bone heavy atom unsats
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_nonheavy_unsats" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   report non heavy atom unsats
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomic_depth_deeper_than" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, only atoms deeper than atomic_depth_selection are included. If false, only atoms less deep than atomic_depth_selection are included.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomic_depth_poly_leu" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Convert pose to poly-leu before calculating depth? Gives stable, sequence independent values that align with approximate_buried_unsat_penalty.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_names" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For multicomponent symmetry: what jump(s) used for ddG-like separation. (From Dr. Bale: For multicomponent systems, one can simply pass the names of the sym_dofs that control the master jumps. For one component systems, jump can still be used.)  IF YOU DEFIN THIS OPTION, Will use ddG-style separation for the calulation; if you do not want this, pass a residue selector instead of defining symdofs.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_BuriedUnsatHbonds2_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="jump_number" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump, numbered sequentially from 1, that defines the interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutoff" type="non_negative_integer" default="20">
  <xs:annotation><xs:documentation xml:lang="en">
   Upper threshold beyond which the filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="generous_hbonds" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a generous definition of H-bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sasa_burial_cutoff" type="real" default="0.01">
  <xs:annotation><xs:documentation xml:lang="en">
   SASA threshold to define residue burial
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="AHD_cutoff" type="real" default="120">
  <xs:annotation><xs:documentation xml:lang="en">
   Cutoff for AHD angle, in degrees, to define a hydrogen bond
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist_cutoff" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Cutoff for distance, in Angstroms, to define a hydrogen bond
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hxl_dist_cutoff" type="real" default="3.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Cutoff for distance, in Angstroms, to define a hydrogen bond to a hydroxyl
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sulph_dist_cutoff" type="real" default="3.3">
  <xs:annotation><xs:documentation xml:lang="en">
   Cutoff for distance, in Angstroms, to define a hydrogen bond to a sulfur
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="metal_dist_cutoff" type="real" default="2.7">
  <xs:annotation><xs:documentation xml:lang="en">
   Cutoff for distance, in Angstroms, to define a hydrogen bond to a metal
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Ca_Irms_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="-30">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold below which the interaction score filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold above which the interaction score filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which the interface is defined, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_CalculatorFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter based on an equation and the results of other filters.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="VAR">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Unique name to identify value for use in equation.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Specifiy a constant value.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="filter" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Evaluate given filter at calculator evaluation time.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="filter_name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Evaluate given filter at calculator evaluation time.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="reported" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Retrieve reported value. See 'report_at_end=false' documentation in ParsedProtocol.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Var">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Unique name to identify value for use in equation.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Specifiy a constant value.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="filter" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Evaluate given filter at calculator evaluation time.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="filter_name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Evaluate given filter at calculator evaluation time.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="reported" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Retrieve reported value. See 'report_at_end=false' documentation in ParsedProtocol.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="var">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Unique name to identify value for use in equation.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      Specifiy a constant value.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="filter" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Evaluate given filter at calculator evaluation time.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="filter_name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Evaluate given filter at calculator evaluation time.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="reported" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Retrieve reported value. See 'report_at_end=false' documentation in ParsedProtocol.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="equation" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Equation to evaluate filter value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter passes if equation value less than threshold, fails otherwise.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_CavityVolume_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Uses Will Sheffler's packing code (packstat) to estimate the total volume of intra-protein voids. The value returned is the sum of volumes of the computed cavities in Angstroms 3. A value of 20 is approximately equal to the volume of a carbon atom. This filter currently has no options or threshold, and currently always returns true, but that is likely to change in the future. This calculation of cavity volume is inherently stochastic (packstat is stochastic). Therefore, setting the temperature to be permissive for the variation in results with the same input or using the average value of many decoys (nstruct) is recommended. The filter should not count cavities that are exposed to solvent.
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ChainBreak_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Measures the number of chainBreaks in the pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of chainbreaks allowed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   which chain should we check for
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tolerance" type="real" default="0.13">
  <xs:annotation><xs:documentation xml:lang="en">
   the allowed angstrom deviation from the mean optimal bond length
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ChainCountFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Counts the number of chains in the Pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="max_chains" type="xs:integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Max allowed number of chains (filter fails if more) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ChainExists_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="char" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ClashCheck_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculate the number of heavy atoms clashing between building blocks.
 </xs:documentation></xs:annotation>
 <xs:attribute name="clash_dist" type="real" default="3.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance between heavy atoms below which they are considered to be clashing. Note: A hard-coded cutoff of 2.6 is set for contacts between backbone carbonyl oxygens and nitrogens for bb-bb hbonds.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_names" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   Only use with multicomponent systems. Comma-separated list of name(s) of the sym_dof(s) corresponding to the building block(s) between which to check for clashes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nsub_bblock" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of subunits in the symmetric building block. Does not need to be set for multicomponent systems.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutoff" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of allowable clashes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to true, then will output a pymol selection string to the logfile with the clashing positions/atoms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write2pdb" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to true, then will output a pymol selection string to the output pdb with the clashing positions/atoms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ClashWithTarget_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter on number of clashes with a target pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="align_to_pdbname" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   PDB name to which to align
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="context_pdbname" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   PDB name of the potentially-clashing target
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clash_score_cutoff" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   PDB name of the potentially-clashing target
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clash_residues" type="xs:string" default="ALA">
  <xs:annotation><xs:documentation xml:lang="en">
   Compute clash as though the target pose residues are this type (by name3)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ref_start" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Start residue in the target pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ref_end" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   End residue in the target pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pose_start" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Start residue in the main pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pose_end" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   End residue in the main pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_CombinedValue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="factor" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="temp" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="filter_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_CompleteConnections_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="char" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_CompoundStatement_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="AND">
   <xs:complexType mixed="true">
    <xs:attribute name="filter_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="OR">
   <xs:complexType mixed="true">
    <xs:attribute name="filter_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="XOR">
   <xs:complexType mixed="true">
    <xs:attribute name="filter_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="NOR">
   <xs:complexType mixed="true">
    <xs:attribute name="filter_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="NAND">
   <xs:complexType mixed="true">
    <xs:attribute name="filter_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="ORNOT">
   <xs:complexType mixed="true">
    <xs:attribute name="filter_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="ANDNOT">
   <xs:complexType mixed="true">
    <xs:attribute name="filter_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="NOT">
   <xs:complexType mixed="true">
    <xs:attribute name="filter_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="invert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ConservedPosMutationFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Returns true if the given pose passes the filter, false otherwise. In this case, a pose passes if it less than max_allowed_conserved_pos_mutations_ mutations at conserved position. The decision whether a given position counts as conserved is made by the RestrictConservedLowDdgOperation task operation to prevent duplication of code
 </xs:documentation></xs:annotation>
 <xs:all>
  <xs:element name="ProteinInterfaceDesign" type="to_ProteinInterfaceDesign_type" minOccurs="0" maxOccurs="1"/>
  <xs:element name="RestrictToAlignedSegments" type="to_RestrictToAlignedSegments_type" minOccurs="0" maxOccurs="1"/>
 </xs:all>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_occurrence_data" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we restrict positions to mutations that have occurrence larger than zero
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_to_repacking" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="convert_scores_to_probabilities" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_aa_probability" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_native" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="probability_larger_than_current" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_pose_profile_length_mismatch" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debug" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="conservation_cutoff_aligned_segments" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="conservation_cutoff_protein_interface_design" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ddG_filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="conservation_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ddG_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_conerved_pos_mutations" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of allowed mutations of conserved positions.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ConstraintFulfilmentFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Counts how many constraints the pose violates (AtomPair/Angle/Dihedral). Returns False if more than .33%
 </xs:documentation></xs:annotation>
 <xs:attribute name="distance" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Select distance (csttype=AtomPair) constraints.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Select angle (csttype=Angle) constraints.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dihedral" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Select dihedral (csttype=Dihedral) constraints.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ConstraintScore_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the score of a specific set of constraints generated by Constraint Generators. This filter makes a copy of the pose and clears all constraints from the copy. It then uses the provided Constraint Generators to generate a set of constraints, and scores the pose using a basic scorefunction. This basic scorefunction consists only of constraint score terms.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If the computed constraint score is less than or equal to this value, the filter returns true. Otherwise, it returns false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constraint_generators" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   ConstraintGenerators that define constraints for the pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ContactMolecularSurface_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculates the contact molecular surface area on the target defined by the target_selector, and the area is weighted by the cloest distance between the target and the binder. The binder is defined by the binder residue selector
 </xs:documentation></xs:annotation>
 <xs:attribute name="min_interface" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The filter fails is the calculated interface area is less than the given value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The weight factor of the cloest distance betweent the distance that is multiplied by the area by each surface dot.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="near_squared_size" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The weight factor of the cloest distance betweent the distance that is multiplied by the area by each surface dot.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, print extra calculation details to the tracer.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="quick" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, do a quicker, less accurate calculation by reducing the density.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apolar_target" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Only look at non-polar atoms on the target side.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Explicitly set which residues are on each side of the interface using residue_selectors.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="binder_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Explicitly set which residues are on each side of the interface using residue_selectors.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ContingentFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A special filter that allows movers to set its value (pass/fail). This value can then be used in the protocol together with IfMover to control the flow of execution depending on the success of the mover.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="core_dunbrack_filter_types">
 <xs:restriction base="xs:string">
  <xs:enumeration value="average"/>
  <xs:enumeration value="num_frustrated_residue"/>
  <xs:enumeration value="total"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_CoreDunbrack_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="type" type="core_dunbrack_filter_types" default="average">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_CoreResiduesPerElement_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XSD XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="core_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_CycpepSymmetryFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The CycpepSymmetryFilter examines a cyclic peptide for internal backbone symmetry matching a particular cyclic symmetry type (e.g. c2, c3, c4, etc.) or mirror symmetry type (e.g. s2, s4, etc.), and returns true if and only if the backbone is symmetric.
 </xs:documentation></xs:annotation>
 <xs:attribute name="symmetry_repeats" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of repeats in this type of symmetry.  For example, for c3 symmetry, one would provide "3" as input.  Defaults to 2 (for c2 symmetry).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mirror_symmetry" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Is this a type of cyclic symmetry with mirror operations, such as s2, s4, or s6 symmetry?  If true, symmetry_repeats must be a multiple of 2.  Defaults to false (for c2 symmetry -- i.e. not s2 symmetry).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The cutoff, in degrees, for the difference between two dihedral angles before they are considered "different" angles.  This is used when comparing mainchain torsion values of differet residues.  Defaults to 10.0 degrees.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   An optional residue selector set to select the cyclic peptide.  If not provided, the whole pose is used. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_DNAClashCheck_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Checks for clashes between docking residues and DNA backbone
 </xs:documentation></xs:annotation>
 <xs:attribute name="fa_rep_thresh" type="real" default="50.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold fa_rep clash score.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dna_a_path" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File path to DNA A chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dna_b_path" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File path to DNa B chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_DSasa_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  filters based upon whether the dsasa is between a set of bounds
 </xs:documentation></xs:annotation>
 <xs:attribute name="lower_threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   lower bound on dsasa
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_threshold" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   upper bound on dsasa
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_DdGScan_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Takes a set of task operations from the user in order to more precisely specify a set of residues to analyze via ddG scanning. Individually mutates each of the residues to alanine (or whatever other residue is defined in the task operations) and calculates the change in binding energy (ddG).
 </xs:documentation></xs:annotation>
 <xs:attribute name="repeats" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   How many times to repeat the ddg calculations; the average of all the repeats is returned.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_diffs" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Whether to report the changes in binding energy upon mutation (pass true), or the total binding energy for the mutated structure (pass false).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ddG_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Handle definition of a special ddG mover.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write2pdb" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Whether to write the residue-specific ddG information to the output .pdb file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Ddg_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the binding energy for the complex and if it is below the threshold returns true. o/w false. Useful for identifying complexes that have poor binding energy and killing their trajectory.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="-15">
  <xs:annotation><xs:documentation xml:lang="en">
   If ddG value is lower than this value, filter returns True (passes).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold_min" type="real" default="-999999">
  <xs:annotation><xs:documentation xml:lang="en">
   If ddG value is higher than this value, filter returns True (passes).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Specifies which chains to separate. Jump=1 would separate the chains interacting across the first chain termination, jump=2, second etc.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeats" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Averages the calculation over the number of repeats. Note that ddg calculations show noise of about 1-1.5 energy units, so averaging over 3-5 repeats is recommended for many applications.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the complex be repacked in the bound and unbound states prior to taking the energy difference? If false, the filter turns to a dG evaluator. If repack=false repeats should be turned to 1, b/c the energy evaluations converge very well with repack=false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Note: DdgFilter autodetermines symmetry from input pose - symmetry option has no effect.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_bound" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the complex be repacked in the bound state? Note: If repack=true, then the complex will be repacked in the bound and unbound state by default. However, if the complex has already been repacked in the bound state prior to calling the DdgFilter then setting repack_bound=false allows one to avoid unnecessary repetition.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_unbound" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the complex be repacked in the unbound state? Note: If repack=true, then the complex will be repacked in the bound and unbound state by default. However, if a relaxation mover is provided that repacks the mover in the unbound state, then repack_unbound=false avoids unnecessary repetition.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_bound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the relax mover (if specified) be applied to the bound state? Note: the bound state is not relaxed by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_unbound" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the relax mover (if specified) be applied to the unbound state? Note: the unbound state IS relaxed by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="translate_by" type="real" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   How far to translate the unbound pose. Note: Default is now 100 Angstroms rather than 1000.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optionally define a mover which will be applied prior to computing the system energy in the unbound state.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If specified, the given filter will be calculated in the bound and unbound state for the score, rather than the given scorefunction. Repacking, if any, will be done with the provided scorefunction.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Allows you to specify a list of chain numbers to use to calculate the ddg, rather than a single jump. You cannot move chain 1, moving all the other chains is the same thing as moving chain 1, so do that instead. Use independently of jump.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extreme_value_removal" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Compute ddg value times, sort and remove the top and bottom evaluation. This should reduce the noise levels in trajectories involving 1000s of evaluations. If set to true, repeats must be set to at least 3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdbs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Dump debugging PDB files. Dumps 6 pdbs per instance: BOUND_before_repack, BOUND_after_repack, BOUND_after_relax, UNBOUND_before_repack, UNBOUND_after_repack, and UNBOUND_after_relax.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Delta_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the difference in a filter's value compared to the input structure
 </xs:documentation></xs:annotation>
 <xs:attribute name="range" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   how much above/below the baseline to allow?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lower" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   the threshold is upper/lower? Use both if the threshold is an exact value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   the threshold is upper/lower? Use both if the threshold is an exact value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   the name of a predefined filter for evaluation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_mover" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   called at parse-time before setting the baseline.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="unbound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   translates the partners by 10000A before evaluating the baseline and the filters. Allows evaluation of the unbound pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_unbound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   relax the unbound state w/ relax mover?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="changing_baseline" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   reset baseline value to current value after every accept
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   if unbound is set, this can be used to set the jump along which to translate.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_pdb" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   use reference pose from disk
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_DesignableResidues_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filters based on minimum and maximum number of designable residues allowed; useful for automatic interface detection
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lower_cutoff" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   This option presently has no effect.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_cutoff" type="non_negative_integer" default="1000">
  <xs:annotation><xs:documentation xml:lang="en">
   This option presently has no effect.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packable" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Determine all packable positions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="designable" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Determine all designable positions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_DiffAtomBurial_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter compares the SASA upon ligand binding for two different atoms
 </xs:documentation></xs:annotation>
 <xs:attribute name="res1_pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res1_res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2_pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2_res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomname1" type="xs:string" default="CA">
  <xs:annotation><xs:documentation xml:lang="en">
   name of atom 1 (given as a string); defaults to CA on res1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomname2" type="xs:string" default="CA">
  <xs:annotation><xs:documentation xml:lang="en">
   name of atom 2 (given as a string); defaults to CA on res2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sample_type" type="xs:string" default="more">
  <xs:annotation><xs:documentation xml:lang="en">
   can be either 'more' (atom1 less than atom2) or 'less' (atom1 less than atom2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_DisulfideEntropy_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the change in deltaSconf_folding caused by formation of the disulfide bonds in a given topology. S_conf refers to the configurational entropy of the protein chain only.
 </xs:documentation></xs:annotation>
 <xs:attribute name="tightness" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Larger values for tightness lead to a higher (and thus looser) threshold.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lower_bound" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Fixed threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_DisulfideFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="targets" type="refpose_enabled_residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Residues to evaluate for possible cross-interface disulfides
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_EnergyPerResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tests the energy of a particular residue (e.g. pdb_num=1), or interface (whole_interface=1), or whole protein (whole_protein=1), or a set of residues (e.g. resnums=1,2,3).
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_type" type="xs:string" default="total_score">
  <xs:annotation><xs:documentation xml:lang="en">
   score type
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="energy_cutoff" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   energy threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="whole_interface" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If whole_interface is set to 1, it computes all the energies for the interface residues defined by the jump_number and the interface_distance_cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="whole_protein" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   tests the energy of the interface if true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_number" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   The jump which describes the interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_distance_cutoff" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Along with the jump_number, it defines the residues on the interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb_bb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Needs to be set to true if you want to evaluate backbone-backbone hydrogen bonding energies
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   a list of residue numbers (1,2,3 for pose numbering or 1A,2A,3A for pdb numbering) to filter through
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="around_resnums" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   a list of residues that you want to evaluate the energy around
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="around_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   distance measure that helps define the region to evaluate the energy
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_EnzScore_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  filter that calculates the energy based upon either the ligand (speficified with resnum), a set of cstid, or the whole pose; one of these must be specified
 </xs:documentation></xs:annotation>
 <xs:attribute name="cstid" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Expects cstid string to be of format [0-9]+[A-Z], where the number is constraint number and trailing letter is temlplate id i.e. either A or B
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_type" type="xs:string" default="total_score">
  <xs:annotation><xs:documentation xml:lang="en">
   type of score to be evaluated; default is total_score
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="energy_cutoff" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   filters the energy based upon this cutoff value
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="whole_pose" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   determines whether to evalue the score based upon the whole pose or not
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_EnzdesScorefileFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  according to author, this function hasn't been fully implemented yet
 </xs:documentation></xs:annotation>
 <xs:attribute name="requirements" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   requirements file name; contains all of the parameters required for this filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Expiry_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Has a predetermined number of seconds elapsed since the start of the trajectory? If so, return false (to stop the trajectory), else return true.
 </xs:documentation></xs:annotation>
 <xs:attribute name="seconds" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   how many seconds until this triggers failure?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ExposedHydrophobics_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the SASA for each hydrophobic residue (A, F, I, M, L, W, V, Y). The score returned reflects both the number of solvent-exposed hydrophobic residues and the degree to which they are exposed. The score is calculated as follows. For each hydrophobic residue, if the SASA is above a certain cutoff value (default=20), then the value of ( SASA - sasa_cutoff ) is added to the calculated score. The filter passes if the calculated score is less than the user-specified threshold.
 </xs:documentation></xs:annotation>
 <xs:attribute name="sasa_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If a residue has SASA lower than this value, it is considered buried and does not affect the score returned by the ExposedHydrophobics filter.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If a protein has an ExposedHydrophobics total score below this value, it passes the filter. If a negative threshold is specified, the filter will always pass.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_FNat_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter for poor values of Fnat, a docking metric
 </xs:documentation></xs:annotation>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold for Fnat, a docking metric above which the filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which the computation is carried out, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_FalseFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter that always returns false
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_FileExist_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Does a file exist on disk? Useful to see whether we're recovering from a checkpoint
 </xs:documentation></xs:annotation>
 <xs:attribute name="filename" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   what filename to test?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_zero_byte" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if true, files that are merely place holders (contain nothing) are treated as nonexistant (filter returns false).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_FileRemove_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Remove a file from disk.
 </xs:documentation></xs:annotation>
 <xs:attribute name="filenames" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   list of file names separated by comma, e.g., 3r2x_0001.pdb,3r2x_0002.pdb
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delete_content_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if true, only eliminates the contents of the file but leaves a placeholder file of size 0bytes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_FilterScan_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Scan all mutations allowed by a particular set of TaskOperations and test them against a filter
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="triage_filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   If this filter evaluates to false, don't include the mutation in the resulting resfile
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep the native conformation?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdb_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name to which to dump PDBs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   The filter to be evaluated on every mutation passing triage_filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_mover" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover with which to relax poses
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_all" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Report all values
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The output resfile name; if left unspecified, it will be the input PDB name plus .resfile
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile_general_property" type="xs:string" default="nataa">
  <xs:annotation><xs:documentation xml:lang="en">
   Default resfile command
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rtmin" type="xs:string" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do rtmin on each residue prior to relaxation, which can lead to some energy noise but improves the fit of the mutated residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_log_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of scorefile log
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Dump PDBs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_filters" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of filters to run
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_filter_thresholds" type="real_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of filter thresholds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="log_pdb_number" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Does score log includes pdb numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="log_separator" type="xs:string" default="	">
  <xs:annotation><xs:documentation xml:lang="en">
   Which seperator character to use in score log
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Fnat_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="-30">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold below which the interaction score filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold above which the interaction score filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which the interface is defined, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native_contacts" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name describing native contacts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Fnonnat_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="-30">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold below which the interaction score filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold above which the interaction score filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which the interface is defined, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native_contacts" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name describing native contacts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Foldability_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter is designed as a means of quantifying Nobu and Rie's "foldability" metric, in which a structure is refolded several times and compared to the desired structure.
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   (start_res;end_res) and selector are mutually exclusive. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tries" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   number of attempted fragment insertions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_res" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The N-terminal residue of the piece of backbone to be rebuilt. (start_res;end_res) and selector are mutually exclusive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_res" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The C-terminal residue of the piece of backbone to be rebuilt. (start_res;end_res) and selector are mutually exclusive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="motif" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The secondary structure + abego to be used for the backbone region to be rebuilt. Taken from input pose if not specified.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_pose_abego" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Requires motif to be specified
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sequence" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use sequence for fragment insertion mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_poses" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   dump pdbs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   A folding attempt is considered successful if the end of the refolded region is at most distance_threshold from its original location.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="frag_qual_filter_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="num_goodfrag"/>
  <xs:enumeration value="coverage"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_FragQual_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="type" type="frag_qual_filter_type" default="num_goodfrag">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ratio_cutoff" type="real" default="0.3">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="begin" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd_cutoff" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="frag" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="lookup_mode_types">
 <xs:restriction base="xs:string">
  <xs:enumeration value="first"/>
  <xs:enumeration value="closest"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_FragmentLookupFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Lookup pose sub-fragments within a target fragment library, filtering pose which contain fragments not present in the library. Targets a specified fragment lookup, which defines a fragment specification and store of candidate fragments. Filter extracts all fragments from the pose via the specification passes these fragments to the lookup. Filter fails if any pose fragment can not be found within the store. Lookup results, including a lookup success/failure flag and lookup confidence score for successful lookups cached within the filter after each apply call and exposed via the FragmentLookupFilter::lookup_result member. Fragment stores are identified by a lookup name and a target store path. The default store defined in the FragmentStoreManager class via the options system.
 </xs:documentation></xs:annotation>
 <xs:attribute name="lookup_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Identification name for the fragment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="store_path" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Target store path. Default defined by FragmentStoreManager.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lookup_mode" type="lookup_mode_types">
  <xs:annotation><xs:documentation xml:lang="en">
   Lookup mode used by filter. First - Returns the first fragment matching the lookup criteria.  Faster but not guarenteed to identify the closest potential library fragment. Closest - Returns the closest fragment with the target lookup. Significantly slower.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   chain number (?)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of failed attempts allowed before returning.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_FragmentScoreFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter based on any score that can be calculated in fragment_picker.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scoretype" type="xs:string" default="FragmentCrmsd">
  <xs:annotation><xs:documentation xml:lang="en">
   Which attribute to filter on. See FragmentScoreManager::register_score_maker for options.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="6">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter threshold.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="direction" type="xs:string" default="-">
  <xs:annotation><xs:documentation xml:lang="en">
   Choose whether you want outputs to be greater or less than the threshold. Right now the only options are greater than ('+') or less than ('-'); if you put anything else, all will pass.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="compute" type="xs:string" default="average">
  <xs:annotation><xs:documentation xml:lang="en">
   How to calculate filter value. Right now the options are average, maximum, or minimum of the scores collected.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fragment_size" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of fragments to be computed (default 3)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sort_by" type="xs:string" default="FragmentCrmsd">
  <xs:annotation><xs:documentation xml:lang="en">
   Choose how to pick the best fragment from the final list of candidates at each position. Default is by FragmentCrmsd, and RamaScore, SecondarySimilarity, and TotalScore are enabled by default. You can use any other fragment score if you include it via a weights file by using the command line option "-frags::scoring::config"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="outputs_folder" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Folder where you would like external files to go, such as secondary structure prediction and blast checkpoint files. If not set, files will be placed in current working directory.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="outputs_name" type="xs:string" default="pose">
  <xs:annotation><xs:documentation xml:lang="en">
   Base name of intermediate files, i.e. the name of your design.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="csblast" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Directory of csblast program, ex. software/csblast-2.2.3_linux64
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blast_pgp" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to blastpgp for creating psipred file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="placeholder_seqs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to placeholder sequence database for creating psipred file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sparks-x" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to sparks-x directory
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sparks-x_query" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to sparks-x script, "buildinp_query.sh"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="psipred" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to runpsipred_single script.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="vall_path" type="xs:string" default="/Users/vmulligan/rosetta_git_workingcopy/Rosetta/main/database//sampling/vall.jul19.2011.gz">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to vall database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="frags_scoring_config" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to scoring config file (required).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_frags" type="non_negative_integer" default="200">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of fragments to be picked (default 200)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_candidates" type="non_negative_integer" default="1000">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of candidates per position (default 1000)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="print_to_pdb" type="xs:boolean" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Prints scores for all residues analyzed to the pdb.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_res" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   The N-terminal residue of the piece of backbone to be analyzed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_res" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   The C-terminal residue of the piece of backbone to be analyzed. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Geometry_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filters poses based upon their geometry (omega angle, for example(
 </xs:documentation></xs:annotation>
 <xs:attribute name="omega" type="real" default="165.0">
  <xs:annotation><xs:documentation xml:lang="en">
   cutoff for omega angle of peptide plane, Cis-proline is also considered. Works for multiple chains
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cart_bonded" type="real" default="20.0">
  <xs:annotation><xs:documentation xml:lang="en">
   bond angle and length penalty score
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cstfile" type="xs:string" default="filename">
  <xs:annotation><xs:documentation xml:lang="en">
   if specified, the given constraint file will be used to introduce constraints into the pose. Only atom pair constraints will be used. The constraint scores will be checked to see if they are lower than cst_cutoff. If the constraint score is greater than cst_cutoff, the pose will fail.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_cutoff" type="real" default="10000.0">
  <xs:annotation><xs:documentation xml:lang="en">
   cutoff for use with cstfile option
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   starting residue number to scan
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="non_negative_integer" default="100000">
  <xs:annotation><xs:documentation xml:lang="en">
   ending residue number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="count_bad_residues" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the number of residues failing the filter will be computed and returned as the filter score by report_sm(). If false, the filter score will be either 1.0 (i.e. all residues pass) or 0.0 (i.e. a residue failed the filter). Default: false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If specified, only residues selected by the user-specified residue selector will be scanned. By default, all residues are selected. If start and/or end are also set, only residues selected by the residue_selector AND within the range [start, end] will be scanned. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="type_for_xyz_char">
 <xs:restriction base="xs:string">
  <xs:pattern value="x|y|z"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_GetRBDOFValues_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculates either the current translation or rotation across a user specified jump (referenced by jump_id or sym_dof_name).
 </xs:documentation></xs:annotation>
 <xs:attribute name="jump" type="xs:integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump number of movable jump for which to calculate the translation or rotation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Sym_dof_name for movable jump for which to calculate the translation or rotation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Output jump and corresponding displacement or angle to tracer.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="axis" type="type_for_xyz_char" default="x">
  <xs:annotation><xs:documentation xml:lang="en">
   Axis in local coordinate frame about which to calculate the translation or rotation (not currently set up to handle off axis values).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="get_disp" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to true (and get_disp is false), then will calculate the displacement across the specified jump.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="get_angle" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to true (and get_angle is false), then will calculate the angle of rotation about the specified jump.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="init_angle" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial angle value to add to each calculated value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="init_disp" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial displacement value to add to each calculated value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="get_init_value" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Get the initial displacement or angle for the specified jump from the SymDofMoverSampler
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_HBNetScore_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Reads stored residue subset created by HBNet(StapleInterface) and sums all of the sc-sc and sc-bb hbonds in the network. Adds BuriedUnsatHbondFilter score for a penalty.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Score must be less than or equal to this value to pass
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hbond_threshold" type="real" default="-0.25">
  <xs:annotation><xs:documentation xml:lang="en">
   Disregard hbonds weaker than this
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_HBondAcceptor_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="char" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hbond_acceptor_limit" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_HBondDonor_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="char" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hbond_donor_limit" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="hss_triplet_output_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="dist"/>
  <xs:enumeration value="angle"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_HSSTriplet_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="hsstriplets" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_dist" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_dist" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_angle" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_angle" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_helix_direction" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_dssp" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_id" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_type" type="hss_triplet_output_type">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_HbondsToAtom_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter counts the number of residues that form sufficiently energetically favorable H-bonds to a selected atom
 </xs:documentation></xs:annotation>
 <xs:attribute name="partners" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   H-bonding partner expectation, below which counts as failure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="energy_cutoff" type="real" default="-0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Energy below which a H-bond counts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb_bb" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Count backbone-backbone H-bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="backbone" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Count backbone H-bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sidechain" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Count sidechain H-bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_num" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Particular residue of interest
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atomname" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom name to which to examine H-bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_HbondsToResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter counts the number of residues that form sufficiently energetically favorable H-bonds to a selected residue
 </xs:documentation></xs:annotation>
 <xs:attribute name="partners" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   H-bonding partner threshold for passing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="energy_cutoff" type="real" default="-0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Energy below which a H-bond counts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb_bb" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Count backbone-backbone H-bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="backbone" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Count backbone H-bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sidechain" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Count sidechain H-bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Particular residue of interest
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from_same_chain" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Count residues from the same chain in H-bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from_other_chains" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Count residues from the other chains in H-bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_HeavyAtom_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="char" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="heavy_atom_limit" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_HelixBendFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter will check each helix turn in target HelixID helix for further-than-optimal Hbond pairs and curvature below (smaller angles) than cutoff, it reports the minimum angle value. If no secondary structure string or blueprint are provided, then the pose secstruct is parsed using DSSP.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="155.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum bending angle allowed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="HelixID" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Helix number over which to calculate bend and Hbond pair distance according to blueprint numbers
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to blueprint file from which to parse strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Secondary structure string to use for selecting helices
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_HelixHelixAngle_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  calculate the distance or angle between helices
 </xs:documentation></xs:annotation>
 <xs:attribute name="start_helix_1" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   residue where helix 1 starts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_helix_2" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   residue where helix 2 starts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_helix_1" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   residue where helix 1 ends
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_helix_2" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   residue where helix 2 ends
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_angle" type="real" default="40">
  <xs:annotation><xs:documentation xml:lang="en">
   minimal angle to pass
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_angle" type="real" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   maximal angle to pass
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   minimal distance to pass
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist_max" type="real" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   maximal distance to pass
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_or_dist" type="xs:string" default="angle">
  <xs:annotation><xs:documentation xml:lang="en">
   calculate angle or distance
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist_by_atom" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   whether to calcualte distance between the closeset BB atoms, or the helix vectors
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="helix_num_2" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   choose helices by DSSP helix number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="helix_num_1" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   choose helices by DSSP helix number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_HelixKink_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="bend" type="real" default="20.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct" type="dssp_string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="refpose_enabled_residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="helix_start" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="helix_end" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="helix_pairing_output_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="cross"/>
  <xs:enumeration value="align"/>
  <xs:enumeration value="dist"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_HelixPairing_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="helix_pairings" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct" type="dssp_string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_dssp" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bend" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cross" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="align" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_id" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_type" type="helix_pairing_output_type">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Holes_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculates holes value(?) and filters based upon topology
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   only calculate holes score for residues in residue_selector; The holes calculation is performed on the Pose as whole (ignoring the ResidueSelector), but the score that's reported is the sum of only the atoms in the residue selector.  The Holes score is a sum of individual atoms/residues anyway (technically PoseBalls), so by only reporting a specific selection, get location-specific data. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cmd" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   expects you to use -holes::dalphaball
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold value for the filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude_bb_atoms" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   don't include backbone (bb) atoms in residue selection (residue_selector case)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normalize_per_residue" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   for residue selector case, nomralize per residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normalize_per_atom" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   for residue selector case, normalize per atom; defaults to true if residue_selector if normalize_per_atom and normalize_per_residue not explicitly defined by user
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_IRmsd_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculates an interface rmsd. Rmsd is calculated over all backbone atoms for those residues found in the interface of the reference structure. Interface residues are those residues which are within 8 Angstroms of any residue on the other side of the interface.
 </xs:documentation></xs:annotation>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   RMSD threshold above which we would fail the filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump for calculating docking RMSD, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_I_sc_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="-30">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold below which the interaction score filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold above which the interaction score filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which the interface is defined, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_IfThenFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Evaluate to a value contingent on the true/false value of other filters. Each of the IF clauses are evaluated in order. If the testfilter evaluates to true, the real-valued result of the IfThenFilter is the real-valued return value of the valuefilter, multiplied by the corresponding weight. (If inverttest is true, a false testfilter will cause valuefilter evaluation.) Alternatively, you can omit the valuefilter, and give a literal value with the value parameter (which will also be multiplied by the given weight). If none of the IF clauses return true for their testfilters, then the real-valued result of the ELSE clause valuefilter (or the corresponding literal value) multiplied by the weight is used as the value instead. For truth value testing, the default is to return true if the value is less than or equal to the given threshold. If lower_threshold is true, then IfThenFilter returns true if the value is greater than or equal to the threshold.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="IF">
   <xs:complexType mixed="true">
    <xs:attribute name="valuefilter" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TODO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Value of the filter used when returned true
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="weight" type="real" default="1.0">
     <xs:annotation><xs:documentation xml:lang="en">
      The value will be multiplied with weight in case of true
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="testfilter" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      If testfilter returns true its value will be multiplied by the weight as final result
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="inverttest" type="rosetta_bool" default="false">
     <xs:annotation><xs:documentation xml:lang="en">
      Inverses the filter result
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="ELIF">
   <xs:complexType mixed="true">
    <xs:attribute name="valuefilter" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TODO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Value of the filter used when returned true
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="weight" type="real" default="1.0">
     <xs:annotation><xs:documentation xml:lang="en">
      The value will be multiplied with weight in case of true
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="testfilter" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      If testfilter returns true its value will be multiplied by the weight as final result
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="inverttest" type="rosetta_bool" default="false">
     <xs:annotation><xs:documentation xml:lang="en">
      Inverses the filter result
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="ELSE">
   <xs:complexType mixed="true">
    <xs:attribute name="valuefilter" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      If all all the testfilters failed, the return value is the value of the valuefilter multiplied by its weight
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Value of the valuefilter
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="weight" type="real" default="1.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Weight of the valuefilter
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lower_threshold" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_InterRepeatContactsPerResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  filter based upon the inter repeat contacts
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   filter threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="numb_repeats" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   number of repeats
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sequenceSeperation" type="non_negative_integer" default="6">
  <xs:annotation><xs:documentation xml:lang="en">
   seperation in the sequence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distanceThreshold" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   max distance between two CA atoms being compared
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_InterfaceBindingEnergyDensityFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Takes two other filters: Ddg and Sasa. Computes Ddg/Sasa and returns the value. Fails if the value is not below some threshold.
 </xs:documentation></xs:annotation>
 <xs:attribute name="sasa_filter" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   the name of a previously defined Sasa filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ddG_filter" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   the name of a previously defined Ddg filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="-0.015">
  <xs:annotation><xs:documentation xml:lang="en">
   sets the fail condition for the filter, this filter fails if Ddg/Sasa is not below the threshold.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_InterfaceHbonds_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Counts the number of hydrogen bonds across the interface that defines by the jump number
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which score function to use to find the hydrogen bonds?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="xs:integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   How many hydrogen bonds should there be across the interface?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hbond_energy" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   score cut of the hbond energy to ignore bad hydrogen bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   jump number that defines the interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="salt_bridge_mode" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Only count the number of salt bridges?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="salt_bridge_distance" type="real" default="4.0">
  <xs:annotation><xs:documentation xml:lang="en">
   cutoff distance for salt bridges
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_His_chain_terminus" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   treat histidine and chain terminus as charge residues?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_InterfaceHoles_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="non_negative_integer" default="200">
  <xs:annotation><xs:documentation xml:lang="en">
   Holes score threshold above which we fail the filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which to evaluate the holes score, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_InterfaceHydrophobicResidueContacts_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Counts the number of hydrophobic residues on the target that have at least a certain hydrophobic score
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residues should be counted as hydrophobic target residues? The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="binder_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residues are part of the binder so that the interface can be defined? The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Which scorefunction do you want to use? Only fa_rep, fa_sol, and fa_atr will be kept.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="xs:integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   How many hydrophobic residues should have at least the score cutoff?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_cut" type="real" default="-0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   What score cut should be used to determine whether a hydrophobic residue is contacted?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apolar_res" type="xs:string" default="ALA,CYS,CYD,PHE,ILE,LEU,MET,PRO,THR,VAL,TRP,TYR">
  <xs:annotation><xs:documentation xml:lang="en">
   What residues should count as hydrophobic residues (comma separated name3 list)?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_InterfacePacking_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculates Will Sheffler's holes score for atoms at inter-building block interfaces.. Works with symmetric assemblies with one or more building blocks. Be sure to set the -holes:dalphaball option!
 </xs:documentation></xs:annotation>
 <xs:attribute name="distance_cutoff" type="real" default="9.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum distance between heavy atoms of the primary subunit(s) and neighboring subunits in order for the holes score to be included in the calculation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="contact_dist" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum distance between CA or CB atoms of the primary subunit(s) and the other subunits to be included in the subpose used for the holes calculations. (Should this be change to heavy atoms and set to be the same value as distance_cutoff?)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lower_cutoff" type="real" default="-5">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum passing holes score.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_cutoff" type="real" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum passing holes score.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_names" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Must be provided. Name(s) of the sym_dof(s) corresponding to the building block(s) for which to calculate the holes score(s).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="multicomp" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   When set to true, means that the system has multiple components. When set to false, the system has a single component.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_InterlockingAroma_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist" type="real" default="5.5">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_IntraRepeatContactsPerResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  filter based upon the intra repeat contacts
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="numb_repeats" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   number of repeats
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sequenceSeperation" type="non_negative_integer" default="6">
  <xs:annotation><xs:documentation xml:lang="en">
   seperation in the sequence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distanceThreshold" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   max distance between two CA atoms being compared
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Irms_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="-30">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold below which the interaction score filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold above which the interaction score filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which the interface is defined, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_LRmsd_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="non_negative_integer" default="200">
  <xs:annotation><xs:documentation xml:lang="en">
   Holes score threshold above which we fail the filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which to evaluate the holes score, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_LigBurial_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  this filter basically works exactly as ResidueBurialFilter, but with the advantage that it has the capability to figure out resid of the ligand
 </xs:documentation></xs:annotation>
 <xs:attribute name="lig_id" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   an input other than 0 (or no input at all) indicates no ligand present
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   distance around which the ligand to count neighboring atoms
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbors" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   integer representing the number of neighbors count
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_LigInterfaceEnergy_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  filters energies where ligand is in the interface
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="energy_cutoff" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   energy threshold for filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_cstE" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   boolean as to whether to include the cstE
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_number" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If rb_jump_ is unset, determine jump number according to the number of jumps currently in the pose previously, if this filter was used in RosettaScripts, rb_jump_ was initialized to jump number according to the number of jumps in the pose when the XML was parsed. This enables adding a ligand to the pose after the XML is parsed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_distance_cutoff" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   used to determine if the ligand is in the interface?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_LongestContinuousApolarSegment_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The LongestContinuousApolarSegment filter counts the number of amino acid residues in the longest continuous stretch of apolar amino acids in any chain of your pose (or, optionally, in a residue selection).  Optionally, it can ignore the polar stretches at the N- and C-termini of chains.
 </xs:documentation></xs:annotation>
 <xs:attribute name="exclude_chain_termini" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, apolar stretches at the ends of chains are not counted.  If false, they are.  True by default.  Note that if this is set to true, an entirely apolar chain will not be counted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_out_high" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, poses with more than the cutoff number of residues in the longest apolar stretch will be rejected.  If false, poses with fewer than the cutoff number of residues in the longest apolar stretch will be rejected.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutoff" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum (or minimum, if "filter_out_high" is set to "false") number of residues in the longest apolar stretch that will still allow the pose to pass this filter.  Default 5.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   An optional, previously-defined residue selector.  If provided, the filter will only consider stretches of apolar residues that have at least one residue in the selection.  Not used if not specified. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_LongestContinuousPolarSegment_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The LongestContinuousPolarSegment filter counts the number of amino acid residues in the longest continuous stretch of polar amino acids in any chain of your pose (or, optionally, in a residue selection).  Optionally, it can ignore the polar stretches at the N- and C-termini of chains.
 </xs:documentation></xs:annotation>
 <xs:attribute name="exclude_chain_termini" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, polar stretches at the ends of chains are not counted.  If false, they are.  True by default.  Note that if this is set to true, an entirely polar chain will not be counted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="count_gly_as_polar" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, glycine is considered "polar" for purposes of this filter.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_out_high" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, poses with more than the cutoff number of residues in the longest polar stretch will be rejected.  If false, poses with fewer than the cutoff number of residues in the longest polar stretch will be rejected.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutoff" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum (or minimum, if "filter_out_high" is set to "false") number of residues in the longest polar stretch that will still allow the pose to pass this filter.  Default 5.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   An optional, previously-defined residue selector.  If provided, the filter will only consider stretches of polar residues that have at least one residue in the selection.  Not used if not specified. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_LoopAnalyzerFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This Filter calls LoopAnalyzerMover to compute a bunch of loop-specific metrics. You can also try GeometryFilter
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Loop" type="loop_subelement_Loop_type"/>
 </xs:choice>
 <xs:attribute name="use_tracer" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if false, store results in the PoseExtraScores / DataCache for output at the end of the run. If true, print results to a Tracer object
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to loops file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Lrmsd_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="-30">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold below which the interaction score filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold above which the interaction score filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which the interface is defined, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_MPSpanAngle_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the angle (in degrees) with the membrane normal for each TM span, and its relevant score.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   if MPSpanAngle score is lower than threshold, than pass.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tm" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   which TM to calculate angle for. if zero will test all tms
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ang_max" type="real" default="90">
  <xs:annotation><xs:documentation xml:lang="en">
   maxiaml angle to pass
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ang_min" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   minimal angle to pass
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_file" type="xs:string" default="TR">
  <xs:annotation><xs:documentation xml:lang="en">
   where to print the result to. default to TRACER. use auto for job_name_MPSpanAngle.txt
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_or_score" type="xs:string" default="angle">
  <xs:annotation><xs:documentation xml:lang="en">
   whether to return the angle or the score. either angle or score
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_MembAccesResidueLipophilicity_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the dG from dsTbL profiles of every residue in every span, and multiply it by its relative SASA
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   if score lower than threshold, pass
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   whehter to print a table of dG and SASA
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_burial" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   disregard the SASA in the calculation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_MolarMass_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="char" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mass_limit" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_MolecularMass_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="char" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mass_limit" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_MotifScore_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter on the motif score developed by Will Scheffler
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="999">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold above which the filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_MoveBeforeFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Apply a given mover to the pose before calculating the results from another filter. Note that, like all filters, MoveBeforeFilter cannot change the input pose - the results of the submover will only be used for the subfilter calculation and then discarded.
 </xs:documentation></xs:annotation>
 <xs:attribute name="mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the mover to be applied in advance of filter execution
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the mover to be applied in advance of filter execution
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter succeeded by the mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter succeeded by the mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="multiple_sigmoids_subtag_RelativePose_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing RelativePose filters to be applied
 </xs:documentation></xs:annotation>
 <xs:attribute name="use_native_pdb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   boolean as to whether or not to use the native pdb
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   which is the reference pose to read from disk.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry_definition" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   ; default is none
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_mover" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   which relax mover to apply after threading; by default, it is null
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   which filter to apply; default is null
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   actual name given to the filter being used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="baseline" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   indicates whether or not a baseline should be used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pose" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   filename for where to dump the pdb pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="alignment" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   alignment is expecting X1:Y1,X2:Y2,X3:Y3... where X is the protein on disk (target) and Y is the active structure (starting structure). When no alignment is given it is implied that the poses are trivially aligned 1..nres
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packing_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   radius of shell around each residue to repack after threading. The more use use the longer the simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rtmin" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   do rtmin following repack?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="thread" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Normally you'd want this to be true. This is not the case only if you're estimating baselines for the disk pose before doing an actual run.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="unbound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   before threading, should we dissociate the complex?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="copy_stretch" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   rather than threading the residue identities on the pose read from disk, copy the aligned segment from the current pose onto the pose read from disk (residue identities + conformations). No repacking is done, and then goes straight to relax. Obviously the segment should be prealigned for this to make any sense, and should probably only be used on entire chains rather than stretches within chains. Any way, take care in using. No guarantees.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="copy_comments" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   a comma-delimited list of pose-comment key values to copy from the reference pose (the current pose computed in the trajectory) to the relative pose (from disk). Useful if conformational change needs to be communicated from the reference pose to the relative pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="multiple_sigmoids_subtag_Sigmoid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing Sigmoid filters to be applied
 </xs:documentation></xs:annotation>
 <xs:attribute name="steepness" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Steepness of the sigmoid function where $$f(x) = 1 / ( 1 + (steepness)e^{ (x - offset - baseline) } ) )$$
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="offset" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset of the sigmoid function where $$f(x) = 1 / ( 1 + (steepness)e^{ (x - offset - baseline) } ) )$$
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="negate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Substitute x for 1-x in evaluation (as the Boolean operator NOT).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Values above this threshold pass as true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter whose value to transform with the sigmoid function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="baseline_checkpoint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name to keep track of the baseline value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="multiple_sigmoids_subtag_Operator_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing Operators to be applied
 </xs:documentation></xs:annotation>
 <xs:attribute name="operation" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   operation to perform: sum, product, min, or max
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   filter threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="negate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   multiply return value by -1. Useful in optimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_subvalues" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   report subvalues?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filters" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   list of previously defined filters on which to carry out the operation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="multi_relative" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If set, duplicates filters to include relative_pose_names.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relative_pose_names" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma seperated list of pose names
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="logarithm" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
    take the log(x) value of the resulting operator.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_MultipleSigmoids_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Apply an architecture of sigmoid and relative pose filters to a set of PDBs
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="RelativePose" type="multiple_sigmoids_subtag_RelativePose_type"/>
  <xs:element name="Sigmoid" type="multiple_sigmoids_subtag_Sigmoid_type"/>
  <xs:element name="Operator" type="multiple_sigmoids_subtag_Operator_type"/>
 </xs:choice>
 <xs:attribute name="threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Value above which the filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="file_names" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   PDBs to apply to
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Mutations_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Determines mutated residues in current pose as compared to a reference pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rate_threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Lower cutoff for the acceptable recovery rate for a passing design. Will fail if actual rate is below this threshold.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mutation_threshold" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Upper cutoff for the number of mutations for an acceptable design. Only matters if report_mutations is set to true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_mutations" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Defaults to false. If set to true, then will act as a filter for the number of mutations rather than the rate.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Defaults to false. If set to true, then will output the mutated positions and identities to the tracer.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packable" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Defaults to false. If set to true, then will also consider mutations at packable positions in addition to designable positions.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write2pdb" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Defaults to false. If set to true, then will output the mutated positions and identities to the output pdb.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_NMerPSSMEnergy_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pssm_fname" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pssm_list_fname" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nmer_length" type="non_negative_integer" default="9">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nmer_pssm_scorecut" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="gate_pssm_scores" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_NMerSVMEnergy_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   cutoff, fail if score greater than cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="svm_fname" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   single name of a libsvm .model file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="svm_list_fname" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   filename to a list of svm .model filenames
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   optional subset of residue numbers over which to do calculation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nmer_length" type="non_negative_integer" default="9">
  <xs:annotation><xs:documentation xml:lang="en">
   number of residues in core subsequence motif
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nmer_svm_scorecut" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   optional lower bound floor to returned scores
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="gate_svm_scores" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   option to use lower bound floor for svm scores
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_table" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   dump a table of all nmer v. svm model scores
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_rank_as_score" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   report normalized rank fraction instead of raw energy
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="count_eps" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   report number of epitopes w score greater than cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ep_cutoff" type="real" default="0.425">
  <xs:annotation><xs:documentation xml:lang="en">
   optional epitope score cutiff for boolean count return option
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="ncontacts_filter_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="sidechain_heavy_apolar_atm"/>
  <xs:enumeration value="all_heavy_atm"/>
  <xs:enumeration value="sidechain_heavy_atm_apolar_aa"/>
  <xs:enumeration value="ss_entropy"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_Ncontacts_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="type" type="ncontacts_filter_type" default="sidechain_heavy_apolar_atm">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="value" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="NeighborType_subelement_NeighborsType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_NeighborType_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter for poses that place a neighbour of the types specified around a target residue in the partner protein.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Neighbors" type="NeighborType_subelement_NeighborsType"/>
 </xs:choice>
 <xs:attribute name="pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that this pose will be filtered out if the filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_NetCharge_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter sums up all of the positively and negatively charged amino acids in your structure and reports a simplistic sequence-based net charge.
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   specify which chain you want to calculate the net charge (In the input PDB file, from top to bottom: 1 means first chain, 2 means the second chain, and so forth). Use the value 0 (default) if you want to consider all residues in the input PDB structure.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max" type="xs:integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum net charge desired
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min" type="xs:integer" default="-100">
  <xs:annotation><xs:documentation xml:lang="en">
   minimum net charge desired
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_NonSequentialNeighbors_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filters based upon the number of neighboring residues in a non-sequential fashion.
 </xs:documentation></xs:annotation>
 <xs:attribute name="distance_threshold" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   distance from given residue from which to count the number of neighbors
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_cutoff" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   number of neighboring residues that defines the cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   is the protein bound or not?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnum" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The number indicating the residue of interest. If set to 0, the entire protein will be anlayzed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   jump number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_OligomericAverageDegree_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A version of the AverageDegree filter that is compatible with oligomeric building blocks. Includes other subunits within the same building block in the neighbor count. Also works for monomeric building blocks.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   How many residues need to be on average in the sphere of each of the residues under scrutiny in order for the filter to return true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_threshold" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of sphere around each residue under scrutiny in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="xs:integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Which jump separates the building block from others?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_names" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Which sym_dofs separate the building blocks from the others (must also set multicomp=1 if it is a multicomponent symmetric system)?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write2pdb" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Whether to write the residue-level AverageDegree values to the output .pdb file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Output jump and corresponding displacement or angle to tracer.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="multicomp" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Set to true if the systems has multiple components.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Operator_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Part of the fuzzy-logic design algorithm.
 </xs:documentation></xs:annotation>
 <xs:attribute name="operation" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   operation to perform: sum, product, min, or max
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   filter threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="negate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   multiply return value by -1. Useful in optimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_subvalues" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   report subvalues?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filters" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   list of previously defined filters on which to carry out the operation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="multi_relative" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If set, duplicates filters to include relative_pose_names.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relative_pose_names" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma seperated list of pose names
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="logarithm" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
    take the log(x) value of the resulting operator.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_OversaturatedHbondAcceptorFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter counts the number of hydrogen bond acceptors that are receiving hydrogen bonds from more than the allowed number of donors. If the count is greater than a threshold value (default 0), the filter fails. This filter is intended to address a limitation of Rosetta's pairwise-decomposible hydrogen bond score terms: it is not possible for a score term that is examining the interaction between only two residues to know that a third is also interacting with one of the residues, creating artifacts in which too many hydrogen bond donors are all forming hydrogen bonds to the same acceptor.
 </xs:documentation></xs:annotation>
 <xs:attribute name="max_allowed_oversaturated" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many oversaturated acceptors are allowed before the filter fails? Default 0 (filter fails if any oversaturated acceptors are found).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hbond_energy_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   A hydrogen bond must have energy less than or equal to this threshold in order to be counted. Default -0.1 Rosetta energy units.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="consider_mainchain_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true (the default), only mainchain-mainchain hydrogen bonds are considered. If false, all hydrogen bonds are considered.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="acceptor_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector that defines the hydrogen bond acceptor. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="donor_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector that defines the hydrogen bond donor. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_PackStat_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculates packing statistics
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="0.58">
  <xs:annotation><xs:documentation xml:lang="en">
   packstat above which filter passes. Common wisdom says 0.65 is a good number.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   jump on which to separate the complex before computing packstat. 0 means not to separate the complex.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeats" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   How many times to repeat the calculation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ParallelBetaPairingPreference_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="peptide_deriver_format">
 <xs:restriction base="xs:string">
  <xs:enumeration value="markdown"/>
  <xs:enumeration value="basic"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_PeptideDeriver_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter for PeptiDerive, a simple application that derives from a given interface the linear stretch that contributes most of the binding energy (approximated as the score over the interface).
 </xs:documentation></xs:annotation>
 <xs:attribute name="pep_lengths" type="nnegative_int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Length(s) of derived peptides
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_zero_isc" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Makes derivation go faster by skipping peptides with 0 interface score
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_peptide_pose" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Output pose with peptide cut out (best one for each chain pair)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_cyclic_poses" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Output each cyclic peptide pose (those that are modeled; which is determined by -optimize_cyclic_threshold)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_report_file" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Send PeptideDeriver output to a file (.peptiderive.txt)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_gzip" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Compress report
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_prepared_pose" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Output each receptor-partner pose as PeptiDerive sees it, i.e. after preparation (minimization and disulfide detection)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="do_minimize" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform minimization before everything.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimize_cyclic_threshold" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Value of peptide interface score percent of total isc from which to optimize cyclic peptide
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_format" type="peptide_deriver_format">
  <xs:annotation><xs:documentation xml:lang="en">
   The format of the report. Either basic (easily parsable format) or markdown (pretty, readable, but verbose format)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_receptors_to_chains" type="chain_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Only use chains listed here as receptors. When empty, consider all chains.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_partners_to_chains" type="chain_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Only use chains listed here as partners. When empty, consider all chains. For each receptor-partner pair, a peptide is derived from the partner.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_deriver" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_PeptideInternalHbondsFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter filters based on a user-specified minimum number of internal backbone hydrogen bonds within the selection or pose.  Note that this filter is actually a thin wrapper for the PeptideInternalHbondsMetric.
 </xs:documentation></xs:annotation>
 <xs:attribute name="backbone_backbone" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, backbone-backbone hydrogen bonds are counted.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="backbone_sidechain" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, backbone-sidechain hydrogen bonds are counted.  False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sidechain_sidechain" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, sidechain-sidechain hydrogen bonds are counted.  False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclusion_distance" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Hydrogen bonds between residues that are N positions apart in terms of covalent connectivity will not be counted if this is set higher than 0.  Set to 1 by default to exclude hydrogen bonds between neighbouring residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hbond_energy_cutoff" type="real" default="-0.25">
  <xs:annotation><xs:documentation xml:lang="en">
   The maximum energy of a hydrogen bond, if that hydrogen bond is to be counted.  Defaults to -0.25
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The scorefunction to use for computing hydrogen bonds.  If not provided, the default scoring function is used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   An optional residue selector that selects the peptide.  If provided, hydrogen bonds within this selection will be counted.  If not, the entire pose will be considered. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hbond_cutoff" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   The threshold number of internal hydrogen bonds, below which the filter fails.  Defaults to 1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_PoseComment_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Test for the existence or the value of a comment in the pose. This is useful for controlling execution flow: if the pose comments have been modified you do one thing or another
 </xs:documentation></xs:annotation>
 <xs:attribute name="comment_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   the key value of the comment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="comment_value" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   the comment's value
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="comment_exists" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   check only whether the comment exists or not, regardless of its content
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_PoseInfo_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Primarily intended for debugging purposes. When invoked, it will print basic information about the pose (e.g. PDB numbering and FoldTree layout) to the standard/tracer output. This filter *always* returns true, therefore it's not recommended to use it with the standard "confidence" option, as that may result in the filter not being applied when you want it to be (and consequently not getting the tracer output).
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_PreProline_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Helical space (ABEGO type A) is strongly disfavored before a proline, and Rosetta energy may not capture this effect. In the default mode, the filter simply checks the ABEGO of all residues before prolines and counts the residues that have non-B, non-E abego types (lower = better). With the "use_statistical_potential" option, the filter uses a bicubic spline fit to the data attached to guess at the favorability of a preproline residue with the given phi/psi angles -- this favorability is then returned as the filter score (lower = better).
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Returns true if the value of the spline function is less than or equal to the threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_statistical_potential" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the bicublic spline fit to the statistical potential of Ramachandran space will be used to evaluate the torsions. If false, residues in potentially bad torsion bins will be counted. (default = false)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_PropagateClashCheck_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Checks for clashes between adjacent rotated layers of a subunit
 </xs:documentation></xs:annotation>
 <xs:attribute name="fa_rep_thresh" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold fa_rep clash score.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="default_bridge_type" type="xs:string" default="VAL">
  <xs:annotation><xs:documentation xml:lang="en">
   Default type for bridge
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega" type="real" default="36.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation around z axis (per subunit)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rise" type="real" default="3.38">
  <xs:annotation><xs:documentation xml:lang="en">
   Rise along z axis (per subunit)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_repeats" type="real" default="22">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of subunit repeats
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prop_dir" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Propagation direction (0: forward, 1: reverse)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Range_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter returns true if the return value of the given filter is between lower_bound and upper_bound.
 </xs:documentation></xs:annotation>
 <xs:attribute name="filter" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter to be examined
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lower_bound" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   minimal filter score allowed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_bound" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   maximal filter score allowed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ReadPoseExtraScoreFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter does no scoring, just looks for extra score terms previously placed in the pose object.
 </xs:documentation></xs:annotation>
 <xs:attribute name="term_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the extra score term being searched for
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   If that energy is less than or equal to this threshold, returns true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_RelativePose_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Compute a filter's value relative to a different pose's structure.
 </xs:documentation></xs:annotation>
 <xs:attribute name="use_native_pdb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   boolean as to whether or not to use the native pdb
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   which is the reference pose to read from disk.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry_definition" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   ; default is none
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_mover" type="xs:string" default="null">
  <xs:annotation><xs:documentation xml:lang="en">
   which relax mover to apply after threading; by default, it is null
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   which filter to apply; default is null
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   actual name given to the filter being used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="baseline" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   indicates whether or not a baseline should be used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pose" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   filename for where to dump the pdb pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="alignment" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   alignment is expecting X1:Y1,X2:Y2,X3:Y3... where X is the protein on disk (target) and Y is the active structure (starting structure). When no alignment is given it is implied that the poses are trivially aligned 1..nres
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packing_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   radius of shell around each residue to repack after threading. The more use use the longer the simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rtmin" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   do rtmin following repack?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="thread" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Normally you'd want this to be true. This is not the case only if you're estimating baselines for the disk pose before doing an actual run.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="unbound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   before threading, should we dissociate the complex?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="copy_stretch" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   rather than threading the residue identities on the pose read from disk, copy the aligned segment from the current pose onto the pose read from disk (residue identities + conformations). No repacking is done, and then goes straight to relax. Obviously the segment should be prealigned for this to make any sense, and should probably only be used on entire chains rather than stretches within chains. Any way, take care in using. No guarantees.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="copy_comments" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   a comma-delimited list of pose-comment key values to copy from the reference pose (the current pose computed in the trajectory) to the relative pose (from disk). Useful if conformational change needs to be communicated from the reference pose to the relative pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_RelativeSegment_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Reports the numbers of residues that align with a segment on source pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="source_pose" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   PDB file storing the pose to which to align. The two poses should be superimposed prior to running. This filter will not superimpose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_res" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Starting residue for alignment. Rosetta numbering only
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_res" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Ending residue for alignment. Rosetta numbering only
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_RemoveLigandFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Check if the ligand's pocket is stable by removing the ligand, relaxing the structure and calculating rms to the starting structure.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO score threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO rmsd type filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="resnum_list_with_ranges_or_target_res">
 <xs:restriction base="xs:string">
  <xs:pattern value="all_repacked|([0-9]+|[0-9]+[A-Za-z]|refpose(.*,[0-9]+)|refpose(.*,[0-9]+)[+\-][0-9]+)([,\-]([0-9]+|[0-9]+[A-Za-z]|refpose(.*,[0-9]+)|refpose(.*,[0-9]+)[+\-][0-9]+))*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_RepackWithoutLigand_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  determines whether to repack with ligand based upon either rmsd and/or energy
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rms_threshold" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   rmsd threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_res" type="resnum_list_with_ranges_or_target_res">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_cstids" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   alternative to target_res; comma seperated list of residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="energy_threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   energy threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="param_types">
 <xs:restriction base="xs:string">
  <xs:enumeration value="radius"/>
  <xs:enumeration value="rise"/>
  <xs:enumeration value="omega"/>
  <xs:enumeration value="handedness"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_RepeatParameter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Checks wether certain helical parameters are in range
 </xs:documentation></xs:annotation>
 <xs:attribute name="numb_repeats" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   number of repeats
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_at_repeat" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   what is the first repeat to investigate (unsure, ask author?)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="param_type" type="param_types" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   What kid of parameter to investigate
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   minimal value of helical paramter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   maximal value of helical parameter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ReplicateFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Repeat a filter multiple times and average.
 </xs:documentation></xs:annotation>
 <xs:attribute name="filter_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the filter to be applied multiple times.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="replicates" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of replicates.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_cut" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Trim of the highest value bye upper_cut.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lower_cut" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Trim of the lowest value bye lower_cut.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="median" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, calculate the median instead of the average.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter returns true of calculated value is less than threshold.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Report_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter reports the value of another filter with the current job name. Useful when running long trajectories where one wants to see intermediate values of successful trajectories
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name for tag the filter to be reported
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_string" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of an object on the datamap that stores a value for reporting. This requires another mover/filter to be aware of this object and modify it. Currently no movers/filters use this functionality, but it could come in useful in future
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of a filter on the datamap that report will invoke
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checkpointing_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If the protocol is checkpointed (e.g., through GenericMonteCarlo) this will make ReportFilter checkpoint its data. If the checkpointing file exists the value from the checkpointing file will be read into ReportFilter's internal value and will be reported at the end of the run. On apply, the filter's value will be written to the checkpointing file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ResInInterface_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filters based upon the number of residues in the interface.
 </xs:documentation></xs:annotation>
 <xs:attribute name="residues" type="non_negative_integer" default="20">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold number of residues in the interface.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_number" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   jump number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ResidueBurial_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  How many residues are within an interaction distance of target_residue across the interface.
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb_num" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   PDB identifier of residue of interest
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbors" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   When used with neighbors=1 this degenerates to just checking whether or not a residue is at the interface.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_fraction_buried" type="real" default="0.001">
  <xs:annotation><xs:documentation xml:lang="en">
   what fraction of the total residues defined as designable by the taskfactory should actually be buried in order to return false. The default (0.0001) effectively means that 1 suffices. Set to 1.0 if you want all residues to be buried.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ResidueChirality_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  fails if the res_num residue is in the wrong chirality (D / L)
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_type" type="xs:string" default="L">
  <xs:annotation><xs:documentation xml:lang="en">
   the type you want to pass
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_num" type="xs:integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   which residue to test
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ResidueConformerFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  filters based upon whether the desired residue conformer is set
 </xs:documentation></xs:annotation>
 <xs:attribute name="restype" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   the type of residue to be used - must be set for this filter to work
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relevent_atoms" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma seperated list of strings made up of the atom names to be used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="desired_conformer" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   indicates which conformer to look at; if set to 0, the conformer used is the current conformer of the pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="seqpos" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   specific residue to be looked at; if set to 0, looks at all possible residues in pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_rms" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum rsmd for the filter; initilized in the constructor to be 0.5; not sure why the parse_my_tag includes a default
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ResidueCount_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filters structures based on the total number of residues in the structure.
 </xs:documentation></xs:annotation>
 <xs:attribute name="max_residue_count" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Is the total number of residues less than or equal to the maximum allowable residue count?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_residue_count" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Is the total number of residues more than or equal to the minimum allowable residue count?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="count_as_percentage" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If this is true, count residues as percentage (=100*raw_number_of_specified_residue/total_residue) instead of counting raw number of it, also max_residue_count/min_residue_count are assumed to be entered as percentage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_types" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of which residue type names. (e.g. "CYS,SER,HIS_D" ). Only residues with type names matching those in the list will be counted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_property" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of which properties. (e.g. "D_AA,POLAR" ). Only residues with type names matching those in the list will be counted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Restrict counting to a set of residues. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packable" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   ? This parameter seems to do nothing at all ?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ResidueDepth_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter for measuring minimum distance from any sidechain atom in a residue to the closest water molecule
 </xs:documentation></xs:annotation>
 <xs:attribute name="mindist" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimal distance between sidechain atom and water molecule
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maxdist" type="real" default="99.0">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum distance between sidechain and water molecule
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dcut1" type="real" default="2.6">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dcut2" type="real" default="4.2">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="evalres" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   Residues to evalute
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ResidueDistance_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Returns true if the distance between 2 residues does not exceed the threshold
 </xs:documentation></xs:annotation>
 <xs:attribute name="distance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximal distance between residue 1 and residue 2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res1_pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res1_res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2_pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2_res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ResidueIE_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Finds the ineraction energy (IE) for the specified residue over the interface
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_type" type="xs:string" default="total_score">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="energy_cutoff" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="whole_pose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_number" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_distance_cutoff" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restype3" type="xs:string" default="TRP">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="penalty_factor" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_penalty" type="real" default="1000.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_energy" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_resE" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ResidueLipophilicity_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the overall ResidueLipophilicity of the pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="-10">
  <xs:annotation><xs:documentation xml:lang="en">
   if ResidueLipophilicity score is lower than threshold, than pass.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_file" type="xs:string" default="TR">
  <xs:annotation><xs:documentation xml:lang="en">
   where to print the result to. default to TRACER. use auto for job_name_RS.txt
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="print_splines" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   whehter to print the splines, default=false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ResidueSelectionDistance_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="atom" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom of interest
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance" type="real" default="99.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   parses residue selector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ResidueSetChainEnergy_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the interaction energy between 2 groups of residues: 1. a set of residues and 2. all residues on a given chain.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_type" type="xs:string" default="total_score">
  <xs:annotation><xs:documentation xml:lang="en">
   what scoreing type to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   filter threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnums" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Group1 is defined with resnums, a list of residue numbers (1,2,3 for pose numbering or 1A,2A,3A for pdb numbering).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Group2 is defined with chain, which is the rosetta chain number.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Rmsd_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter based on the C-alpha RMSD to a reference structure.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="rmsd">
   <xs:complexType mixed="true">
    <xs:attribute name="resnum" type="refpose_enabled_residue_number">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number for the beginning of the alignment region
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="pdb_num" type="refpose_enabled_residue_number">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number for the beginning of the alignment region
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="span">
   <xs:complexType mixed="true">
    <xs:attribute name="begin_res_num" type="refpose_enabled_residue_number">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number for the beginning of the alignment region
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="begin_pdb_num" type="refpose_enabled_residue_number">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number for the beginning of the alignment region
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end_res_num" type="refpose_enabled_residue_number">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number for the end of the alignment region
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end_pdb_num" type="refpose_enabled_residue_number">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number for the end of the alignment region
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="span_two">
   <xs:complexType mixed="true">
    <xs:attribute name="begin_native" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number for the beginning of the alignment region, on the native
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end_native" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number for the end of the alignment region, on the native
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="begin_pose" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number for the beginning of the alignment region, on the pose
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end_pose" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number for the end of the alignment region, on the pose
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we be symmetry-aware?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chains" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain characters without separation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="superimpose_on_all" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do we want to superimpose on all residues?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="superimpose" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Do we want to superimpose?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold in RMSD above which the filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="by_aln" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform RMSD calculation as guided by a sequence alignment file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aln_files" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of alignment files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_names" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of template names
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="query_names" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of query names
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rms_residues_from_pose_cache" type="xs:string" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Are the RMS residues stored in the Pose's cache?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_RmsdFromResidueSelectorFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter based on the C-alpha RMSD to a reference structure. ResiduesSelectors can be applied to both reference and query poses.
 </xs:documentation></xs:annotation>
 <xs:attribute name="CA_only" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   When selected, use only CA RMSD
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_gdt" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   When selected, use GDTm algorithm
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="superimpose" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Superimpose before evaluation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="count_residues" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   When true (default; recomended) enforce the same number of residues for both query and reference.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="5.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold in RMSD above which the filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying residues to take into account in the reference pose The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="query_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying residues to take into account in the query pose The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_RmsdSimple_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Simple RMSD filter for the whole pose, or at least a single chain
 </xs:documentation></xs:annotation>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="char">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain for RMSD calculation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold of RMSD above which the filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="align" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If align is true, we do RMSD; if it is false, we don't actually do any alignment, just calculating the distance between pose and reference.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="RotBoltzWeight_subelement_ThresholdType" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="restype" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold_probability" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_RotamerBoltzmannWeight_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Threshold" type="RotBoltzWeight_subelement_ThresholdType"/>
 </xs:choice>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radius" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="type" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_names" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="unbound" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ddG_threshold" type="real" default="1.5">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real" default="0.8">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="energy_reduction_factor" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="compute_entropy_reduction" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_report" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_residues" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fast_calc" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_modified_ddG" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="compute_max" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_ala_scan" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write2pdb" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if the filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_RotamerBoltzmannWeight2_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="probability_type" type="xs:string" default="BOLTZMANN_SUM">
  <xs:annotation><xs:documentation xml:lang="en">
   How probabilities are calculated: BOLTZMANN_SUM -- A simple boltzmann sum defined by 1/SUM( e^( -(score - score_0)/temp ) ), where score_0 is the score with the rotamer in the input pose. The score of the input pose is included in this sum, and therefore it can range from (0, 1]. All rotamers not in the input pose are essentially considered equally "far" from the input. PNEAR -- Probability of being near the input state, using a Gaussian to define nearness in sidechain heavy atom RMSD to the input state as proposed by Vikram Mulligan in the Baker Lab. The lambda parameter defines the width of the Gaussian. For a lambda of 0.5, a rotamer with sidechain RMSD of 0.5 will be scored as as half "near" and half "far" from the input state. PNEAR is defined as NUMERATOR/DENOMINATOR, where NUMERATOR = SUM( e^(-rms^2/lambda^2)*e(-(score - score_0)/temp) ), and DENOMINATOR = SUM( e^( -(score - score_0)/temp ).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_type" type="xs:string" default="MODIFIED_DDG">
  <xs:annotation><xs:documentation xml:lang="en">
    The method used to combine the rotamer probabilities into the single number reported by the filter. Available score types are: MEAN_PROBABILITY -- Returns the mean of all computed probabilities. MAX_PROBABILITY -- Returns the maximum of all computed probabilities. MIN_PROBABILITY -- Returns the minimum of all computed probabilities. PROBABILITY -- Returns the product of all computed probabilities. MODIFIED_DDG -- Returns a ddG value weighted by the rotamer probabilities as described in Fleishman et al. (2011) Protein Sci. 20:753.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lambda" type="xs:string" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   The "lambda" value to be used in computing "nearness" to the input state during rotamer probability calculation. This is only used if "PNEAR" is the probability method.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="xs:string" default="0.8">
  <xs:annotation><xs:documentation xml:lang="en">
   The temperature to be used in computing rotamer probabilities
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SSBisectddGFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="-999999">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_avg" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_terminal_ss" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_n_term" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_c_term" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optionally define a mover which will be applied prior to computing the system energy in the unbound state.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="convert_charged_res_to_ala" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   converts the charged residue to alanine
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_ss_element" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   skips a secondary structure element(sheet,helix) when calculating ddg
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_sasa_instead" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   reports sasa instead of ddg
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SSDegree_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="contacts_between_ssElement_threshold" type="real" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_avg" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_terminal_ss" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_n_terminal_ss" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_c_terminal_ss" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_n_term" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_c_term" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_atomic_contact_filter" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   uses the atomic contact filter instead of motifs. only applicable if structure already FA
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SSElementLengthFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  reports attributes of secondary structure. Currently SSElement is defined as helix OR sheet
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="-999999">
  <xs:annotation><xs:documentation xml:lang="en">
   cutoff length
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_avg" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   reports avg
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_longest" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   reports longest
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_shortest" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   reports shortest
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   parses residue selector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SSMotifFinder_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="from_res" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Starting residue number; default to 0
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="to_res" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Ending residue number; default to 0
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   RMSD to base filter on
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   file name to write to
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   name of input pdb
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_pose" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   filename of input template
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_stem1" type="refpose_enabled_residue_number" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_stem2" type="refpose_enabled_residue_number" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SSPrediction_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Uses the sequence in the pose to generate secondary structure predictions for each position. Secondary structure predictions are then compared to the desired secondary structure to determine a score. If use_probability is true, the score returned is a value between 0 and 1, where 0 is complete secondary structure agreement, and 1 is no agreement. The following equation is used to determine the score: sum(i=1;N;e^(-p[i]/T)), where N is the number of residues, p[i] is the probability of correct secondary structure at position i, and T is a temperature factor set to 0.6 by default. If use_probability is false, the filter returns the fraction of residues that match the desired secondary structure as a number between 0 and 1. If use_probability is true AND mismatch_probability is true, the score is the geometric average of the probability of picking the WRONG secondary structure type at all residue positions. Minimizing this number will maximize the geometric average of the probability of picking the CORRECT secondary structure type at all residue positions. This option should be the most correct method for comparing two sequences to determine their expected fragment quality based on their predicted secondary structure probabilities at each residue.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   If threshold is set and use_probability is true, the filter returns true only if the calculated value is less than this number. If use_probability is false, the filter returns true if the calculated value is greater than this number.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_probability" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the probability information that psipred calculates will be used to determine the score. IF false, the filter will return the percentage of residues that match.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mismatch_probability" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true AND use_probability is true, the score is determined as the geometric average of the probability getting a WRONG secondary structure type at each position. Just as in regular use_probability, you want to minimize this score.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_confidence" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_svm" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If set, an SVM will be used to make secondary structure predictions instead of psipred. This requires downloading some database files. If false, the psipred executable specified by cmd will be used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cmd" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Full path to runpsipred_single or runpsipred executable. Must be specified if use_svm=false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If specified, the filter will take desired secondary structure from a blueprint file, rather from DSSP on the pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If specified, the filter will take desired secondary structure from this string, rather from DSSP on the pose. Format is: 'L' for loop, 'H' for helixand 'E' 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_scratch_dir" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If specified, use the directory specified with -out:path:scratch for the temporary files produced by PsiPred. The path must exist.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SSShapeComplementarity_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Uses the same code underlying the ShapeComplementarity filter to calculates the Lawrence and Coleman shape complementarity of secondary structure elements of a protein with one another. Essentially, secondary structure elements (e.g. loops, helices) are cut from the protein and their shape complementarity is calculated against the rest of the protein. The protein is then returned to its state when the filter was called and the next secondary structure element is cut and computed. The value calculated is equal to sum( sc_i*a_i )/a_tot, where sc_i is the shape complementarity value of secondary structure element i with the rest of the protein, a_i is the area of interaction of secondary structure element i with the rest of the protein, and a_tot is the total intraprotein area of all secondary structure elements. Sheets are currently not supported. The secondary structure elements can optionally be specified using a blueprint file. For antibody-antigen interfaces, a value of 0.65-0.67 is typical, while complementarity among intra-protein secondary structure elements is typically higher, on the order of 0.7-0.8. This filter returns false if the overall shape complementarity value is below min_sc (set by the user), true otherwise.
 </xs:documentation></xs:annotation>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If specified, the given blueprint file will be used to assign secondary structure. If not specified, DSSP will be used.blueprint and secstruct tags are mutually exclusive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   blueprint and secstruct tags are mutually exclusive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If set, verbose output will be generated by the ShapeComplementarity calculator
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If set, loops will be included in the calculations. Otherwise, they will be skipped.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="helices" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If set, helices will be included in the calculations. Otherwise, they will be skipped.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_sc" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The filter fails if the calculated overall shape complementarity is below this value. Set to 0.0 (always passing) by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SSamount_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter on the proportion of residues with a secondary structure assignment (i.e., not loop)
 </xs:documentation></xs:annotation>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="char">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain over which to calculate the filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_threshold" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Upper threshold above which the filter would return false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lower_threshold" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Lower threshold above which the filter would return false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="discard_lonely_SS" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Score poses with only one SS element as -1.0
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Sasa_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filters based upon interface SASA using either jumps or symmetric degrees of freedom
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="800">
  <xs:annotation><xs:documentation xml:lang="en">
   lower level threshold for filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_threshold" type="real" default="1000000">
  <xs:annotation><xs:documentation xml:lang="en">
   upper level threshold for filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   jump number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_names" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   symmetric degrees of freedom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hydrophobic" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   hydrophobic?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="polar" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   polar?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SavePoseConstraintToFile_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="overwrite" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SaveResfileToDisk_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="designable_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="renumber_pdb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile_suffix" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile_prefix" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile_name" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile_general_property" type="xs:string" default="NATAA">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selected_resis_property" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ScoreCutoffFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="report_residue_pair_energies" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutoff" type="real" default="10000.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_numbering" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ScorePoseSegmentFromResidueSelectorFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Applies the provided score function only to the selected region and adds the score to the pose. By default, it first individualizes the selected region and then scores it (this is ok, for example, to evaluate specific chains). By using the 'in_context' attribute, it just provides the score of the selected residuesReturns always True.
 </xs:documentation></xs:annotation>
 <xs:attribute name="in_context" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Do not individualize the selection before scoring.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying the segment to be scored. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function to use for evaluation. If not specified calls Rosetta's default full atom score.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ScoreType_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the energy of a particular score type for the entire pose and if that energy is lower than threshold, returns true. If no score_type is set, it filters on the entire scorefxn.
 </xs:documentation></xs:annotation>
 <xs:attribute name="score_type" type="xs:string" default="total_score">
  <xs:annotation><xs:documentation xml:lang="en">
   If no score_type is set, it filters on the entire scorefxn.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   If that energy is lower than threshold, returns true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="abego_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="[ABEGOX]*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_SecondaryStructure_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="ss" type="dssp_string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="abego" type="abego_string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_abego" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="compute_pose_secstruct_by_dssp" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="treat_L_as_D" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Let loops be H-bonded in such a way that they may be detected as E or H? ABEGO string still checked.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SecondaryStructureCount_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="num_helix" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_sheet" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_helix_sheet" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_loop" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_helix_length" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_sheet_length" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_loop_length" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_helix_length" type="non_negative_integer" default="9999">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_sheet_length" type="non_negative_integer" default="9999">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_loop_length" type="non_negative_integer" default="9999">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_helix" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_sheet" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_loop" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_helix_sheet" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="return_total" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Returns total count to score file instead of 0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_element_resis" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of residues on an element for it to be counted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Explicitly set which SS elements to count using residue_selectors.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SecondaryStructureHasResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="min_helix_length" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_sheet_length" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_loop_length" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_helix_length" type="non_negative_integer" default="9999">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_sheet_length" type="non_negative_integer" default="9999">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_loop_length" type="non_negative_integer" default="9999">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_helix" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_sheet" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_loop" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="required_restypes" type="xs:string" default="VILMFYW">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct_fraction_threshold" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nres_required_per_secstruct" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_check_task_operations" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss_select_task_operations" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SecretionPredictionFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="-999999">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SequenceDistance_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Measures the distance between a sequence stored in pose commentsand the current sequence of pose. Useful together with SaveSequenceToCommentsMover.
 </xs:documentation></xs:annotation>
 <xs:attribute name="sequence_comment_id" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of sequence to load from pose comments
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_sequence" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Specify a sequence to compare to
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="non_negative_integer" default="1000">
  <xs:annotation><xs:documentation xml:lang="en">
   check only whether the comment exists or not, regardless of its content
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SequenceRecovery_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rate_threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Rate of sequence recovery below which the filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mutation_threshold" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Raw number-of-mutations threshold above which the filter fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_mutations" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Decide pass/fail based on the mutation threshold, not the rate threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Give a lot more logging output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write2pdb" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Write each mutation as a string to the output PDB
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ShapeComplementarity_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculates the Lawrence and Coleman shape complementarity using a port of the original Fortran code from CCP4's sc. Symmetry aware. Can be calculated across a jump (default behavior) or the two surfaces can be specified by explicitly providing lists of the residues making up each surface.
 </xs:documentation></xs:annotation>
 <xs:attribute name="min_sc" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   The filter fails if the calculated sc is less than the given value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_interface" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The filter fails is the calculated interface area is less than the given value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_median_dist" type="real" default="1000">
  <xs:annotation><xs:documentation xml:lang="en">
   The filter fails is the calculated median distance between the molecular surfaces is greater than the given value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, print extra calculation details to the tracer.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="quick" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, do a quicker, less accurate calculation by reducing the density.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="xs:integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   For non-symmetric poses, which jump over which to calculate the interface.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_int_area" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, write interface area to scorefile.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_median_dist" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, write interface median distance to scorefile.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For symmetric poses, which dof over which to calculate the interface.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="multicomp" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, multiple component system. If false, single component system.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Explicitly set which residues are on each side of the interface (both symmetric and non-symmetric poses.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Explicitly set which residues are on each side of the interface (both symmetric and non-symmetric poses.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Explicitly set which residues are on each side of the interface using residue_selectors.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Explicitly set which residues are on each side of the interface using residue_selectors.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SheetTopology_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="ignore_register_shift" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="topology" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_dssp" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_ShowConstraints_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  iterate over all constraints in the pose, and invoke their show method
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SidechainRmsd_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculates the all atom RMSD for a single residue, either with or without the backbone atoms. The RMSD calculated is the automorphic RMSD, so it will compensate for symmetric rearrangments. (For example, Phe ring flips.) No superposition is performed prior to rmsd calculation.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   In a truth value context, what's the maximum RMSD value which is considered to be passing.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_backbone" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Whether to include the backbone in the RMSD calculation. It is recommended to set this to 'true' for ligands and other residues which don't have a backbone.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res1_pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res1_res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2_pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2_res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Sigmoid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Part of the fuzzy-logic design algorithm: Warszawski S, Netzer R, Tawfik DS, Fleishman SJ. A 'fuzzy'-logic language for encoding multiple physical traits in biomolecules. J Mol Biol 2014.
 </xs:documentation></xs:annotation>
 <xs:attribute name="steepness" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Steepness of the sigmoid function where $$f(x) = 1 / ( 1 + (steepness)e^{ (x - offset - baseline) } ) )$$
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="offset" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset of the sigmoid function where $$f(x) = 1 / ( 1 + (steepness)e^{ (x - offset - baseline) } ) )$$
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="negate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Substitute x for 1-x in evaluation (as the Boolean operator NOT).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Values above this threshold pass as true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter whose value to transform with the sigmoid function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="baseline_checkpoint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name to keep track of the baseline value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SimpleHbondsToAtomFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Check if atom of interest has exactly n_partners Hbonds
 </xs:documentation></xs:annotation>
 <xs:attribute name="n_partners" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of partners expected to be Hbonding to tatget atom.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_atom_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom of interest involved in Hbonding.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hb_e_cutoff" type="real" default="-0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Energy of Hbond cutoff.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="comparison_types">
 <xs:restriction base="xs:string">
  <xs:enumeration value="eq"/>
  <xs:enumeration value="gt"/>
  <xs:enumeration value="gt_or_eq"/>
  <xs:enumeration value="lt"/>
  <xs:enumeration value="lt_or_eq"/>
  <xs:enumeration value="ne"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_SimpleMetricFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Run a SimpleMetric (Real) as a filter.  Set the cutoff and comparison_type to control the behavior of this filter. 
 </xs:documentation></xs:annotation>
 <xs:group ref="simple_metric" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="epsilon" type="real" default=".0001">
  <xs:annotation><xs:documentation xml:lang="en">
   Epsilon for numerical comparisons
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="metric" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The metric to run in this filter.  
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="comparison_type" type="comparison_types">
  <xs:annotation><xs:documentation xml:lang="en">
   The comparison type.  IE not equal, equal, etc.  IF value [comparison_type] cutoff_ or match_ we return TRUE.  Example (RMSDMetric) cutoff=4.0, comparison_type=lt.  We return true if the RMSD is less than 4.0. Required. Choieces are: 
[eq, gt, gt_or_eq, lt, lt_or_eq, ne]
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="composite_action" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If you have a composite metric or PerResidueMetric this can be `any`, `all` or a specific composite value type (Rosetta ResNum for per-residue metric.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Number to use to determine if filter passes or not for any RealMetric or CompositeRealMetric.  Set the comparison_type to indicate the behavior of this filter.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="match" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String to match on to determine if filter passes or not for any StringMetric or CompositeStringMetric.  Set the comparison type to indicate the behavior of this filter.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sum_for_per_residue_real" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If you are using a PerResidueRealMetric, set this to use the SUM of the values to act as a RealMetric instead of acting as a composite metric.  Default False.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_cached_data" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use any data stored in the datacache that matches the set metrics name (and any prefix/suffix.)  Data is stored during a SimpleMetric's apply function, which is called during RunSimpleMetrics
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Any prefix used during apply (RunSimpleMetrics), that we will match on if use_cache is true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_suffix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Any suffix used during apply (RunSimpleMetrics), that we will match on if use_cache is true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fail_on_missing_cache" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If use_cached_data is True and cache is not found, should we fail?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SpanTopologyMatchPose_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the percentage of positions that are topologically where they should be by the provided span.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="0.3">
  <xs:annotation><xs:documentation xml:lang="en">
   threhsold underneath to fail pose. in 0-1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="outputi_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   file name to print output to
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SpecificResiduesNearInterface_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A filter to pluck out whether the residues from a set of task operations occur at the interface
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_number" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which to define the interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_StemFinder_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Compare a set of homologous but structurally heterogeneous PDBs to a template PDB and find structurally highly conserved sites that can serve as stems for splicing segments
 </xs:documentation></xs:annotation>
 <xs:attribute name="rmsd" type="real" default="0.7">
  <xs:annotation><xs:documentation xml:lang="en">
   cutoff for the average rmsd between a given position in the template and all of the closest positions in the homologs.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stems_on_sse" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   demand that in each of the homologs the candidate stems are on 2ary structural elements
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stems_are_neighbors" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   should we eliminate stems that are farther than neighbor_distance from one another?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_distance" type="real" default="4.0">
  <xs:annotation><xs:documentation xml:lang="en">
   minimal atomic distance between any pair of atoms on each of the residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_seperation" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   minimal aa separation between candidate stem sites
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filenames" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   PDB structures that are well aligned to the template
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from_res" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   starting template position in which to search for stems
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="to_res" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   ending template position in which to search for stems
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Stochastic_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_StrandCurvatureByLevels_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculate the direction of the concave face of a strand, and its curvarure based on the angle formed by alternating CA atoms. The "levels" are the number of CA pais left between the vertex and the end of the arm.
 </xs:documentation></xs:annotation>
 <xs:attribute name="bend_level" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of CA pairs left between the vertex and the end of the arm used to calculate the bend angle.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_bend" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum allowed for bend angle, the complementary to CA1-CA2-CA3, so that the higher this angle, the more curved the strand is. Value is in degrees.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_bend" type="real" default="180">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum allowed for bend angle, the complementary to CA1-CA2-CA3, so that the higher this angle, the more curved the strand is. Value is in degrees.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="twist_level" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of CA-CB vecgor pairs left between the vertex and the end of the arm used to calculate the twist angle (dihedral between two CA-CB vetors).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_twist" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum allowed for strand twist angle, the complementary to a CA-CB - CA-CB dihedral, so that the higher this angle, the more twisted the strand is. Value is in degrees.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_twist" type="real" default="90">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum allowed for strand twist angle, the complementary to a CA-CB - CA-CB dihedral, so that the higher this angle, the more twisted the strand is. Value is in degrees.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="StrandID" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Strand number over which to calculate bend, twist and concavity, according to blueprint numbers
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_type" type="xs:string" default="bend">
  <xs:annotation><xs:documentation xml:lang="en">
   What magnitude to inform: "bend" or "twist" angle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="concavity_reference_residue" type="xs:string" default="first">
  <xs:annotation><xs:documentation xml:lang="en">
   Use first or last residue as a reference for concavity: "first" or "last" are the only options. See "concavity_direction" for more info on how to use this option. Defaults should be fine for regular (not bulged) strands.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="concavity_direction" type="xs:boolean" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Does the reference residue CA-CB vector point in the same face as the residue in the center of the strand? If yes, then set this option to true, otherwise, false. Defaults should be fine for regular (not bulged) strands.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to blueprint file from which to parse strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_StrandHelixGeometryFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter will check the distanca, plane and orthogonal angle between a helix and a pair of strands. The plane, used to calculate both angles, is the one described by the vector parallel to the first strand and one from the center of the first to the center of the sencond (perpendicular). The plane angle is the angle between the first of named vectors and the projection of the helix on the name plane. The orthogonal angle is the one between the plane and the helix. The distance is measured between the center of mass of both elements.
 </xs:documentation></xs:annotation>
 <xs:attribute name="min_dist" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum distance between the centers of the strand pair and the helix.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_dist" type="real" default="12.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum distance between the centers of the strand pair and the helix.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_ortho_angle" type="real" default="-180.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum orthogonal angle between the strand pair and the helix.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_ortho_angle" type="real" default="180.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum orthogonal angle between the strand pair and the helix.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_plane_angle" type="real" default="-180.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum plane angle between the strand pair and the helix.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_plane_angle" type="real" default="180.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum plane angle between the strand pair and the helix.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="StrandID1" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Strand number of the first strand to be considered, according to blueprint
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="StrandID2" type="positive_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Strand number of the second strand to be considered, according to blueprint
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="HelixID" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Helix number of helix to be considered, according to blueprint
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_type" type="xs:string" default="dist">
  <xs:annotation><xs:documentation xml:lang="en">
   What metric should be output? distance (dist), orthogonal angle (ortho_angle), or the plane angle (plane_angle)?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to blueprint file from which to parse strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_StubScore_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter checks whether in the current configuration the scaffold is 'feeling' any of the hotspot stub constraints. This is useful for quick triaging of hopeless configuration. If used in conjunction with the Mover PlaceSimultaneously, don't bother setting flags -- the Mover will take care of it.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="StubSets" type="stubsets_sub_StubSets_type"/>
 </xs:choice>
 <xs:attribute name="chain_to_design" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain that ought to be designed, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cb_force" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain that ought to be designed, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The reference pose to use for finalizing the stub sets (defaults to input pose).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_StubScoreLoops_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This filter checks whether in the current configuration the scaffold is 'feeling' any of the hotspot stub constraints. This is useful for quick triaging of hopeless configuration. If used in conjunction with the Mover PlaceSimultaneously, don't bother setting flags -- the Mover will take care of it.
 </xs:documentation></xs:annotation>
 <xs:attribute name="cb_force" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain that ought to be designed, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start" type="positive_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Starting residue of loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop" type="positive_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Ending residue of loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stubfile" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Stub file filename
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile" type="xs:string" default="NONE">
  <xs:annotation><xs:documentation xml:lang="en">
   Resfile filename
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="SymUnsatHbondFilter_mode_choices">
 <xs:restriction base="xs:string">
  <xs:enumeration value="unbound_design_vs_reference"/>
  <xs:enumeration value="unbound_mutated_sidechains"/>
  <xs:enumeration value="all"/>
  <xs:enumeration value="bound_vs_unbound"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_SymUnsatHbonds_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Maximum number of buried unsatisfied H-bonds allowed across an interface.
 </xs:documentation></xs:annotation>
 <xs:attribute name="cutoff" type="non_negative_integer" default="20">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of buried unsatisfied H-bonds allowed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="xs:integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   What jump to look at.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_names" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   What jump(s) to look at. For multicomponent systems, one can simply pass the names of the sym_dofs that control the master jumps. For one component systems, jump can still be used.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Output info to tracer. If passes, will output the number of unsatisfied hydrogen bonds to the scorefile and tracer. Also outputs to the tracer the specific residues and atoms that are unsatisfied and a formatted string for easy selection in pymol.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write2pdb" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, write value to pdb file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mode" type="SymUnsatHbondFilter_mode_choices" default="bound_vs_unbound">
  <xs:annotation><xs:documentation xml:lang="en">
   Default: Takes the current pose, uses the jump number or sym_dof_names and core::pose::symmetry::get_sym_aware_jump_num(pose,jump) to get the correct vector for translation into the unbound state, uses the RigidBodyTransMover to translate the pose into its unbound state, goes through every heavy atom in the asymmetric unit and finds cases where a polar is considered buried in the bound state, but not in the unbound state Can also set to calculate differently. See enumeration.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_native" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use native pdb as reference.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_SymmetricMotif_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Position-independent RMS filter evaluating how close a set of interfaces is to symmetric.
 </xs:documentation></xs:annotation>
 <xs:attribute name="symm_type" type="xs:string" default="D2">
  <xs:annotation><xs:documentation xml:lang="en">
   Symmetric arrangement of motifs, i.e. Symmetry group D2: 2 motifs expected! Currently only D2 is supported.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="motifs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   PDB file containing the symmetrized motif.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_thresh" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Angle threshold (degrees) for accepting a motif hit.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trans_thresh" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Translation threshold (Angstrom) for accepting a motif hit.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd_thresh" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   RMSD threshold for accepting a motif hit.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clash_thresh" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Most clashes allowed for accepting a motif hit.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_wt" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The angle weight for ranking all the passing hits.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trans_wt" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The translation weight for ranking all the passing hits.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd_wt" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The RMSD for ranking all the passing hits.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clash_wt" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The clash weight for ranking all the passing hits.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="force_pos" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Force the motif to match at a particular position.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_TMsAAComp_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the RMSD between the AA distribution in all psans in the pose copared to the WT distribution
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   leave 0.5 for boolean behaviour
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_TMsSpanMembrane_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the overall sasa of the pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   leave 0.5 for boolean behaviour
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   file to which print output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_distance" type="real" default="20">
  <xs:annotation><xs:documentation xml:lang="en">
   minimal distance between TMH edges over the Z axis (membrane depth)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="flank" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   by how many residues 'enlarge' the TMH to allow a more fuzzy test
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="required_distance" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   the distance the edges should be from the membrane edge
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_TaskAwareSASA_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculates SASA for a set of residues defined by TaskOperations.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Returns true if the set of residues defined by the TaskOperations have a combined SASA higher than the threshold, false otherwise. Default threshold is 0 so that all structures will pass if a threshold is not explicitly specified.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="designable_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, only designable positions are calculated...?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Make backbone atoms virtual to find sidechain-only values?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="probe_radius" type="real" default="2.2">
  <xs:annotation><xs:documentation xml:lang="en">
   Probe radius for calculating the solvent accessible surface area. Note: the default is larger than the typical used to represent water of 1.4 angstroms, but has been found to work well with the other default parameters for protein redesign purposes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If a jump has been provided by the user, separate the pose by that jump.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="TaskAwareScoreTypeFilter_mode_choices">
 <xs:restriction base="xs:string">
  <xs:enumeration value="average"/>
  <xs:enumeration value="total"/>
  <xs:enumeration value="individual"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="filter_TaskAwareScoreType_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Takes task operations to determine the packable residues and then calculates/filters based on the scores of those residues in one of three possible modes: 1) total: the total score of all packable residues 2) average: the average score of all packable residues 3) individual: the scores of individual residues (in individual mode each residue must pass the user-defined threshold in order for the filter to pass). In each mode, the score type used to assess the score is set by the user (default is total_score).
 </xs:documentation></xs:annotation>
 <xs:attribute name="score_type" type="xs:string" default="total_score">
  <xs:annotation><xs:documentation xml:lang="en">
   Score term to use for the calculations. Defaults to total_score.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="threshold" type="real" default="100000">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold for the highest permissible value for a passing design. Note: When using mode='individual' this is the score threshold that each individual residue must pass in order for the filter to pass. For example, the user could set threshold=3.5, score_type=fa_rep, and mode=individual to check if all the packable residues have a fa_rep score less than 3.5. The value reported when mode=individual is the number of failing residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb_bb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   See EnergyPerResidueFilter.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="unbound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Default is false. Set to true if you want the scores to be assessed in the unbound state. If unbound is set true, then the user must provide either the sym_dof_names or jump along which to separate the pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_names" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with the unbound option. Which sym_dofs should be used to separate the pose?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with the unbound option. Which jump should be used to separate the pose?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mode" type="TaskAwareScoreTypeFilter_mode_choices" default="average">
  <xs:annotation><xs:documentation xml:lang="en">
   This filter can operate in three modes. The options are 'total', 'average', or 'individual'. If mode=total, then the total score of the packable residues is returned and the threshold refers to that total value. If mode=average, then the average score of the packable residues is returned and the threshold refers to that average value. If mode=individual, then each packable residue is evaluated on an individual basis and the threshold refers to those individual values; in this case, individual residue must pass in order for the filter to pass. For example, the user could set threshold=3.5, score_type=fa_rep, and mode=individual to check if all the packable residues have a fa_rep score less than 3.5. The value reported from the filter when mode=individual is the number of failing residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write2pdb" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Only for use with mode=individual. Default is false. Setting to true will cause the individual scores to be output to the bottom of the pdb.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="individual_hbonds" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   This seems to still be in development.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_TerminusDistance_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  True, if all residues in the interface are more than n residues from the N or C terminus --i.e. distance in sequence space. If fails, reports how far failing residue was from the terminus. If passes, returns '1000'.
 </xs:documentation></xs:annotation>
 <xs:attribute name="jump_number" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Which jump to use for calculating the interface?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   How many residues must each interface residue be from a terminus in sequence distance?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Time_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Report how long a sequence of movers/filters takes. Within the protocol, you need to call time at least twice, once, when you want to start the timer, and then, when you want to stop. The reported time is that between the first and last calls.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_Torsion_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="lower" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Lower torsion threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Upper torsion threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="torsion" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The torsion of interest
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnum" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue number of interest
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_TotalSasa_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Computes the overall sasa of the pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="800">
  <xs:annotation><xs:documentation xml:lang="en">
   If it is **higher** than threshold, it passes. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="upper_threshold" type="real" default="1000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Fails if it is above the upper_threshold.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hydrophobic" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Compute hydrophobic-only SASA.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="polar" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Compute polar_only SASA.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_per_residue_sasa" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Add the per-residue SASA to the tracer output.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_TrueFilter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filter that always returns true
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="filter_worst9mer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Filters out structures that don't have good fragment RMSD at the worst position.
 </xs:documentation></xs:annotation>
 <xs:attribute name="threshold" type="real" default="99.0">
  <xs:annotation><xs:documentation xml:lang="en">
   filter threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd_lookup_threshold" type="real" default="0.40">
  <xs:annotation><xs:documentation xml:lang="en">
   if the filtered threshold is not 99, the filtered threshold is equal to the rmsd_lookup_threshold; else it is the default value of 0.40
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_helices" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   look at only helices?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_mean_median" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Calculate the mean and median rmsd as well?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Only look at worst fragment for residues within residue selector
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_terminal_resiude" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   ignore the terminal residue?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="confidence" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Probability that the pose will be filtered out if it does not pass this Filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="pose_property_reporter_FilterReporter_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="filter" minOccurs="0" maxOccurs="1"/>
 <xs:attribute name="filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name attribute of filter defined previously in the RosettaScript
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="rmsd_mode">
 <xs:restriction base="xs:string">
  <xs:enumeration value="CA"/>
  <xs:enumeration value="all_atom"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="pose_property_reporter_RMSDReporter_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Reports the Calpha or full-atom RMSD of a pose (optionally within a specified residue range)
 </xs:documentation></xs:annotation>
 <xs:attribute name="mode" type="rmsd_mode" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Calculate CA or all_atom RMSD?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residues" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="pose_selector_ClusterPoseSelector_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="pose_property_reporter" minOccurs="1" maxOccurs="1"/>
 <xs:attribute name="radius" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Cluster radius
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="structures_per_cluster" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of structures from each cluster to select
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_cluster_size" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of structures in a cluster. Default is no limit.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_clusters" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of clusters. Default is no limit
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initial_cluster_set_size" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_singletons" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Remove structures that are alone in their own clusters?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="pose_selector_Filter_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="filter" minOccurs="0" maxOccurs="1"/>
 <xs:attribute name="filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name attribute of a filter that was defined earlier in the RosettaScript.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="pose_selector_OrSelector_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="pose_selector" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="order_string">
 <xs:restriction base="xs:string">
  <xs:enumeration value="asc"/>
  <xs:enumeration value="ascending"/>
  <xs:enumeration value="desc"/>
  <xs:enumeration value="descending"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="pose_selector_TopNByProperty_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="pose_property_reporter" minOccurs="1" maxOccurs="1"/>
 <xs:attribute name="n" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selection limit
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="order" type="order_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Ascending or descending order?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="multiple_pose_mover_SELECT_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="pose_selector" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="mover_MultiplePoseMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:sequence>
  <xs:element name="SELECT" type="multiple_pose_mover_SELECT_type" minOccurs="0" maxOccurs="1"/>
  <xs:element name="ROSETTASCRIPTS" type="rosetta_scripts_parser_ROSETTASCRIPTS_type" minOccurs="0" maxOccurs="1"/>
 </xs:sequence>
 <xs:attribute name="max_input_poses" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_output_poses" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cached" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_MutateResidue_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Change a single residue or a given subset of residues to a different type. For instance, mutate Arg31 to an Asp, or mutate all Prolines to Alanine.  Note that by default, this mover breaks disulfide bonds, converting any parters of disulfide-bonded target residues to the reduced variant type.
 </xs:documentation></xs:annotation>
 <xs:attribute name="target" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The location to mutate. This can be a PDB number (e.g. 31A), a Rosetta index (e.g. 177), or an index in a reference pose or snapshot stored at a point in a protocol before residue numbering changed in some way (e.g. refpose(snapshot1,23)). See the convention on residue indices in the RosettaScripts Conventions documentation for details
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="new_res" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the residue to introduce. This string should correspond to the ResidueType::name() function (eg ASP).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="preserve_variant_types" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, we try to preserve the variant types that were present on the old residue.  False by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mutate_self" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, will mutate the selected residue to itself, regardless of what new_res is set to (although new_res is still required). This is useful to "clean" residues when there are Rosetta residue incompatibilities (such as terminal residues) with movers and filters.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="preserve_atom_coords" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, then atoms in the new residue that have names matching atoms in the old residue will be placed at the coordinates of the atoms in the old residue, with other atoms rebuilt based on ideal coordinates. If false, then only the mainchain heavyatoms are placed based on the old atom's mainchain heavyatoms; the sidechain is built from ideal coordinates, and sidechain torsion values are then set to the sidechain torsion values from the old residue. False if unspecified.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="update_polymer_bond_dependent" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Update the coordinates of atoms that depend on polymer bonds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="break_disulfide_bonds" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, then disulfide bonds are properly broken when mutating from a disulfide-bonded cysteine to anything else.  If false, the disulfide partner will still think that it is bonded to something, and scoring will fail unless the disulfide variant type is removed by something else.  Setting this to false is strongly NOT recommended.  True by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of a residue selector that specifies the subset to be mutated. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_NTerminalAcetyltransferaseMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Enzymatic mover to acetylate the N-termini of a peptide-containing pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="species" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the species name of this simulated enzyme.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="enzyme_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the specific name of this simulated enzyme.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="efficiency" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Directly set the efficiency of this enzyme, ignoring whatever is in the database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perform_major_reaction_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Set this EnzymaticMover to perform only its major reaction.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perform_all_reactions" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow this EnzymaticMover to be promiscuous, performing a random transfer from among its possible co-substrates.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_NcbbDockDesign_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="mc_temp" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature of Monte Carlo simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_mc_temp" type="real" default="0.8">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature of Monte Carlo simulation for the perturbation stage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_dock_rot_mag" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of rotations for docking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_dock_trans_mag" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of translations for docking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_small_temp" type="real" default="0.8">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature of Monte Carlo simulation for peptide small moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_small_H" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of small moves on helices
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_small_L" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of small moves on loops
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_small_E" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of small moves on strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_shear_temp" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature of Monte Carlo simulation for peptide shear moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_shear_H" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of small moves on helices
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_shear_L" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of small moves on loops
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_shear_E" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of small moves on strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_num_rep" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of peptide moves per cycle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_num" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Rounds of perturbation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_design" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Turn off design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_design_min" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize after design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_soft_rep" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a soft-repulsive scoring function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mc_initial_pose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Run a simple MC simulation on the initial pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pymol" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the pymol mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_history" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep the history of the simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ncbb_design_first" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   First optimize sequence of the NCBB ligand
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_NearNativeLoopCloser_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XSD_XRW: TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="loopLengthRange" type="xs:string" default="1,5">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="RMSthreshold" type="real" default="0.4">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resAdjustmentRangeSide1" type="xs:string" default="-3,3">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resAdjustmentRangeSide2" type="xs:string" default="-3,3">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="xs:string" default="A">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chainBeforeLoop" type="xs:string" default="A">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chainAfterLoop" type="xs:string" default="A">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="idealExtension" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_vdw_change" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resBeforeLoop" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resAfterLoop" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_all" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD_XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="closure_type" type="xs:string" default="lookback">
  <xs:annotation><xs:documentation xml:lang="en">
   type of closure, either kic or lookback
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allowed_loop_abegos" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma seperated string of allowed abegos, default=empty all abegos
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_NormalModeMinimizer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="scorefxns" type="xs:string" default="score12">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list or core::Size XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_iter" type="xs:integer" default="200">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_type" type="xs:string" default="lbfgs_armijo_nonmonotone">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tolerance" type="real" default="0.01">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dampen" type="real" default="0.05">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="relaxmode_name">
 <xs:restriction base="xs:string">
  <xs:enumeration value="min"/>
  <xs:enumeration value="relax"/>
  <xs:enumeration value="extrapolate"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_NormalModeRelax_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  NormalModeRelax relaxes a structures to the coordinate directions derived from Anisotropic Network Model (ANM). The way how it works is: a) generate a extrapolated coordinates, b) put coordinate restraints to that coordinates, and c) run minimization or FastRelax. Current implementation tries multiple normal and returns `nsamples`. Use a `MultiplePoseMover` to handle all the output samples.If a `MultiplePoseMover` is not used, only the top scoring pose is returned (unless `randomselect` is True).
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="cartesian" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use Cartesian normal model, which is recommended over Torsional normal mode
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="centroid" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use centroid description in the Mover. relaxmode = "relax" is prevented in this case
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nmodes" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   How many normal modes to try
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mix_modes" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Whether use mixture of modes
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pertscale" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   By how much to perturb the backbone in Angstrom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="randomselect" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do random selection among sampled structures instead of picking best scoring one
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relaxmode" type="relaxmode_name" default="min">
  <xs:annotation><xs:documentation xml:lang="en">
   The way of relaxing structure. "relax" calls FastRelax, "min" Minimizer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selection_kT" type="real" default="1e6">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartesian_minimize" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use cartesian minimization for relax or minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nsample" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many structures to try. This only works when mix_modes = true; otherwise will try 2*nmodes
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="k_bond" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="k_short" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="k_long" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="outsilent" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Specifies name of output silent file to store all the sampled structures. By default the Mover won't output any silent
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefxn to relax poses and select among multiple solutions. For centroid mode, stage4
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_NtoCConstraintGenerator_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_NubInitioLoopClosureMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Applies CCD closure to a NubInitioMover result, being aware of its restrictions through labels.
 </xs:documentation></xs:annotation>
 <xs:attribute name="max_trials" type="xs:integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Defines how many times we should try to close the breakpoints before giving up.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fragments_id" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Fragments are necessary to close the loop. They need to be included/created with StructFragmentMover. The value set in the 'prefix' attribute of that Mover needs to be provided here again.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="break_side" type="xs:integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   Defines number of sequence neighbors around breakpoint residues (multisegment motif) allowed to minimize in order to achieve the chain break closure.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="break_side_ramp" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   In each breakpoint closure trial, increase by one the number of side residues allowed to move.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trust" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Do nothing on those cutpoints that seem to have been closed before reaching this Mover.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="label" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to true (default), labels residues changed by loop_closure to LOOPCLOSURE and repacked residues as REPACKED.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to true (not default), redesigns residues of the closed loops and around as longs as they are labeled as TEMPLATE or COLDSPOT.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="centroid_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Centroid Score function to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fullatom_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Centroid Score function to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="nub_initio_Segment_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Describes the properties of a given segment of the nub motif
 </xs:documentation></xs:annotation>
 <xs:attribute name="order" type="xs:integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Specifies to which motif segment this definition is targetting
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_term_flex" type="xs:integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of residues in the N-terminus of the motif segment allowed to move
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="c_term_flex" type="xs:integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of residues in the C-terminus of the motif segment allowed to move
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="editable" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Residues in the motif allowed to mutate (COLDSPOTS)
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="nub_initio_Nub_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Describes the static segment in the NubInitio protocol
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Segment" type="nub_initio_Segment_complex_type"/>
 </xs:choice>
 <xs:attribute name="pose_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File containing the structure with the static segment to keep (Nub). This option will be ignored if a reference_pose loaded with SavePoseMover is provided.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Reference pose containing the structure with the static segment to keep (Nub). This option will override the pose_file option.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying residues that will be kept as the Nub structure. The number of segments this selector specifies has to be the same as the number of motifs that the template selector will specify in the NubInitio Mover, but the sizes do not have to be the same. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="binder_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If provided, it selects a binder to be placed together with the region of interest in the Nub. The binder(s) will be static during the Ab initio process. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_NubInitioMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The Nub Initio mover generates a low definition (centroid level) ab initio folding (with or withou constraints) around a foreing static piece of structure called Nub. Effectively, it grafts the Nub inside a template protein and then folds that protein around to better fit the inserted Nub. The region of the template that will be substituted (i.e. not kept) is the 'motif'. The pose that comes at apply time is considered the template. If the template pose is discontinued, this might produce unexpected and possibly fatal results. Finally a full atom pose is provided keeping the original residue types of the template. This pose should not be consider OK to terminate the run at that point; at least the template residues need to be redesigned.
 </xs:documentation></xs:annotation>
 <xs:all>
  <xs:element name="Nub" type="nub_initio_Nub_complex_type"/>
 </xs:all>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_cst" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Use constraints to guide the folding (RECOMENDED). Basically this is the difference between running ClassicAbinitio or FoldConstraints. Be aware that the constraints MUST have been set into the Pose beforehand with a ConstraintGenerator.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss" type="dssp_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Force assign SSE to the template (otherwise use DSSP)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_trials" type="xs:integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Defines how many times we should try to fold the protein under a RMSD threshold with the template before giving up.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clear_motif_cst" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   This will clear any constraint that includes residues of the template's motif; i.e. the part of the template that will be substituted by the Nub. This option is relevant when the 3D configuration of the motif and the Nub differ greatly. Be aware that this change is applied to the pose, and, thus, these constraints will not be available in further Movers. (WARNING!) When the size of motif and Nub do not match, this should be kept as TRUE.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd_threshold" type="real" default="5.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum allow difference between the obtained decoy and the original template.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd_include_motif" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Use all the residues of the template, including those of the motif, to calculate RMSD.(WARNING!) When the size of motif and Nub do not match, this should be kept as FALSE.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd_include_unconstrained" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Use all the residues of the template, including those that had no assigned constraint (this excludes SequenceComposition constraints). This is interesting if a segment of the template was left unsconstraint on purpose so that it would move for example, to avoid clashed with a binder. It would allow to set tighter RMSD filtering while leaving this particular region alone,
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="binder_weight" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for interchain scores to add to the AbInitio MonteCarlo's evaluator default score (0 - no weight).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_weight" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for angle constraints to add to the AbInitio MonteCarlo's evaluator default score (0 - no weight).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dihedral_weight" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for dihedral constraints to add to the AbInitio MonteCarlo's evaluator default score (0 - no weight).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="correction_weights" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   When true (default), it will autodetect the presence of helix/sheet in the template and add scoring terms appropiately.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_disulfides" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Force disulfide awarenes to guide ab initio.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disulfides_bb" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow backbone movements to try to fix disulfides.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disulfides_side" type="xs:integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Defines number of sequence neighbors around CYS residues allowed to pack/minimize in order to achieve the disulfide bridge.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_name" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of an alternative filter to use instead of RMSD distance (applied at CENTROID level).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fragments_id" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Fragments are necessary to perform the ab initio run. They need to be included/created with StructFragmentMover. The value set in the 'prefix' attribute of that Mover needs to be provided here again.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_centroid" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Output centroid level structures in a outputname_CENTROID silent file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="drop_unfolded_pose" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   For testing and imaging. Stops the process just after creating the unfolded pose (still full atom)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, run design on the template residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Change all template residues to the specified residue name (name1)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fullatom_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Full atom score for disulfide optimization and repacking, if needed. If not specified calls Rosetta's default full atom score.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score applied to the defined filter_name. Provide a CENTROID scoring function. If not specified calls Rosetta's default centroid atom score.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_motif_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying the residues from the template that will be substituted for the Nub; i.e. everything from the template thatwe WON'T KEEP. This region is dubed as the template's motif. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_NucleotideMutation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="init_sequence" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial sequence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="continue_if_silent" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Make another mutation if the first mutation is silent
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="flexbb" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Let backbone atoms be flexible during relax
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bbnbrs" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Let the +/- n (dflt=1) residues from the mutated residue be bb flexible
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_task" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Cache the initially calculated packer task
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_OopCreatorMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="oop_plus_positions" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Positions where the oop should have a positive pucker
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="oop_minus_positions" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Positions where the oop should have a negative pucker
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="oop_d_plus_positions" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Positions where the oop has a D amino acid and should have a positive pucker
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="oop_d_minus_positions" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Positions where the oop has a D amino acid and should have a negative pucker
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="oop_low_e_puck_positions" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Positions where the oop should have the lower energy pucker option
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prepend_n_residues" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Prepend this many residues to the input pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="append_n_residues" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Append this many residues to the input pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_repack" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Repack the pose at the very end
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_minimize" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize the pose at the very end
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_mc" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Run a short MC simulation on the pose at the very end
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_correct_oop_post" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do special corrections to the oop_post positions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_OopDockDesign_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="mc_temp" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature of Monte Carlo simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_mc_temp" type="real" default="0.8">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature of Monte Carlo simulation for the perturbation stage
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_dock_rot_mag" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of rotations for docking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_dock_trans_mag" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of translations for docking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_small_temp" type="real" default="0.8">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature of Monte Carlo simulation for peptide small moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_small_H" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of small moves on helices
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_small_L" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of small moves on loops
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_small_E" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of small moves on strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_shear_temp" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature of Monte Carlo simulation for peptide shear moves
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_shear_H" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of small moves on helices
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_shear_L" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of small moves on loops
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_shear_E" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of small moves on strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_pep_num_rep" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of peptide moves per cycle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pert_num" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Rounds of perturbation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_design" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Turn off design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_design_min" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize after design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_soft_rep" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a soft-repulsive scoring function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mc_initial_pose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Run a simple MC simulation on the initial pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pymol" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the pymol mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_history" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep the history of the simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="oop_design_first" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   First optimize sequence of the oop ligand
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_OptimizeThreading_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Optimize threading of a sequence onto a pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction to use for threading
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_sampling" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction to use for Monte Carlo sampling
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to PDB file containing native pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chains" type="chain_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Specify chains within the pose to use for threading
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nsteps" type="non_negative_integer" default="5000">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of monte carlo steps
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="step_penalty" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   This attribute is never actually used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recover_low" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Recover the lowest energy structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="greedy" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform a greedy alignment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rebuild_cycles" type="non_negative_integer" default="200">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of loop modeling cycles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" default="0.1">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for the sequence shift mover's score
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature for the Metropolis criterion
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_shift" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of residues to shift sequence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_out" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Add the LoopsOP to the datamap with this name
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PCSLigandTransformMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This Mover performs a PCS data driven grid search of the ligand position and orientation
 </xs:documentation></xs:annotation>
 <xs:attribute name="pcs_input_file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   PCS data input file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction to be used by PCSLigandTransformMover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="char" default="X">
  <xs:annotation><xs:documentation xml:lang="en">
   Ligand chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PDBDiagnosticMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  DOCUMENTATION STRING
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PDBReload_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PDBTrajectoryRecorder_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Stores trajectory output to PDB files
 </xs:documentation></xs:annotation>
 <xs:attribute name="stride" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   How often in terms of cycles to take a snapshot and output to file?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of output file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_limit" type="non_negative_integer" default="500">
  <xs:annotation><xs:documentation xml:lang="en">
   How much information in kb to store in memory before writing to disk
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cumulate_jobs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Combine MPI jobs into a single file?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cumulate_replicas" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Combine replicas into a single file?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PREMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This Mover converts PRE rates into CB-CB atom pair constraints and attaches them to the pose
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Histograms">
   <xs:complexType mixed="true">
    <xs:attribute name="spinlabel" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Three-letter spinlabel code
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="histogram_file" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Path to spinlabel histogram file used for transformation of PREs into CB-CB atom pair constraints
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="bin_size" type="real" default="0.5">
     <xs:annotation><xs:documentation xml:lang="en">
      Histogram bin size
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="pre_input_file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   PRE data input file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_w_csts" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do one round of minimization with PRE distance constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Use this scorefunction when minimizing with PRE distance constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weighted_average" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Calculate average distance from multiple PRE experiments for the same spinlabel site using single experiment weights
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PSSM2Bfactor_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sets B factors in the PDB based on per-residue PSSM score
 </xs:documentation></xs:annotation>
 <xs:attribute name="Value_for_blue" type="real" default="5.0">
  <xs:annotation><xs:documentation xml:lang="en">
   PSSM score cutoff below which b factors will 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain number for which to calculate PSSM and store as B factors
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="Value_for_red" type="real" default="-1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Above this PSSM score, B factors will be set to 50
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PackRotamersMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Repacks sidechains with user-supplied options, including TaskOperations.
 </xs:documentation></xs:annotation>
 <xs:attribute name="nloop" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Equivalent to "-ndruns".Number of complete packing runs before an output (best score) is produced.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PackRotamersMoverPartGreedy_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Greedily optimizes around a set of target residues, then repacks sidechains with user-supplied options, including TaskOperations. Given a task and a set of target residues, this mover will first greedily choose the neighbors of these residues, and then perform the usual simulated annealing on the rest (while maintaining the identity of the greedily chosen sidechains). The greedy choices are made one by one, i.e. first convert every neighbor of a given target sidechain to Ala, choose the lowest energy neighbor rotamer and minimize, then look at the rest of the neighbors and choose the best for interacting with the two chosen so far, and so on, until you're out of neighbor positions. If more than one target residues are specified, a random permutation of this list is used in each run of the mover.
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_factory" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A TaskFactory specification to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_repack" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_repack_greedy" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_minimize" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_residues" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma-separated list of target residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_cstids" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma-separated list of target cstids (e.g. 1B,2B,3B etc)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_threshold" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   distance between residues to be considered neighbors (of target residue)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="choose_best_n" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   number of lowest scoring residues on a protein-ligand interface to use as targets
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ParaNMRScoreMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This Mover scores the input pose with PCS, RDC or PRE data, writes the scores and Q-factors to the scorefile, and optionally creates a file of experimental vs. calculated NMR values and a file with tensor infos.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction used by this Mover for scoring with paramagnetic NMR data.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Write separate score and Q-factor values for each spin-label site, alignment medium or metal ion to scorefile.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_exp_calc" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Write a table of experimental vs. calculated NMR values for each NMR dataset to prediction file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_tensor_info_" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Write tensor and/or spinlabel info for each NMR dataset to info file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ParallelTempering_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform parallel tempering at two temperatures specified on the command line
 </xs:documentation></xs:annotation>
 <xs:attribute name="temp_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW_TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_low" type="real" default="0.6">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW_TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_high" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_levels" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_interpolation" type="interpolation_type" default="linear">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_stride" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="io_stride" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trust_current_temp" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stats_line_output" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stats_silent_output" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stats_file" type="xs:string" default="tempering.stats">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ParatopeEpitopeConstraintMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Adds SiteConstraints from the Antibody Paratope to the Epitope on the antigen. Individual residues of the paratope can be set, or specific CDRs of the paratope can be set as well. The Epitope is auto-detected within the set interface distance, unless epitope residues are specified. These SiteConstraints help to keep only the paratope in contact with the antigen epitope (as apposed to the framework or other parts of the antigen) during rigid-body movement. See the Constraint File Overview for more information on manually adding SiteConstraints. Do not forget to add the atom_pair_constraint term to your scorefunction. A weight of .01 for the SiteConstraints seems optimum. Default paratope is defined as all 6 CDRs (or 3 if working with a camelid antibody).
 </xs:documentation></xs:annotation>
 <xs:attribute name="paratope_cdrs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Specifically set the paratope as these CDR.
List of CDR regions (string) devided by one of the following characters: ":,'`~+*|;. "Recognized CDRs: "Aroop|Chothia|Kabat|Martin|North|"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_distance" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance in Angstroms for the interface, which effects when the SiteConstraint penalty begins.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="paratope_residues_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set specific residues as the paratope. (Ex: 24L,26L-32L, 44H-44H:A). Can specify ranges or individual residues as well as insertion codes (Ex: 44H:A with A being insertion code).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="paratope_residues" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set paratope_residues instead of paratope_residues_pdb as the internal rosetta residue numbers (Ex: 14,25,26). Internal rosetta numbering parsing does not currently support ranges.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epitope_residues_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set specific residues as the epitope. (Ex: 24L,26L-32L, 44H-44H:A). Can specify ranges or individual residues as well as insertion codes (Ex: 44H:A with A being insertion code). Optionally set epitope_residues instead of epitope_residues_pdb as the internal rosetta residue numbers (Ex: 14,25,26). Internal rosetta numbering parsing does not currently support ranges
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epitope_residues" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optionally set epitope_residues instead of epitope_residues_pdb as the internal rosetta residue numbers (Ex: 14,25,26). Internal rosetta numbering parsing does not currently support ranges
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ParatopeSiteConstraintMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Adds SiteConstraints from the Antibody Paratope to the antigen, defined for simplicity as the CDRs. Individual residues of the paratope can be set, or specific CDRs of the paratope can be set as well. These help to keep only the paratope in contact with the antigen (as apposed to the framework) during rigid-body movement. See the Constraint File Overview for more information on manually adding SiteConstraints. Do not forget to add the atom_pair_constraint term to your scorefunction. A weight of .01 for the SiteConstraints seems optimum. Default paratope is defined as all 6 CDRs (or 3 if working with a camelid antibody).
 </xs:documentation></xs:annotation>
 <xs:attribute name="paratope_cdrs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Specifically set the paratope as these CDR.
List of CDR regions (string) devided by one of the following characters: ":,'`~+*|;. "Recognized CDRs: "Aroop|Chothia|Kabat|Martin|North|"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_distance" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance in Angstroms for the interface, which effects when the SiteConstraint penalty begins.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="antigen_chains" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Specify the particular antigen to create the SiteConstraint to
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="paratope_residues_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set specific residues as the paratope. (Ex: 24L,26L-32L, 44H-44H:A). Can specify ranges or individual residues as well as insertion codes (Ex: 44H:A with A being insertion code).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="paratope_residues" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set paratope_residues instead of paratope_residues_pdb as the internal rosetta residue numbers (Ex: 14,25,26). Internal rosetta numbering parsing does not currently support ranges.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="mode_types">
 <xs:restriction base="xs:string">
  <xs:enumeration value="sequence"/>
  <xs:enumeration value="random_order"/>
  <xs:enumeration value="single_random"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="parsed_protocol_subelement_Add_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The steps to be applied.
 </xs:documentation></xs:annotation>
 <xs:attribute name="mover_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The mover whose execution is desired
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The mover whose execution is desired
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The filter whose execution is desired
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The filter whose execution is desired
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="metrics" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of metrics to run at this point.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="labels" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of labels to use for the provided metrics in the output. If empty/missing, use the metric names from the metrics setting. If '-', use the metric's default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apply_probability" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   by default equal probability for all tags
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_at_end" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Report filter value via filter re-evaluation on final pose after conclusion of protocol. Otherwise report filter value as evaluated mid-protocol.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ParsedProtocol_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This is a special mover that allows making a single compound mover and filter vector (just like protocols). The optional option mode changes the order of operations within the protocol, as defined by the option. If undefined, mode defaults to the historical functionality, which is operation of the Mover/Filter pairs in the defined order.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add" type="parsed_protocol_subelement_Add_complex_type"/>
  <xs:group ref="filter"/>
  <xs:group ref="mover"/>
 </xs:choice>
 <xs:attribute name="mode" type="mode_types" default="sequence">
  <xs:annotation><xs:documentation xml:lang="en">
   "sequence" (default) - perform the Mover/Filter pair in the specified sequence; "random_order" - perform EACH of the defined Mover/Filter pairs one time in a random order; "single_random" - randomly pick a SINGLE Mover/Filter pair from the list
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_name" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apply_probability" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   by default equal probability for all tags
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resume_support" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PatchdockTransform_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="fname" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Patchdock filename to be read
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from_entry" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Entry from which to read
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="to_entry" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Entry to which to write
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="random_entry" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use random from and to entries
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_for_cyclize_Bond_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing a bond from the macrocycle
 </xs:documentation></xs:annotation>
 <xs:attribute name="res1" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue one
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom one
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue two
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom two
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_termini" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Add terminal types where necessary
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rebuild_fold_tree" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Rebuild the fold tree around this bond
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_for_cyclize_Distance_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing a distance from the macrocycle
 </xs:documentation></xs:annotation>
 <xs:attribute name="res1" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue one
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom one
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue two
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom two
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_func" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Function to use as a constraint
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_for_cyclize_Angle_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing a angle from the macrocycle
 </xs:documentation></xs:annotation>
 <xs:attribute name="res_center" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Central residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom_center" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Central atom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res1" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue one
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom one
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue two
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom two
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_func" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Function to use as a constraint
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_for_cyclize_Torsion_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing a torsion from the macrocycle
 </xs:documentation></xs:annotation>
 <xs:attribute name="res1" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue one
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom one
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res2" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue two
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom two
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res3" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue three
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom3" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom three
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res4" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue four
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom4" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Atom four
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_func" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Function to use as a constraint
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PeptideCyclizeMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Bond" type="subtag_for_cyclize_Bond_complex_type"/>
  <xs:element name="Distance" type="subtag_for_cyclize_Distance_complex_type"/>
  <xs:element name="Angle" type="subtag_for_cyclize_Angle_complex_type"/>
  <xs:element name="Torsion" type="subtag_for_cyclize_Torsion_complex_type"/>
 </xs:choice>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PeptideOrientationMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sample the membrane energy function landscape using a given energy function
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sfxn_weights" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Energy function weights file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rotation_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation axis: XY, XZ, or YZ
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="zcoord" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Z coordinate
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Angle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should I treat this like an interface landscape scanning problem?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PeptideStubMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Used to append/insert/prepend residues to a pose
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Append">
   <xs:complexType mixed="true">
    <xs:attribute name="resname" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of stub residue
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="position" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Position to insert stub residue
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="jump" type="rosetta_bool" default="false">
     <xs:annotation><xs:documentation xml:lang="en">
      Append residue by jump?
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="connecting_atom" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of atom where residues should be connected
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="repeat" type="non_negative_integer" default="1">
     <xs:annotation><xs:documentation xml:lang="en">
      Number of times to add this residue
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="anchor_rsd" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue to which the stub residue should bond
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="anchor_rsd_selector" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Selector alternative to "anchor_rsd"
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="anchor_atom" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Atom to which the stub residue should bond
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Prepend">
   <xs:complexType mixed="true">
    <xs:attribute name="resname" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of stub residue
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="position" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Position to insert stub residue
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="jump" type="rosetta_bool" default="false">
     <xs:annotation><xs:documentation xml:lang="en">
      Append residue by jump?
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="connecting_atom" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of atom where residues should be connected
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="repeat" type="non_negative_integer" default="1">
     <xs:annotation><xs:documentation xml:lang="en">
      Number of times to add this residue
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="anchor_rsd" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue to which the stub residue should bond
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="anchor_rsd_selector" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Selector alternative to "anchor_rsd"
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="anchor_atom" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Atom to which the stub residue should bond
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Insert">
   <xs:complexType mixed="true">
    <xs:attribute name="resname" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of stub residue
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="position" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Position to insert stub residue
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="jump" type="rosetta_bool" default="false">
     <xs:annotation><xs:documentation xml:lang="en">
      Append residue by jump?
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="connecting_atom" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of atom where residues should be connected
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="repeat" type="non_negative_integer" default="1">
     <xs:annotation><xs:documentation xml:lang="en">
      Number of times to add this residue
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="anchor_rsd" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue to which the stub residue should bond
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="anchor_rsd_selector" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Selector alternative to "anchor_rsd"
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="anchor_atom" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Atom to which the stub residue should bond
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="reset" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Delete the input pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="update_pdb_numbering" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Update the PDB chain IDs and numbers for this pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_rerooting_foldtree" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, we don't bother rebuilding the foldtree to reroot the residue when preserving mainchain torsions.  False by default, so we DO rebuild.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="label" type="xs:string" default="PEPTIDE_STUB_EXTENSION">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue label for residues added by this mover. This requires update_pdb_numbering="true"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PeriodicBoxMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover runs Monte Carlo (MC) simulation in isothermal-isobaric (NPT) condition on a periodic boundary box. Can be applied to a broad range of (small molecules) to extract their thermodynamic properties. Currently it has been applied to running liquid-state simulation of small molecules; see Park et al (2016), "Simultaneous optimization of biomolecular energy function on features from small molecules and macromolecules", JCTC. Details will be added more in near future.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   weights file for the simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nmol_side" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   number of molecules per each dimension; total molecules = nmol_side^3
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initial_density" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   initial density of small molecules in g/cm^3. initial guess is 1.0 from water, but in general other small molecules have lower densities
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   temperature in Kelvin
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="vol_step" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum magnitude of the rotational movement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trans_step" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rot_step" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum magnitude of the rotational movement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tor_step" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum magnitude of the torsion movement. Will try to rotate the torsions given in the residue file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="probability_rigid" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resize_vol_every" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   how often volume movement is called during MC. Otherwise will randomly call either rotation or torsion movement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_every" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   how often will dump the energy components to score file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_silent" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_scorefile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the file to report energy components along the trajectory
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_every" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   dump_every - how often will dump the silent file (if requested)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nsteps_equilibrate" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of MC steps for equilibration
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nsteps_sim" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of MC steps for production simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="istart" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   simulation step to begin with; used for continuing simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="central_molecule_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="correct_LJtruncation" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   whether to add the correction coming from long-range LJ interaction (by integrating over the distance from fa_max_dis to infinity); should be turned on for liquid simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_thermodynamics" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   how often will report thermodynamic properties -- currently not very useful
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pressure" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Pressure in atm
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rg_atom1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rg_atom2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PertMinMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Do a Roberto Chica inspired random atom coordinate perturbation followed by (Cartesian) minimization.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="pert_size" type="real" default="0.001">
  <xs:annotation><xs:documentation xml:lang="en">
   How large a perturbation to make
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="uniform" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Do the perturbation in a uniform sphere, rather than Gaussian
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Only do the perturbations on sidechain atoms (not backbone)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="pert_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="gaussian"/>
  <xs:enumeration value="uniform"/>
  <xs:enumeration value=""/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_PerturbBundle_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perturb helical bundles by direct manipulation of their bundle parameters
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Helix">
   <xs:complexType mixed="true">
    <xs:attribute name="helix_index" type="positive_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Numerical index for this particular helix
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="r0" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Major helix radius, in Angstroms.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="r0_perturbation" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation magnitude for perturbing r0.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="r0_perturbation_type" type="xs:string" default="gaussian">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation type for perturbing r0.  Can be "gaussian" or "uniform".
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="r0_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for r0 should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="omega0" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Major helix twist per residue, stored in radians.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="omega0_perturbation" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation magnitude for perturbing omega0.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="omega0_perturbation_type" type="xs:string" default="gaussian">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation type for perturbing omega0.  Can be "gaussian" or "uniform".
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="omega0_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for omega0 should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="pitch_from_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which pitch value should be copied in order to set omega0, the twist per residue.  An alternative to "omega0_copies_helix".
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega0" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Rotation of a helix about the z-axis, stored in radians.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega0_perturbation" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation magnitude for perturbing delta_omega0.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega0_perturbation_type" type="xs:string" default="gaussian">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation type for perturbing delta_omega0.  Can be "gaussian" or "uniform".
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega0_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for delta_omega0 should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega1" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Rotation of a helix about its own axis, stored in radians.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega1_perturbation" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation magnitude for perturbing delta_omega1.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega1_perturbation_type" type="xs:string" default="gaussian">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation type for perturbing delta_omega1.  Can be "gaussian" or "uniform".
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega1_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for delta_omega1 should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_t" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Offset along the polypeptide backbone, in residues.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_t_perturbation" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation magnitude for perturbing delta_t.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_t_perturbation_type" type="xs:string" default="gaussian">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation type for perturbing delta_t.  Can be "gaussian" or "uniform".
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_t_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for delta_t should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z0_offset" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Offset along the global z-axis, in Angstroms.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z0_offset_perturbation" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation magnitude for perturbing z0_offset.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z0_offset_perturbation_type" type="xs:string" default="gaussian">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation type for perturbing z0_offset.  Can be "gaussian" or "uniform".
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z0_offset_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for z0_offset should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z1_offset" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Offset along the superhelical path through space, in Angstroms.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z1_offset_perturbation" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation magnitude for perturbing z1_offset.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z1_offset_perturbation_type" type="xs:string" default="gaussian">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation type for perturbing z1_offset.  Can be "gaussian" or "uniform".
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z1_offset_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for z1_offset should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="epsilon" type="real" default="1.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Lateral squash parameter/eccentricity of the cross-section of a bundle or barrel.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="epsilon_perturbation" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation magnitude for perturbing epsilon.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="epsilon_perturbation_type" type="xs:string" default="gaussian">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation type for perturbing epsilon.  Can be "gaussian" or "uniform".
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="epsilon_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for epsilon should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="repeating_unit_offset" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      Shift, in residues, of the repeating unit of a helix.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="r1_peratom" type="real_wsslist" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      Minor helix radius -- a vector of real numbers in Angstroms, with one per atom in the repeating unit of a helix.  Read from Crick params file, and not normally set by hand.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="omega1" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Minor helix twist per residue, stored in radians.  Read from Crick params file, and not normally set by hand, sampled, or perturbed.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="omega1_perturbation" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation magnitude for perturbing omega1.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="omega1_perturbation_type" type="xs:string" default="gaussian">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation type for perturbing omega1.  Can be "gaussian" or "uniform".
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="omega1_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for omega1 should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z1" type="real" default="0.000000">
     <xs:annotation><xs:documentation xml:lang="en">
      Minor helix rise per residue along the helix axis, in Angstroms.  Read from Crick params file, and not normally set by hand, sampled, or perturbed.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z1_perturbation" type="real" default="0.0">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation magnitude for perturbing z1.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z1_perturbation_type" type="xs:string" default="gaussian">
     <xs:annotation><xs:documentation xml:lang="en">
      Perturbation type for perturbing z1.  Can be "gaussian" or "uniform".
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z1_copies_helix" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      The index of the parametric object (e.g. the helix, in the case of a helical bundle) from which the value for z1 should be copied.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_omega1_peratom" type="real_wsslist" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      Minor helix angular offsets of each mainchain atom in the repeating unit, in radians.  Read from Crick params file, and not normally set by hand.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="delta_z1_peratom" type="real_wsslist" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      Minor helix axial offsets of each mainchain atom in the repeating unit, in Angstroms.  Read from Crick params file, and not normally set by hand.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="invert" type="rosetta_bool" default="false">
     <xs:annotation><xs:documentation xml:lang="en">
      Inversion state of this helix -- true for inverted.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="set_dihedrals" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      True indicates that the parametric machinery will set mainchain torsion values.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="set_bondangles" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      True indicates that the parametric machinery will allow mainchain bond angle values to deviate from ideality.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="set_bondlengths" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      True indicates that the parametric machinery will allow mainchain bond length values to deviate from ideality.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="use_degrees" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Interpret user-supplied angles as degrees rather than radians
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="default_perturbation_type" type="pert_type">
  <xs:annotation><xs:documentation xml:lang="en">
   Default type for perturbations to the bundle parameters, either uniform or gaussian
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r0" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Major helix radius, in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r0_perturbation" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation magnitude for perturbing r0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r0_perturbation_type" type="xs:string" default="gaussian">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation type for perturbing r0.  Can be "gaussian" or "uniform".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega0" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Major helix twist per residue, stored in radians.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega0_perturbation" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation magnitude for perturbing omega0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega0_perturbation_type" type="xs:string" default="gaussian">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation type for perturbing omega0.  Can be "gaussian" or "uniform".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega0" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation of a helix about the z-axis, stored in radians.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega0_perturbation" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation magnitude for perturbing delta_omega0.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega0_perturbation_type" type="xs:string" default="gaussian">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation type for perturbing delta_omega0.  Can be "gaussian" or "uniform".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation of a helix about its own axis, stored in radians.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1_perturbation" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation magnitude for perturbing delta_omega1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1_perturbation_type" type="xs:string" default="gaussian">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation type for perturbing delta_omega1.  Can be "gaussian" or "uniform".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_t" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset along the polypeptide backbone, in residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_t_perturbation" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation magnitude for perturbing delta_t.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_t_perturbation_type" type="xs:string" default="gaussian">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation type for perturbing delta_t.  Can be "gaussian" or "uniform".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z0_offset" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset along the global z-axis, in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z0_offset_perturbation" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation magnitude for perturbing z0_offset.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z0_offset_perturbation_type" type="xs:string" default="gaussian">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation type for perturbing z0_offset.  Can be "gaussian" or "uniform".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_offset" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset along the superhelical path through space, in Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_offset_perturbation" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation magnitude for perturbing z1_offset.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_offset_perturbation_type" type="xs:string" default="gaussian">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation type for perturbing z1_offset.  Can be "gaussian" or "uniform".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon" type="real" default="1.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Lateral squash parameter/eccentricity of the cross-section of a bundle or barrel.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon_perturbation" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation magnitude for perturbing epsilon.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon_perturbation_type" type="xs:string" default="gaussian">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation type for perturbing epsilon.  Can be "gaussian" or "uniform".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeating_unit_offset" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Shift, in residues, of the repeating unit of a helix.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="r1_peratom" type="real_wsslist" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix radius -- a vector of real numbers in Angstroms, with one per atom in the repeating unit of a helix.  Read from Crick params file, and not normally set by hand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix twist per residue, stored in radians.  Read from Crick params file, and not normally set by hand, sampled, or perturbed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1_perturbation" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation magnitude for perturbing omega1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega1_perturbation_type" type="xs:string" default="gaussian">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation type for perturbing omega1.  Can be "gaussian" or "uniform".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1" type="real" default="0.000000">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix rise per residue along the helix axis, in Angstroms.  Read from Crick params file, and not normally set by hand, sampled, or perturbed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_perturbation" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation magnitude for perturbing z1.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z1_perturbation_type" type="xs:string" default="gaussian">
  <xs:annotation><xs:documentation xml:lang="en">
   Perturbation type for perturbing z1.  Can be "gaussian" or "uniform".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_omega1_peratom" type="real_wsslist" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix angular offsets of each mainchain atom in the repeating unit, in radians.  Read from Crick params file, and not normally set by hand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_z1_peratom" type="real_wsslist" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minor helix axial offsets of each mainchain atom in the repeating unit, in Angstroms.  Read from Crick params file, and not normally set by hand.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Inversion state of this helix -- true for inverted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_dihedrals" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   True indicates that the parametric machinery will set mainchain torsion values.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_bondangles" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   True indicates that the parametric machinery will allow mainchain bond angle values to deviate from ideality.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_bondlengths" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   True indicates that the parametric machinery will allow mainchain bond length values to deviate from ideality.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PerturbBundleHelix_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This is a helper mover called by the PerturbBundle mover.  It is NOT intended to be invoked directly from RosettaScripts.  As such, it has no configurable settings.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PerturbByBins_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perturb mainchain torsions based on the probability of occurancegiven the torsion angles of the preceeding amino acid.
 </xs:documentation></xs:annotation>
 <xs:attribute name="bin_params_file" type="xs:string" default="ABBA">
  <xs:annotation><xs:documentation xml:lang="en">
   File identifier indicating which set of bin parameters is desired.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   First residue of the backbone stretch to be perturbed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Last residue of the backbone stretch to be perturbed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeats" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of rounds of perturbation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="must_switch_bins" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should EVERY perturbation change bins, or is remaining in the same bin acceptable?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PerturbChiSidechain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sample side chain chi angles.
 </xs:documentation></xs:annotation>
 <xs:attribute name="magnitude" type="real" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of chi perturbations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="gaussian" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Sample from a normal distribution (true) or uniformly (false).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PerturbRotamerSidechain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  non-discrete side chain sampling using Dunbrack rotamer probabilities/distributions
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PlaceOnLoop_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="host_chain" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain where hotspot stub residues should be placed on a loop, numbered from 1 sequentially
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_begin" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Beginning residue of loop, in seqpos (Rosetta) numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_end" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Ending residue of loop, in seqpos (Rosetta) numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_toward_stub" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   reclose the loop using minimization to get the stub exactly right
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stubfile" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Input stubfile from which to draw samples
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_high" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_low" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="closing_attempts" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Attempt to close the loop this many times before giving up
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="shorten_by" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Shorten loop by this many residues (multiple options may be provided, will be selected randomly)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lengthen_by" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Lengthen loop by this many residues (multiple options may be provided, will be selected randomly)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="PlaceSimultaneously_subelementStubMinimize_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Defines Movers used to minimize w/r/t stub placement
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="mover_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of the Mover (defined elsewhere in the XML)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="bb_cst_weight" type="real" default="10.0">
     <xs:annotation><xs:documentation xml:lang="en">
      determines the strength of the constraints derived from the stubs. This value is a weight on the cb_force, so larger values are stronger constraints.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="cb_force" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      the force on CB atoms
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="min_repeats_before_placement" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   minimization trials before placement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_repeats_after_placement" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   minimization trials before placement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cb_force" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   the force on CB atoms
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="PlaceSimultaneously_subelementDesignMovers_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Defines Movers used to do design after stub placement
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="mover_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of the Mover (defined elsewhere in the XML)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="use_constraints" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      obey constraints
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="coord_cst_std" type="real" default="0.5">
     <xs:annotation><xs:documentation xml:lang="en">
      standard deviation (width) on coordinate constraint
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="cb_force" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      the force on CB atoms
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
</xs:complexType>

<xs:complexType name="PlaceSimultaneously_subelementNotifyMovers_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Defines Movers (named elsewhere in XML) that must be aware of the protected stub locations so they are not lost
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="mover_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of the Mover (defined elsewhere in the XML)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="cb_force" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      the force on CB atoms
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
</xs:complexType>

<xs:complexType name="PlaceSimultaneously_subelementStubSets_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  What are the Stubs we are placing?
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="stubfile" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      File that has a stub in it
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="filter_name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Stub placement tied to this Filter
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="cb_force" type="real">
     <xs:annotation><xs:documentation xml:lang="en">
      the force on CB atoms
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="explosion" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   which chis to explode, which probably means 'sample extensively'
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stub_energy_threshold" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   after placement and minimization, what energy cutoff to use for each of the hotspots
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_cb_dist" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum distance from ideal placement that is nonetheless considered a hit
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The reference pose to use for finalizing the stub sets (defaults to input pose).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cb_force" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   the force on CB atoms
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PlaceSimultaneously_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Places hotspot residues simultaneously on a scaffold, rather than iteratively as in PlaceStub. It is faster therefore allowing more backbone sampling, and should be useful in placing more than 2 hotspots.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="StubMinimize" type="PlaceSimultaneously_subelementStubMinimize_type"/>
  <xs:element name="DesignMovers" type="PlaceSimultaneously_subelementDesignMovers_type"/>
  <xs:element name="NotifyMovers" type="PlaceSimultaneously_subelementNotifyMovers_type"/>
  <xs:element name="StubSets" type="PlaceSimultaneously_subelementStubSets_type"/>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_to_design" type="positive_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain where design ought to be performed, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_cb_dist" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum distance from ideal placement that is nonetheless considered a hit
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cb_force" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Force to apply to CB atoms
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stubscorefxn" type="xs:string" default="backbone_stub_constraint">
  <xs:annotation><xs:documentation xml:lang="en">
   Scoring function to apply to the stubs being placed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="host_chain" type="positive_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Probably the chain where the stub goes
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimize_fold_tree" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   setup new fold_tree for better numerical behaviour between the residue at the center of target_residues and the nearest residue on the partner
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_rb" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   do we want to minimize the rb dof during stub placement? This will allow a previously placed stub to move a a little to accommodate the new stub. It's a good idea to use this with the previously placed stub adding its implied constraints.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="coor_cst_cutoff" type="real" default="100.0">
  <xs:annotation><xs:documentation xml:lang="en">
   the threshold coordinate constraint energy between the added hotspot residues and the one in the stub library. Use with stubscorefxn=backbone_stub_linear_constraint. PlaceSimultaneously fails if placed residues deviates beyond this threshold.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_non_ala" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   clearly implies something about repacking, although the only comment I could find mentioned reDESIGN instead
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="after_placement_filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of a filter to be applied immediately after stub placement and StubMinimize movers, but before the DesignMovers run. Useful for quick sanity check on the goodness of the stub.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="PlaceStub_subelementStubMinimize_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Defines Movers used to minimize w/r/t stub placement
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="mover_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of the Mover (defined elsewhere in the XML)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="bb_cst_weight" type="real" default="10.0">
     <xs:annotation><xs:documentation xml:lang="en">
      determines the strength of the constraints derived from the stubs. This value is a weight on the cb_force, so larger values are stronger constraints.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
</xs:complexType>

<xs:complexType name="PlaceStub_subelementDesignMovers_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Defines Movers used to do design after stub placement
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="mover_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of the Mover (defined elsewhere in the XML)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="use_constraints" type="rosetta_bool" default="true">
     <xs:annotation><xs:documentation xml:lang="en">
      obey constraints
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="coord_cst_std" type="real" default="0.5">
     <xs:annotation><xs:documentation xml:lang="en">
      standard deviation (width) on coordinate constraint
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
</xs:complexType>

<xs:complexType name="PlaceStub_subelementNotifyMovers_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Defines Movers (named elsewhere in XML) that must be aware of the protected stub locations so they are not lost
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Add">
   <xs:complexType mixed="true">
    <xs:attribute name="mover_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of the Mover (defined elsewhere in the XML)
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
</xs:complexType>

<xs:complexType name="mover_PlaceStub_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The Hotspot-based sidechain placement. This is the main workhorse of the hot-spot centric method for protein-binder design.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="StubMinimize" type="PlaceStub_subelementStubMinimize_type"/>
  <xs:element name="DesignMovers" type="PlaceStub_subelementDesignMovers_type"/>
  <xs:element name="NotifyMovers" type="PlaceStub_subelementNotifyMovers_type"/>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Stores its own name for some reason
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_numbers" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   residue number where Stubs are going / have gone; default value is contents of attribute 'residue_numbers_setter'; REQUIRES residue_number_setter to be set
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_numbers_setter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of thing in DataMap containing residue_numbers; REQUIRED if residue_numbers is set
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_to_design" type="positive_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain where design ought to be performed, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_threshold" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   probably a filtering threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hurry" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   use a truncated scorefxn for minimization. large speed increases, doesn't seem to be less accurate
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="triage_positions" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   remove potential scaffold positions based on distance/cst cutoffs. speeds up the search, but must be turned off to use place_scaffold=true as a replacement for docking (that is, when placing the scaffold at positions regardless of the input structure). triage_positions=true triages placements based on whether the hotspot is close enough (within max_cb_distance) and whether the hotspot's vectors align with those of the host position (with some tolerance).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stub_energy_threshold" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Decoys are only considered if the single-residue energy of the stub is below this value
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stubfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_rb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   do we want to minimize the rb dof during stub placement? This will allow a previously placed stub to move a a little to accommodate the new stub. It's a good idea to use this with the previously placed stub adding its implied constraints.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="after_placement_filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of a filter to be applied immediately after stub placement and StubMinimize movers, but before the DesignMovers run. Useful for quick sanity check on the goodness of the stub.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of a filter to be applied at the final stage of stub placement as the last test, after DesignMovers run. Useful, e.g., if we want a stub to form an hbond to a particular target residue.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_constraints" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   should we apply the coordinate constraints to this stub?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_cb_dist" type="real" default="4.0">
  <xs:annotation><xs:documentation xml:lang="en">
   the maximum cb-cb distance between stub and potential host residue to be considered for placement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="leave_coord_csts" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   should the coordinate constraints be left on when placement is completed successfully? This is useful if you plan on making moves after placement and you want the hotspot's placement to be respected. Note that designing a residue that has constraints on it is likely to yield crashes. You can use task operations to disallow that residue from designing.  Must be true for post_placement_sdev to be interpreted
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="post_placement_sdev" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   related to and requires leave_coord_csts. The lower the sdev (towards 0) the more stringent the constraint.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="place_scaffold" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   use PlaceScaffold instead of PlaceStub. this will place the scaffold on the stub's position by using an inverse rotamer approach.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allowed_host_res" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The reference pose to use for finalizing the stub sets (defaults to input pose).
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="mode_spec_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="all"/>
  <xs:enumeration value="one"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_PlaceSurfaceProbe_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Uses a probe of the specified type to probe the surface of the pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue to use as a surface probe
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="search_partition" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Which search partition to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="total_search_partition" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of total search partitions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mode_specification" type="mode_spec_type" default="all">
  <xs:annotation><xs:documentation xml:lang="en">
   Which mode to use when placing probes?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="search_density" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Density of grid for probe placement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="coarse_angle_sampling" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Bin size for coarse angle sampling
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="coarse_sampling" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Bin size for coarse sampling
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refinement_angle_sampling" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Bin size for angle sampling during refinement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refinement_sampling" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Bin size for sampling during refinement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refinement_distance" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance to use during refinement stageof search
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PlacementMinimization_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A simple rb-minimization in a bb-stub constraint biased forcefield. Note that this mover is dependent on a placement mover for setting its stubsets
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="StubSets" type="stubsets_sub_StubSets_type"/>
 </xs:choice>
 <xs:attribute name="host_chain" type="positive_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Probably the chain where the stub goes
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cb_force" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Force to apply to CB atoms.  Must be positive.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimize_foldtree" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   setup new fold_tree for better numerical behaviour between the residue at the center of target_residues and the nearest residue on the partner
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_rb" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   minimize the rigid body degree of freedom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The reference pose to use for finalizing the stub sets (defaults to input pose).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PoseFromPoseResourceMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  During its creation within the rosetta_scripts application (specifically, during the invocation of its parse_my_tag method), this mover will extract a PoseResource from the DataMap's map of (bitwise-const) Resources and from that PoseResource, extract a deep copy of the Pose that it holds. It will then place that Pose into the DataMap so that a single copy of that Pose can be shared by many Mover/Filters. Why the dance? Why not just hold on to the PoseResource itself? The complication with Pose is that it is not a bitwise-const class -- that is, it holds mutable data. If a single Pose were shared by two threads, then race conditions would likely ensue. To fit into the definition of a bitwise-const object, the PoseResource only allows you to access a deep copy of the original Pose that it holds. If the Pose is expensive to construct, then loading it in from disk a single time might be advantageous. But then, you perhaps do not want to have a separate copy of that Pose for each object that is going to want to access that Pose. The purpose of this mover is to shuttle a Pose out of the safe-to-be-shared-between-threads Resource section of the DataMap into the only-accessed-by-a-single-thread section of the DataMap.
 </xs:documentation></xs:annotation>
 <xs:attribute name="pose_resource_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the PoseResourceobject that must be retrieved from the DataMap's resources map.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PoseFromSequenceMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This is a mover that can create a pose from a sequence, or fasta. if you use a fasta that has multiple sequences in it, and use the 'use_all_in_fasta' tag (set to true) it will use all of the sequences in the fasta and separate them by '/'.  Also you can build the pose extended if you set the 'extended' tag.
 </xs:documentation></xs:annotation>
 <xs:attribute name="fasta" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Fasta file name
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sequence" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   sequence as a string
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_all_in_fasta" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   instead of using only first sequence in a fasta, use them all (and join them via '/')
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extended" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   extend the pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_type_set" type="xs:string" default="fa_standard">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue representation, centroid, fa_standard
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PredesignPerturbMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  PredesignPerturbMover randomly perturbs a ligand in a protein active site. The input protein will be transformed to a polyalanine context for residues surrounding the ligand. A number of random rotation+translation moves are made and then accepted/rejected based on the Boltzmann criteria with a modified (no attractive) score function (enzdes_polyA_min.wts).
 </xs:documentation></xs:annotation>
 <xs:attribute name="trans_magnitude" type="real" default="0.1">
  <xs:annotation><xs:documentation xml:lang="en">
   how large (stdev of a gaussian) a random translation step to take in each of x, y, and z (angstrom)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rot_magnitude" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   how large (stdev of a gaussian) a random rotational step to take in each of the Euler angles (degrees)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dock_trials" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   the number of Monte Carlo steps to attempt
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_factory" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A TaskFactory specification to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Prepack_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_number" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of the jump interface to prepack
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_bb" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize the backbone
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PrepareForCentroid_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Switch to centroid mode
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_PrepareForFullatom_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Switch from centroid to full atom representation.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to loops file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="force_repack" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Enforce side chain repackig
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ProtLigEnsemble_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  High resolution docking of a cross ensemble of protein and ligands
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function to be used during docking
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="qsar_file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   File containing protein mutations and ligand piars
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_score" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function to be used during minimizing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance around ligand to repack
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_correlation" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Ignore correlation weight for first few ligands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_correlation_fter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Ignore correlation weight for at the end
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of cycles to run.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_every_Nth" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform side chain repacking every Nth cycle.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="stfmsd_Positive_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing individual alternative states in the calculation
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   File name containing this alternative state
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="unbound" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   This alternative state is unbound
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="unfolded" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   This alternative state is unfolded
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="stfmsd_Negative_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tags describing individual alternative states in the calculation
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   File name containing this alternative state
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="unbound" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   This alternative state is unbound
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="unfolded" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   This alternative state is unfolded
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ProteinInterfaceMS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Positive" type="stfmsd_Positive_type"/>
  <xs:element name="Negative" type="stfmsd_Negative_type"/>
 </xs:choice>
 <xs:attribute name="generations" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of population generations
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pop_size" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of population
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_packs" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of packing rounds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pop_from_ss" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of population generated from mutating single-state seeds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="numresults" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of results to preserve
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fraction_by_recombination" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Fraction of the population generated by recombination of the parent generation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mutate_rate" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Mutation rate for simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="boltz_temp" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Temperature of Monte Carlo simulation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="anchor_offset" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Anchoring offset for faux alteranative states
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checkpoint_prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix for checkpointing files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checkpoint_interval" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Frequency of checkpointing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checkpoint_gz" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Checkpoint as gzipped files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checkpoint_rename" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Rename checkpoint files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_fname_prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix for output filename
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rb_jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Rigid-body jump that defines the interface, numbered from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="unfolded" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Are we providing an unfolded alternative state?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="unbound" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Are we providing an unbound alternative state?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_is_positive" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Ought the input state to be subject to positive selection?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="profile_bump_threshold" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The energy above which a bump check fails
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="compare_to_ground_state" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Do we have a ground state comparison? Should be true, by default, if there are subelements
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="port_range">
 <xs:restriction base="xs:integer">
  <xs:minInclusive value="1"/>
  <xs:maxInclusive value="65535"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="max_packet_size_range">
 <xs:restriction base="xs:integer">
  <xs:minInclusive value="1024"/>
  <xs:maxInclusive value="65535"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_PyMOLMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  PyMOLMover will send a pose to an instance of the PyMOL molecular visualization software running on the local host. Each call of the mover overwrites the object in PyMOL. It is not a full featured as the version built in to PyRosetta but is extremely useful for visualizing the flow of a protocol or generating a frames for a movie of a protocol.
 </xs:documentation></xs:annotation>
 <xs:attribute name="keep_history" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Each call to the mover stores the pose in a new state/frame of an object in PyMOL rather than overwriting it. Frames can then be played back like a movie to visualize the flow of a protocol.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="address" type="xs:string" default="127.0.0.1">
  <xs:annotation><xs:documentation xml:lang="en">
   IP address of machine running PyMOL with PyMOL-RosettaServer.py script running.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="port" type="port_range" default="65000">
  <xs:annotation><xs:documentation xml:lang="en">
   Port number to which UDP/IP connection should be made
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_packet_size" type="max_packet_size_range" default="7678">
  <xs:annotation><xs:documentation xml:lang="en">
   Max size of packets to send over UDP/IP connection. Default value is dependable from address: for 127.0.0.1 it will be set to 7678 and any other addresses to 1500.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RBIn_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="rigid_body_dbase" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to database file with Vl/Vh orientations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from_entry" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   limit range to sample database from 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="to_entry" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   limit range to sample database from
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="randomize" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Randomly sample from database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="db_entry" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Select specific entry to sample from
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="modify_foldtree" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, set a new fold tree with jump between Vl/Vh
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RBOut_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="template_fname" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The reference PDB file used to build the database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_dbase_fname" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   jump coordinate database file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_from_foldtree" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true get jump from fold tree and not automatically from the pose chain break (dflt)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RDKitMetricsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add RDKit metrics for a given ligand to the Pose's extra scores.
 </xs:documentation></xs:annotation>
 <xs:attribute name="chains" type="chain_cslist" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The chain of the ligand to compute the metrics for
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RNAIdealizeMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Idealize a pose, moving its bond lengths and angles towards ideal values by repeated relaxation
 </xs:documentation></xs:annotation>
 <xs:attribute name="iterations" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of iterations over which to spread idealization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="noise" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Salt initial pose with some Gaussian noise
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_minimize" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize the whole pose at once at the end
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ang_significance_threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of angle deviation to correct (degrees)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RNA_DeNovoProtocol_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Replaces current PDB with a model ready for RNA fragment assembly, preserving the style of rna_denovo -- at least, its most common features -- as exactly as possible.
 </xs:documentation></xs:annotation>
 <xs:attribute name="fasta_files" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Input FASTA files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_pdbs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Input PDB files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_silent_files" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Input silent files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_sequence_strings" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Input sequence strings
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="helical_substructs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   PDBs of helical substructures
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initial_structures" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial locations for DRRAFTER
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="offset" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Sequence numbering offset
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="edensity_mapfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Electron density mapfile
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="virtual_anchor" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Virtual anchor
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutpoint_open" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Cutpoint open
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Secstruct in dot-bracket notation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File containing secstruct in dot-bracket notation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct_general" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   General secstruct in dot-bracket notation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct_general_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File containing general secstruct in dot-bracket notation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct_legacy" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Secstruct legacy
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Input residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_silent_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Input silent residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="obligate_pair" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Obligate pair
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="obligate_pair_explicit" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Obligate pair (expliict)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="working_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Working residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cutpoint_closed" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Cutpoints closed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cyclize_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Cyclize res
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="twoprime_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   2' connection residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fiveprime_cap_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   5' capped residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="block_stack_above_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Block stacking above these residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="block_stack_below_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Block stacking below these residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="in_path" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Input path
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="native" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Native PDB file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="working_native" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Working native PDB file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Constraint file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rna_data_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   RNA data file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_pair" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Remove pairs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_obligate_pair" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Remove obligate pairs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_connection" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain connection
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="get_fold_tree_from_silent_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Silent file for FT setup
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fold_tree_from_silent_file_tag" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Tag to base FT on
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="force_syn_chi_res_list" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Res list for forcing syn chis
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="force_anti_chi_res_list" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Res list for forcing anti chis
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lores_scorefxn" type="xs:string" default="farna/rna_lores.wts">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of lores scorefunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_gap" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Apply constraints to any sequence gaps
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of Monte Carlo cycles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rounds" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of Monte Carlo rounds
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_rna" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_rna" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_bulge" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_secstruct" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_change_frequency" type="real" default="0.1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="close_loops" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="close_loops_after_each_move" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="staged_constraints" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_lores_base_pairs" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_lores_base_pairs_early" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="suppress_bp_constraint" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_chain_closure" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_chain_closure_distance" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter_chain_closure_halfway" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="root_at_first_rigid_body" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dock_each_chunk" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dock_each_chunk_per_chain" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dock_chunks" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   space separated PDB list
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="center_jumps_in_single_stranded" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="autofilter" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bps_moves" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disallow_bps_at_extra_min_res" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_fragment_moves_in_bps" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="frag_size" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_score_frequency" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_lores_silent_file" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_score_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_jump_res" type="nnegative_int_wsslist">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_jump_o3p_to_o5p" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_jump_chainbreak" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_rotation_vector" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_xyz" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   AMW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_jump_reference_RT" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="save_jump_histogram" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_histogram_boxsize" type="real" default="40.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_histogram_binwidth" type="real" default="4.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_histogram_binwidth_rotvector" type="real" default="36.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_histogram_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_consecutive_bulges" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allowed_bulge_res" type="nnegative_int_wsslist">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_filters" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="VDW_rep_screen_info" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="vdw_rep_screen_include_sidechains" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="gradual_constraints" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_rnp_vdw" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grid_vdw_weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="convert_protein_centroid" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rna_protein_docking" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rna_protein_docking_legacy" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rna_protein_docking_freq" type="real" default="0.4">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="small_docking_moves" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="docking_move_size" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="randomize_init_rnp" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rnp_high_res_relax" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rnp_high_res_cycles" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rnp_pack_first" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rnp_ramp_rep" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rnp_min_first" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dock_into_density_legacy" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="new_fold_tree_initializer" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="simple_relax" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="override_refine_pose_rounds" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="refine_native_get_good_FT" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="superimpose_over_all" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fixed_stems" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ft_close_chains" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_1jj2_torsions" type="xs:string" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="vall_torsions" type="xs:string" default="RNA18_HUB_2.154_2.5.torsions">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_library_file" type="xs:string" default="RNA18_HUB_2.154_2.5.jump">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="linear_chainbreak_weight" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chainbreak_weight" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_filters" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd_screen" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symm_hack_arity" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exhaustive_fragment_insertion" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="save_times" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_rounds" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of min cycles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="vary_geometry" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="deriv_check" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_o2prime_trials" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extra_minimize_res" type="nnegative_int_wsslist">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extra_minimize_chi_res" type="nnegative_int_wsslist">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimizer_use_coordinate_constraints" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_type" type="xs:string" default="lbfgs_armijo_nonmonotone">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_coord_constraints" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_bps" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_all_protein" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_protein_sc" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="protein_packing" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="protein_pack_all" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="protein_packing_distance" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_use_nblist" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_nblist_auto_update" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_max_iter" type="non_negative_integer" default="2000">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dock_into_density" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="move_first_rigid_body" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="ramp_func_name">
 <xs:restriction base="xs:string">
  <xs:enumeration value="linear"/>
  <xs:enumeration value="fast_linear"/>
  <xs:enumeration value="geometric"/>
  <xs:enumeration value="inverse_geometric"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_RampingMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Repeatedly applies a given mover while ramping the score from a low value to a high value
 </xs:documentation></xs:annotation>
 <xs:attribute name="start_weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   starting weight for ramp
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="end_weight" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   ending weight for ramp
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scoretype" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the score term to ramp
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ramp_func" type="ramp_func_name" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   the ramp funct to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="inner_cycles" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   number of times to call inner mover in each score ramp increment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="outer_cycles" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   number of increments to ramp score in
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   name of the inner mover to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="montecarlo" type="xs:string" default="none">
  <xs:annotation><xs:documentation xml:lang="en">
   the name of the montecarlo object to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RandomConformers_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Replace all residues in a chain with a randomly selected conformer from its respective rotamer library.
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain ID
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="xsct_real_cslist_w_ws">
 <xs:restriction base="xs:string">
  <xs:pattern value="[ 	]*[-+]?[0-9]*\.?[0-9]*([eE][-+]?[0-9]+)?(,[ 	]*[-+]?[0-9]*\.?[0-9]*([eE][-+]?[0-9]+)?)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_RandomMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Randomly apply a mover from a list given probability weights
 </xs:documentation></xs:annotation>
 <xs:attribute name="movers" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The movers tag takes a comma separated list of mover names
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weights" type="xsct_real_cslist_w_ws">
  <xs:annotation><xs:documentation xml:lang="en">
   NO SPACES between commas and values! The weights tag takes a comma separate list of weights that sum to 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeats" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of times the movers are being applied XDW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RandomMutation_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_task" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Cache the packer task every time
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RandomOmegaFlipMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW_TODO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RandomTorsionMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW_TODO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="max_angle" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW_TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_moves" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW_TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RandomizeBBByRamaPrePro_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The RandomizeBBByRamaPrePro mover randomizes a backbone, or selected residues in a backbone, biased by the Ramachandran preferences of each amino acid, using the RamaPrePro energy term (which uses different scoring tables for positions before proline/peptoids than it does for other positions).
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   An optional residue selector.  If provided, the mover will only randomize the subset of residues that are selected.  If not provided, then the mover is applied to the whole pose. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RecomputeDensityMap_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  PHENIX crystallographic refinement interface code. Uses PHENIX to recompute the density map
 </xs:documentation></xs:annotation>
 <xs:attribute name="sidechains" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   does nothing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ReleaseConstraintFromResidueMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Release constraints from the specified residues.
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector specifying residues to be released. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RemodelMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="build_disulf" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fast_disulf" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="quick_and_dirty" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bypass_fragments" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="match_rt_limit" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_disulfides" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_disulfides" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_loop" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_current_disulfides" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_current_disulfides" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_bb_for_disulf" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_match_rt" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_disulf_fa_score" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="disulf_fa_max" type="real" default="-0.25">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RemoveConstraints_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Remove constraints defined by the specified constraint generators from the pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="constraint_generators" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   List of constraint generator names, separated by a comma
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RemoveMetalConnectionsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A mover that removes bonds between metals and metal-liganding atoms that were added with the SetupMetalsMover or with the -auto_setup_metals commandline flag.  This mover also reverts the metal residue and the metal-liganding residue back to the types that lack the extra bonds.  Note that at the present time it does not remove metal constraints.
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A residue selector for selecting those residues from which to remove metal bonds and variant types.  If a residue AND the metal that it binds are both selected, bonds and variant types are removed from both.  The mover applies to the whole pose if no residue selector is provided. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RemoveRemodelCsts_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="generator" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RenderGridsToKinemage_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Visualization tool for grids
 </xs:documentation></xs:annotation>
 <xs:attribute name="grid_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the grid to dump to the file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="file_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the file to which to dump the given grid
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="low_color" type="three_dim_real_vector">
  <xs:annotation><xs:documentation xml:lang="en">
   RGB values for color to use for low value
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="zero_color" type="three_dim_real_vector">
  <xs:annotation><xs:documentation xml:lang="en">
   RGB values for color to use for zero
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="high_color" type="three_dim_real_vector">
  <xs:annotation><xs:documentation xml:lang="en">
   RGB values for color to use for high value
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="color" type="three_dim_real_vector">
  <xs:annotation><xs:documentation xml:lang="en">
   RGB values for color to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="gradient_bins" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of bins to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stride" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Separation between possible colors
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grid_set" type="xs:string" default="default">
  <xs:annotation><xs:documentation xml:lang="en">
   The Grid Set from which to take the grid.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RepackMinimize_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  RepackMinimizeMover performs extensive interface remodeling
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="residue">
   <xs:complexType mixed="true">
    <xs:attribute name="pdb_num" type="refpose_enabled_residue_number">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number in reference pose or pdb or seqpos numbering
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="resnum" type="refpose_enabled_residue_number">
     <xs:annotation><xs:documentation xml:lang="en">
      Residue number in reference pose or pdb or seqpos numbering
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_repack" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_minimize" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Repack both partners
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_partner1" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Repack partner 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_partner2" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Repack partner 2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Design both partners
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_partner1" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Design partner 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_partner2" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Design partner 2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimize_fold_tree" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Optimize the fold tree
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_rb" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize rigid body degrees of freedom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_bb" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize backbone of both chains
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_bb_ch1" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize backbone of chain 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_bb_ch2" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize backbone of chain 2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize_sc" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize sidechains
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_cutoff_distance" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Interface cutoff distance
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_non_ala" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Repack residues that aren't alanine
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   operating on a symmetric pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="automatic_repacking_definition" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Is the packing setup automatically?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RepackTrial_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Interface for all types of "inner cycle" operations used for loop refinement.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RepackingRefiner_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Repack the sidechains in and around the loop being sampled.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to loops file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="once_every" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Trigger repacking every Nth cycle.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RepeatPropagationMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="first_template_res" type="non_negative_integer" default="9999">
  <xs:annotation><xs:documentation xml:lang="en">
   first template residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="last_template_res" type="non_negative_integer" default="9999">
  <xs:annotation><xs:documentation xml:lang="en">
   last template residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="numb_repeats" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   number of repeats to output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ideal_repeat" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   is the repeat internally ideal
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeat_without_replacing_pose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   for speed when the duplicating the same length pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maintain_cap" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if you want the cap structure and sequence maintained
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maintain_cap_sequence_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   maintain only the sequence in cap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nTerm_cap_size" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of n_term of cap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cTerm_cap_size" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Size of c_term of cap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="maintain_ligand" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   maintain ligand
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extract_repeat_info_from_pose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   mode where repeat info is extracted from input pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extract_repeat_template_repeat" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   location where repeat info is extracted from input pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_pose_numb_repeats" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   number of repeats in input pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_pose_length" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   orig length of input pose. This is used to catch pose length changes
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_pose_duplicate_residues" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   used when only 1 repeat in input pose and there are identical residues in N_term and C_term
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RepeatProteinRelax_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  setups internal repeat symmetry or performs repeat symmetry relax depending on call
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="numb_repeats" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   number of repeats to output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="minimize" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   minimize instead of relax
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_cutpoint_mode" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   adds a cutpoint to the longest loop but keeps the junctions rigid
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_iterations" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   number of iterations to relax
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartesian" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   cartesian relax
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_type" type="xs:string" default="lbfgs_armijo_nonmonotone">
  <xs:annotation><xs:documentation xml:lang="en">
   type of minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_symmetry" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   removes symmetry setup after mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="modify_symmetry_and_exit" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   sets up symmetry and exits,note does not delete symmetry
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function used for relax
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ReplaceRegionMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Replaces a region of length span in the target pose with a specified region of length span in the source pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="span" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Length of the region to replace
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="copy_pdbinfo" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Copy PDBInfo to the new pose?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="src_pose_start" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   First residue to copy from the source pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_pose_start" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   First residue to replace in the target pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="spm_reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ReportEffectivePKA_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ReportFSC_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculate a model-map FSC (Fourier Shell Correlation), and integrate over the input resolution ranges.
 </xs:documentation></xs:annotation>
 <xs:attribute name="res_low" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Low resolution cut off (Angstroms)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_high" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   High resultion cut off (Angstroms)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nresbins" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=50
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="asymm_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mask" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bin_squared" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="testmap" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ReportGradients_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  PHENIX crystallographic refinement interface code.  Reports to file per score-term gradients, used for: a) verbose output; b) normalization for non-etable derivs
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   report per-atom/per-scoreterm gradients
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="outfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   output file for gradients
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="features_reporter">
 <xs:choice>
  <xs:element name="AntibodyFeatures" type="features_reporter_AntibodyFeatures_type"/>
  <xs:element name="AtomAtomPairFeatures" type="features_reporter_AtomAtomPairFeatures_type"/>
  <xs:element name="AtomInResidueAtomInResiduePairFeatures" type="features_reporter_AtomInResidueAtomInResiduePairFeatures_type"/>
  <xs:element name="AtomTypesFeatures" type="features_reporter_AtomTypesFeatures_type"/>
  <xs:element name="BetaTurnDetectionFeatures" type="features_reporter_BetaTurnDetectionFeatures_type"/>
  <xs:element name="CDRClusterFeatures" type="features_reporter_CDRClusterFeatures_type"/>
  <xs:element name="ChargeChargeFeatures" type="features_reporter_ChargeChargeFeatures_type"/>
  <xs:element name="ConcurrencyTest" type="features_reporter_ConcurrencyTest_type"/>
  <xs:element name="DdGFeatures" type="features_reporter_DdGFeatures_type"/>
  <xs:element name="GeometricSolvationFeatures" type="features_reporter_GeometricSolvationFeatures_type"/>
  <xs:element name="HBondFeatures" type="features_reporter_HBondFeatures_type"/>
  <xs:element name="HBondParameterFeatures" type="features_reporter_HBondParameterFeatures_type"/>
  <xs:element name="HelixBundleFeatures" type="features_reporter_HelixBundleFeatures_type"/>
  <xs:element name="HelixCapFeatures" type="features_reporter_HelixCapFeatures_type"/>
  <xs:element name="InterfaceFeatures" type="features_reporter_InterfaceFeatures_type"/>
  <xs:element name="JobDataFeatures" type="features_reporter_JobDataFeatures_type"/>
  <xs:element name="LoopAnchorFeatures" type="features_reporter_LoopAnchorFeatures_type"/>
  <xs:element name="ModelFeatures" type="features_reporter_ModelFeatures_type"/>
  <xs:element name="OrbitalsFeatures" type="features_reporter_OrbitalsFeatures_type"/>
  <xs:element name="PairFeatures" type="features_reporter_PairFeatures_type"/>
  <xs:element name="PdbDataFeatures" type="features_reporter_PdbDataFeatures_type"/>
  <xs:element name="PoseCommentsFeatures" type="features_reporter_PoseCommentsFeatures_type"/>
  <xs:element name="PoseConformationFeatures" type="features_reporter_PoseConformationFeatures_type"/>
  <xs:element name="ProteinBackboneAtomAtomPairFeatures" type="features_reporter_ProteinBackboneAtomAtomPairFeatures_type"/>
  <xs:element name="ProteinBackboneTorsionAngleFeatures" type="features_reporter_ProteinBackboneTorsionAngleFeatures_type"/>
  <xs:element name="ProteinBondGeometryFeatures" type="features_reporter_ProteinBondGeometryFeatures_type"/>
  <xs:element name="ProteinRMSDFeatures" type="features_reporter_ProteinRMSDFeatures_type"/>
  <xs:element name="ProteinRMSDNoSuperpositionFeatures" type="features_reporter_ProteinRMSDNoSuperpositionFeatures_type"/>
  <xs:element name="ProteinResidueConformationFeatures" type="features_reporter_ProteinResidueConformationFeatures_type"/>
  <xs:element name="RadiusOfGyrationFeatures" type="features_reporter_RadiusOfGyrationFeatures_type"/>
  <xs:element name="ResidueBurialFeatures" type="features_reporter_ResidueBurialFeatures_type"/>
  <xs:element name="ResidueConformationFeatures" type="features_reporter_ResidueConformationFeatures_type"/>
  <xs:element name="ResidueFeatures" type="features_reporter_ResidueFeatures_type"/>
  <xs:element name="ResidueGridScoresFeatures" type="features_reporter_ResidueGridScoresFeatures_type"/>
  <xs:element name="ResidueScoresFeatures" type="features_reporter_ResidueScoresFeatures_type"/>
  <xs:element name="ResidueSecondaryStructureFeatures" type="features_reporter_ResidueSecondaryStructureFeatures_type"/>
  <xs:element name="ResidueTotalScoresFeatures" type="features_reporter_ResidueTotalScoresFeatures_type"/>
  <xs:element name="ResidueTypesFeatures" type="features_reporter_ResidueTypesFeatures_type"/>
  <xs:element name="RotamerBoltzmannWeightFeatures" type="features_reporter_RotamerBoltzmannWeightFeatures_type"/>
  <xs:element name="RotamerFeatures" type="features_reporter_RotamerFeatures_type"/>
  <xs:element name="RotamerRecoveryFeatures" type="features_reporter_RotamerRecoveryFeatures_type"/>
  <xs:element name="RuntimeFeatures" type="features_reporter_RuntimeFeatures_type"/>
  <xs:element name="SaltBridgeFeatures" type="features_reporter_SaltBridgeFeatures_type"/>
  <xs:element name="SandwichFeatures" type="features_reporter_SandwichFeatures_type"/>
  <xs:element name="ScoreFunctionFeatures" type="features_reporter_ScoreFunctionFeatures_type"/>
  <xs:element name="ScoreTypeFeatures" type="features_reporter_ScoreTypeFeatures_type"/>
  <xs:element name="ScreeningFeatures" type="features_reporter_ScreeningFeatures_type"/>
  <xs:element name="SecondaryStructureSegmentFeatures" type="features_reporter_SecondaryStructureSegmentFeatures_type"/>
  <xs:element name="SimpleMetricFeatures" type="features_reporter_SimpleMetricFeatures_type"/>
  <xs:element name="SmotifFeatures" type="features_reporter_SmotifFeatures_type"/>
  <xs:element name="StrandBundleFeatures" type="features_reporter_StrandBundleFeatures_type"/>
  <xs:element name="StructureFeatures" type="features_reporter_StructureFeatures_type"/>
  <xs:element name="StructureScoresFeatures" type="features_reporter_StructureScoresFeatures_type"/>
  <xs:element name="TaskOperationFeatures" type="features_reporter_TaskOperationFeatures_type"/>
  <xs:element name="TotalScoreFeatures" type="features_reporter_TotalScoreFeatures_type"/>
  <xs:element name="TrajectoryMapFeatures" type="features_reporter_TrajectoryMapFeatures_type"/>
  <xs:element name="UnrecognizedAtomFeatures" type="features_reporter_UnrecognizedAtomFeatures_type"/>
  <xs:element name="WaterFeatures" type="features_reporter_WaterFeatures_type"/>
 </xs:choice>
</xs:group>

<xs:simpleType name="ab_interface_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="[LH][LH]?_[AH]"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="ab_interface_list">
 <xs:restriction base="xs:string">
  <xs:pattern value="[LH][LH]?_[AH]([:,'`~+*|;.][LH][LH]?_[AH])*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="features_reporter_AntibodyFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Collects data on an antibody including CDRs, interfaces of L_H, L_A, H_A, and LH_A (this can be set), and other metrics.
 </xs:documentation></xs:annotation>
 <xs:attribute name="pack_separated" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   repack chains after separation (better evaluation of unbound state).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_together" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   repack the input before calculating bound state values
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dSASA_cutoff" type="real" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO currently unused parameter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="compute_packstat" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Compute interface packstat
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_all_antigen_analysis" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do not report antigen analysis.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the scoring function
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface" type="ab_interface_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Definition of the interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interfaces" type="ab_interface_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Define multiple interface sections
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cdr_definition" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_ab_scheme" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_proto_cdr4" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_AtomAtomPairFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Atom pair features for any two atoms in a pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="min_dist" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum distance of interest
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_dist" type="real" default="10.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum distance of interest
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nbins" type="positive_integer" default="15">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of bins to subdivide the above interval
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_AtomInResidueAtomInResiduePairFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Atom pair features given a pair of residues of interest
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_AtomTypesFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Features for which atom type set is being used by a Pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_BetaTurnDetectionFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Gives features about beta turn geometry
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_CDRClusterFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Reports clusters for the specified CDRs
 </xs:documentation></xs:annotation>
 <xs:attribute name="cdrs" type="xs:string" default="L1,L2,L3,H1,H2,H3">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of CDRs for which to report features
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="input_ab_scheme" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Numbering scheme for input antibody
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ChargeChargeFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Evaluate features for charge pairs and the geometries connecting them (torsions, angles, distances) for a pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ConcurrencyTest_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Only used to test concurrent writing to a database. Doesn't report anything about the pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_DdGFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record features of the ddgs for a set of mutations, performed with a particular Mover
 </xs:documentation></xs:annotation>
 <xs:attribute name="ddG_scan_mover" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover with which to scan mutations
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_GeometricSolvationFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Records features about the geometric solvation score around particular hydrogen bonding sites in a Pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="hbond_def">
 <xs:restriction base="xs:string">
  <xs:enumeration value="energy"/>
  <xs:enumeration value="AHdist"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="features_reporter_HBondFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record features related to all the hydrogen bonds made in a Pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="definition_type" type="hbond_def" default="energy">
  <xs:annotation><xs:documentation xml:lang="en">
   Definition for hydrogen bond assignment: either by 'energy' or acceptor-H distance ('AHdist')
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="definition_threshold" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Threshold for making an H-bond assignment. Probably should be -1 - 0 for energy, 2-2.8 for AHdist
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_HBondParameterFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record the scoring function's hbonding parameters
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_HelixBundleFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Forms helical bundles from helices in a database and outputs bundles to a database
 </xs:documentation></xs:annotation>
 <xs:attribute name="num_helices_per_bundle" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of helices to put in each bundle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_helix_size" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum size of helix to include in a bundle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="helix_cap_dist_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum distance between helix caps in the bundle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_per_residue_fa_attr" type="real" default="0.2">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum fa_attr score per residue for a bundle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_interacting_set_fraction" type="real" default="0.4">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum fraction of residues in the bundle that interact with another helix
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_HelixCapFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Records the dssp as well as the 4 residues on either side of the end of a helix, to obtain data on capping residue preferences
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="interface_features_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="[ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$.?\]{}|\-_\\~=%zyxwvutsrqponmlkjihgfedcba]+_[ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$.?\]{}|\-_\\~=%zyxwvutsrqponmlkjihgfedcba]+"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="interface_features_list">
 <xs:restriction base="xs:string">
  <xs:pattern value="[ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$.?\]{}|\-_\\~=%zyxwvutsrqponmlkjihgfedcba]+_[ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$.?\]{}|\-_\\~=%zyxwvutsrqponmlkjihgfedcba]+([:,'`~+*|;.][ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$.?\]{}|\-_\\~=%zyxwvutsrqponmlkjihgfedcba]+_[ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$.?\]{}|\-_\\~=%zyxwvutsrqponmlkjihgfedcba]+)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="features_reporter_InterfaceFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
FeaturesReporter wrapper for InterfaceAnalyzer
 </xs:documentation></xs:annotation>
 <xs:attribute name="pack_separated" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Pack the structures separately
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_together" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Pack the structures together
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dSASA_cutoff" type="real" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Cutoff for buried solvent accessible surface area to ignore reporting most values
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="compute_packstat" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Compute packstat score for interface?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function to use when evaluating interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface" type="interface_features_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Specify the interface as ChainsSide1_ChainsSide2 (e.g. AB_C)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interfaces" type="interface_features_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Provide a comma-separated list of interfaces.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_JobDataFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record all of the job's string-real pair data (i.e. extra weird scoreterms, often) as features.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_LoopAnchorFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record features in and around loop anchors and the transform between them
 </xs:documentation></xs:annotation>
 <xs:attribute name="min_loop_length" type="positive_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum length of a loop to be recorded
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_loop_length" type="positive_integer" default="30">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum length of a loop to be recorded
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_relevant_residues_as_loop_length" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Instead define the loop's length only in terms of relevant residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ModelFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="min_helix_size" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum helix size
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_strand_size" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum strand size
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_ss_cluster_size" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum size of secondary structure clusters
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_ss_cluster_size" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum size of secondary structure clusters
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_cutopff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum distance beyond which two secondary structure elements may not be assigned to the same cluster
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_cutoff" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum angle beyond which two secondary structure elements may not be assigned to the same cluster
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_OrbitalsFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Report features about the positioning and energies of orbitals (use the orbitals scorefunction!)
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_PairFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Records details about all pairs of residues, such as their neighbors within 10A, their distance, and their sequence distance
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_PdbDataFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record PDB-specific features for a set of residues, such as the minimum and maximum occupancies for the backbone and sidechain atoms
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_PoseCommentsFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record all the pose comments as features
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_PoseConformationFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Records all the chain endings (the final residue of each chain, including the final residue of the Pose overall) as features
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ProteinBackboneAtomAtomPairFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Records all the distances between backbone atoms -- all possible pairs! -- for each possible residue pair, as features.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ProteinBackboneTorsionAngleFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Reports the torsion angles (phi, psi, and omega) for a protein backbone, for every residue
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ProteinBondGeometryFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record every four-atom torsion not in the AtomTree but in the Conformation and give its value, its ideal value, the difference, and the energy.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ProteinRMSDFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record RMSD, the reference ID to which RMSD was computed as well as dummy variables determining what type of protein RMSD was computed
 </xs:documentation></xs:annotation>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ProteinRMSDNoSuperpositionFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record RMSD, the reference ID to which RMSD was computed as well as dummy variables determining what type of protein RMSD was computed; for this FeaturesReporter, no superposition is performed
 </xs:documentation></xs:annotation>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ProteinResidueConformationFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_RadiusOfGyrationFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record radius of gyration for each structure as a feature
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ResidueBurialFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record the number of neighbors at different radii and sasa with different probe radii
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ResidueConformationFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Report diverse conformational features on a per-residue basis for a Pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ResidueFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Just record the residue number + type + name3 for each residue of a Pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ResidueGridScoresFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  detailed per atom scores of Scoring Grids
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="char" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   required chain name tag (single character)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grid_set" type="xs:string" default="default">
  <xs:annotation><xs:documentation xml:lang="en">
   The Grid Set from which to get the scoring features
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ResidueScoresFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Record all per-residue and per-residue-pair scores given a scoring function
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction to be used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ResidueSecondaryStructureFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Report ResidueSecondaryStructure geometry and scores to features Statistics Scientific Benchmark
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ResidueTotalScoresFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  report the total per residue score to a features database
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   score function name
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ResidueTypesFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Report ResidueTypes features Statistics Scientific Benchmark
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_RotamerBoltzmannWeightFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Report rotamer boltzmann weights to features Statistics Scientific Benchmark
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   score function name
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_RotamerFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  report idealized torsional DOFs Statistics Scientific Benchmark
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_RotamerRecoveryFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  report rotamer recover features and scores to features Statistics Scientific Benchmark
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   mover_name and reference_name are mutually exclusive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   mover and reference_name are mutually exclusive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   mover and reference_name are mutually exclusive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="protocol" type="xs:string" default="RRProtocolMinPack">
  <xs:annotation><xs:documentation xml:lang="en">
   mover and protocol are mutually exclusive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nonideal" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   sets RRProtocolRTMin or RRProtocolRelax to nonideal
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartesian" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   sets RRProtocolRTMin or RRProtocolRelax to cartesian
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="comparer" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotamer recovery comparer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="recovery_threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   recovery threshold of the comparer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="absolute_threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   absolute electron density correlation that must be met by native to be considered in recovery statistics
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="predicted_features_reporter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   feature reporter that reports to db of type ReportToDB
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with the RRProtocolReferenceStructure. The PDB formatted file that should be compared against. Mutually exclusive with the 'reference_pose' attribute, but at least one of the two must be provided.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_pose" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with the RRProtocolReferenceStructure. The Pose held in the DataMap that should be compared against. This Pose should be loaded into the DataMap using the ResourceManager and the PoseFromPoseResourceMover. Mutually exclusive with the 'reference_pose' attribute, but at least one of the two must be provided.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chidiff_num_chi_to_compare" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   For use only with the ChiDiff rotamer-recovery comparer, this controls the maximum number of chi dihedrals will be examined for each residue. In the absence of this attribute, the ChiDiff reporter will examine all chi dihedrals
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_RuntimeFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  report runtime information for the current job
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_SaltBridgeFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  report geometric solvation energy for each polar site to a features database
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_SandwichFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Extracts and analyzes beta sandwiches.
 </xs:documentation></xs:annotation>
 <xs:attribute name="min_num_strands_to_deal" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of strands in beta sandwich
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_num_strands_to_deal" type="non_negative_integer" default="140">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of strands to consider
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_res_in_strand" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of residues per beta strand to count it
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_CA_CA_dis" type="real" default="3.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum Calpha distance between strands (in Angstroms)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_CA_CA_dis" type="real" default="6.2">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum Calpha distance between strands (in Angstroms)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_N_O_dis_between_sheets" type="real" default="3.3">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum N-O distance between beta sheets
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_N_H_O_angle_between_two_sheets" type="real" default="154.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum N-H-O distance between two beta sheets
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_C_O_N_angle" type="real" default="120.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum C-O-N angle for a hydrogen bond between strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_sheet_dis" type="real" default="7.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum distance between beta sheets in a sandwich (in Angstroms)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_sheet_dis" type="real" default="15.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum distance between beta sheets in a sandwich (in Angstroms)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_sheet_angle_with_cen_res" type="real" default="130.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum angle of the plane of the beta sheet with its center residue (defines the twist of the sheet)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_sheet_angle_by_four_term_cen_res" type="real" default="25.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum sheet angle defined by the four terminal residues and central residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_sheet_angle_by_four_term_cen_res" type="real" default="150.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum sheet angle defined by the four terminal residues and central residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_sheet_torsion_cen_res" type="real" default="-150.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum sheet torsion about the center residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_sheet_torsion_cen_res" type="real" default="150.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum sheet torsion about the central residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_num_strands_in_sheet" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum number of strands per beta sheet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_inter_sheet_dis_CA_CA" type="real" default="4.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum Calpha distance between sheets
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_inter_sheet_dis_CA_CA" type="real" default="24.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum Calpha distance between sheets
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_inter_strand_angle_to_not_be_same_direction_strands" type="real" default="120.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum angle between strands at which the strands will still be considered parallel
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_abs_inter_strand_dihedral_to_not_be_same_direction_strands" type="real" default="100.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum absolute value of the interstrand dihedral angle for them to be considered antiparallel
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_num_sw_per_pdb" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of sandwiches per PDB
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="check_N_to_C_direction_by" type="xs:string" default="PE">
  <xs:annotation><xs:documentation xml:lang="en">
   How to determine the N to C direction?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="check_canonicalness_cutoff" type="real" default="80.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Cutoff for considering a sandwich canonical
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="count_AA_with_direction" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Count amino acids in each direction?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="do_not_write_resfile_of_sandwich_that_has_non_canonical_LR" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do not write resfile of beta sandwiches with non-canonical loop regions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude_desinated_pdbs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Exclude designated PDBs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude_sandwich_that_has_near_backbone_atoms_between_sheets" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Exclude beta sandwiches with nearby backbone atoms between the two sheets
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude_sandwich_that_has_non_canonical_LR" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Exclude sandwiches with noncanonical loop regions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude_sandwich_that_has_non_canonical_properties" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Exclude noncanonical beta sandwiches
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude_sandwich_that_has_non_canonical_shortest_dis_between_facing_aro_in_sw" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Exclude sandwiches with noncanonical shortest distances between aromatics in the sandwich
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude_sandwich_that_is_linked_w_same_direction_strand" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Exclude sanwiches linked with a parallel strand?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude_sandwich_that_is_suspected_to_have_not_facing_2_sheets" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Exclude sandwiches that do not have two facing sheets?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude_sandwich_with_SS_bond" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Exclude disulfide bonded sandwiches?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_starting_loop_size" type="non_negative_integer" default="6">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum starting loop size
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_ending_loop_size" type="non_negative_integer" default="6">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum ending loop size
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_E_in_extracted_sw_loop" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum strand size in extracted sandwich loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_H_in_extracted_sw_loop" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum strand size in the extracted sandwich loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="no_helix_in_pdb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do not include sandwiches with helices in the PDB
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="inter_sheet_distance_to_see_whether_a_sheet_is_surrounded_by_other_sheets" type="real" default="13.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum cutoff for inter-sheet distance for a sheet to be associated with surrounding sheets. WIthin this distance, they are too close to each other.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allowed_deviation_for_turn_type_id" type="real" default="40.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum deviation for turn type id
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="primary_seq_distance_cutoff_for_beta_sheet_capping_before_N_term_capping" type="xs:integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum distance from beta sheet capping and N terminus
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="primary_seq_distance_cutoff_for_beta_sheet_capping_after_N_term_capping" type="xs:integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   How many residues after the N terminal capping residues must beta sheet capping residues occur
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="primary_seq_distance_cutoff_for_beta_sheet_capping_before_C_term_capping" type="xs:integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   How many residues before the C terminal capping residues must beta sheet capping residues occur
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="primary_seq_distance_cutoff_for_beta_sheet_capping_after_C_term_capping" type="xs:integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   How many residues after the C terminal capping residues must beta sheet capping residues occur
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_cutoff_for_electrostatic_interactions" type="real" default="7.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Only score electrostatic interactions within this distance
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="CB_b_factor_cutoff_for_electrostatic_interactions" type="real" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   Cbeta B factor above which electrostatics will not be scored
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_primary_seq_distance_diff_electrostatic_interactions" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum primary sequence distance between residues for electrostatics to be scored
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="do_not_connect_sheets_by_loops" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do not connect sheets with loops
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extract_sandwich" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Extract beta sandwiches
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wt_for_pro_in_starting_loop" type="real" default="20">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep wild type residue for prolines in initial loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wt_for_pro_in_1st_inter_sheet_loop" type="real" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep wild type residues for prolines in the first intersheet loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wt_for_pro_in_3rd_inter_sheet_loop" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep wild type prolines in the third intersheet loop
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_all_info_files" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Write all information to files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_AA_kind_files" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Write files specifying amino acid distribution
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_loop_AA_distribution_files" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Write files specifying loop amino acid distribution
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_strand_AA_distribution_files" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Write files specifying beta strand amino acid distribution
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_beta_sheet_capping_info" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Output information on beta sheet capping
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_chain_B_resnum" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Write chain_B_resnum file for InterfaceAnalyzer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_electrostatic_interactions_of_all_residues" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Output info on all electrostatic interactions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_electrostatic_interactions_of_all_residues_in_a_strand" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Output info for strand electrostatic interactions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_electrostatic_interactions_of_surface_residues_in_a_strand" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Output surface electrostatic interactions from strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_heading_directions_of_all_AA_in_a_strand" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Output strand direction for all strand residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_p_aa_pp_files" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Output p_aa_pp score for residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_phi_psi_of_all" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Output all phi and psi angles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_phi_psi_of_E" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Output strand backbone torsion angles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_rama_at_AA_to_files" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Output all rama scores to file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_resfile" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Output a resfile for this strand
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_resfile_NOT_FWY_on_surface" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Do not allow aromatics on the sandwich surface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_resfile_when_seq_rec_is_bad" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Output resfile even if sequence recovery is bad
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_resfile_to_minimize_too_many_core_heading_FWY_on_core_strands" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Write a resfile that will help prevent having too many internal-facing aromatics on core strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_resfile_to_minimize_too_many_core_heading_FWY_on_edge_strands" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Write a resfile that will help prevent having too many internal-facing aromatics on core strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_resfile_to_minimize_too_much_hydrophobic_surface" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Write a resfile that will minimize surface hydrophobic residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ScoreFunctionFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add score function parameters to a features database
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function name
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ScoreTypeFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Report scoring type features
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_ScreeningFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  report JSON object with information needed for vHTS postprocessing
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="descriptor">
   <xs:complexType mixed="true">
    <xs:attribute name="type" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      descriptor type
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="chain" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   chain tag
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_SecondaryStructureSegmentFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Report residue and residue secstruct features besides for a secondary structure segment
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_SimpleMetricFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Run a set of SimpleMetrics on the pose, and put the data into a features table 
 </xs:documentation></xs:annotation>
 <xs:group ref="simple_metric" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="metrics" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of previously defined simple_metrics to be added.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix tag for the data.  Added as an extra column in the data. Also used to grab cache data
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="suffix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   suffix tag for the data.  Added as an extra column in the data. Also used to grab cahce data
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="table_name" type="xs:string" default="simple_metrics">
  <xs:annotation><xs:documentation xml:lang="en">
   The table to add metrics to.  Should match the same exact data that you had before if the table has already been created!
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_cached_data" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use any data stored in the datacache that matches the set metrics name (and any prefix/suffix.)  Data is stored during a SimpleMetric's apply function, which is called during RunSimpleMetrics
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fail_on_missing_cache" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If use_cached_data is true, and no data is found, do we fail?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_SmotifFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Calculate 4 geometric values used to classify smotifs. Reference (http://www.ncbi.nlm.nih.gov/pubmed/20421995)
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_StrandBundleFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Extract beta strand, strand pairs, sandwiches in pdb file and writes it into database
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_StructureFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  report structure identifiers to a features database
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_StructureScoresFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  report structure score features to a features database
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   scorefunction name
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_TaskOperationFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  TaskOperation feature reporter
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of previously-defined TaskOperations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_TotalScoreFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Report the total score for each structure using whatever score function you like.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the score function to report.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_TrajectoryMapFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Map trajectory structure_ids to cycle number
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_UnrecognizedAtomFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  report unrecognized atoms features to features Statistics Scientific Benchmark
 </xs:documentation></xs:annotation>
 <xs:attribute name="neighbor_distance_cutoff" type="real" default="12.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Neighbor distance cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="features_reporter_WaterFeatures_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Report geometry between water molecules and hydrogen bond donors/acceptors
 </xs:documentation></xs:annotation>
 <xs:attribute name="targets" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of water names to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="acc_dist_cutoff" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Hydrogen bond acceptor distance cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="don_dist_cutoff" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Hydrogen bond donor distance cutoff
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ahd_cutoff" type="real" default="90.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Lower cutoff for acceptor-hydrogen-donor angle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ReportToDB_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Reports the specified features to the specified database
 </xs:documentation></xs:annotation>
 <xs:group ref="features_reporter" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="db_session_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name for the (previously declared) DatabaseSession object to retrieve from the DataMap; if this option is given, then it will take precedence over the other database-session-defining attributes that are also allowed for this element. DatabaseSession objects are declared in the DATABASE_SESSIONS top-level block in RosettaScripts.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="transaction_mode" type="database_transaction_mode_string" default="standard">
  <xs:annotation><xs:documentation xml:lang="en">
   Transaction mode for database output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_mode" type="database_mode_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which type of output database to use?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of output database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_pq_schema" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Schema name within the database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_separate_db_per_mpi_process" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a separate database for each MPI process? (sqlite3 only.) Incompatible with database_partition.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_partition" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Database partition to use. (sqlite3 only.) Incompatible with database_separate_db_per_mpi_process.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_read_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Is the database read-only? (sqlite3 only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_host" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   URI to the database server (postgres and mysql only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_user" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Username for database access( postgres and mysql only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_password" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Password for database access (postgres and mysql only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_port" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Port to use for access to database server (postgres only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="batch_description" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Description of features database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="protocol_id" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Manually controls protocol_id associated with this ReportToDB tag. Autoincrements by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="batch_id" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Manually controls the batch_id associated with this ReportToDB tag. Autoincrements by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_transactions" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use transactions to group database i/o to be more efficient. Turning them off can help debugging.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_size" type="non_negative_integer" default="2000">
  <xs:annotation><xs:documentation xml:lang="en">
   Specify the maximum number 1k pages to keep in memory before writing to disk.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_xray_virt" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Remove virtual residue attached during xray refine process
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relevant_residues_mode" type="report_to_db_relevant_residues_mode" default="explicit">
  <xs:annotation><xs:documentation xml:lang="en">
   Determine what features are reported given the relevant residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ReportXYZ_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds the X,Y,Z position to the scorefile
 </xs:documentation></xs:annotation>
 <xs:attribute name="term" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which terminus to get the xyz postions options n_term or c_term
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnum" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Which residue to get the xyz of
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="xs:string" default="A">
  <xs:annotation><xs:documentation xml:lang="en">
   which chain if there are multiple chains
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ResetBaseline_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Use this mover to call the reset_baseline method in filters Operator and CompoundStatement. Monte Carlo mover takes care of resetting independently, so no need to reset if you use MC
 </xs:documentation></xs:annotation>
 <xs:attribute name="filter" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   the name of the Operator or CompoundStatement filter
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ResetFoldTree_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  wipes out a fold tree making the first residue 0 and the last residue the length of the protein
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ResetFullModelInfoMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Resets a Pose's FullModelInfo
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ResidueLabelsToPymolSelectionMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Print selection commands for labeled residues
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb_count" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Provide the PDB count instead of Rosetta's
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ResidueReplacementRebuildMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  DOCUMENTATION STRING
 </xs:documentation></xs:annotation>
 <xs:attribute name="seqpos" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue to delete
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nres_additional" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Additional adjacent residues, beyond the seqpos specified, to delete
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue name for replacement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ResidueTypeConstraintMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="AA_name3" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="favor_bonus" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ResidueVicinityCstCreator_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lstart" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="restrict_region_modes">
 <xs:restriction base="xs:string">
  <xs:enumeration value="psipred"/>
  <xs:enumeration value="random"/>
  <xs:enumeration value="score"/>
  <xs:enumeration value="packstat"/>
  <xs:enumeration value="random_mutation"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_RestrictRegion_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="type" type="restrict_region_modes">
  <xs:annotation><xs:documentation xml:lang="en">
   'Enum' of possible mover modes.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name of resfile
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="psipred_cmd" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Command for running psipred
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Blueprint file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_regions" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of regions to mutate
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="permanent_restriction" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_trp" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum number of tryptophans
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RigidBodyPerturbNoCenter_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="rot_mag" type="real" default="0.1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trans_mag" type="real" default="0.4">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RigidBodyTiltMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="jump" type="xs:integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="x" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="y" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tilt1_mag" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tilt2_mag" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tilt1_center" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tilt2_center" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RigidBodyTransMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="distance" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="xs:integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="x" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="y" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="z" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="vary_stepsize" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RigidChunkCM_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Holds a specified region of the pose constant, fixed to the coordinates in the template pdb file.
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector specifying the region over which this client mover will be applied. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector specifying the region of the template pdb to use as a template for the pose. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Unique name for this client mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apply_to_template" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of movers to apply to the template region
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   PDB file to be used as a template for the specified region. If the argument 'INPUT' is supplied instead, it will fix the coordinates to their current positions
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Loops file specifying the region of the template pdb to use as a template for the pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String specifying indices of residues to be used as a template
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RingConformationMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Based on a given MoveMap, this mover selects movable cyclic residues and flips their rings to an idealized ring conformer.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="sample_high_energy_conformers" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Set whether or not this Mover will sample all ring conformers, regardless of energy.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RingPlaneFlipMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Based on a given ResidueSelector and limited by a MoveMap, this mover selects applicable cyclic residues and performs a 180-degree shearing move in which the anomeric bond and the main-chain bond on the opposite side of the ring are moved in opposite directions.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of a pre-defined ResidueSelector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movemap_factory" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of a pre-defined MoveMapFactory.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="axis_char">
 <xs:restriction base="xs:string">
  <xs:pattern value="[xyz]"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_RollMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Rigid body mover that rolls the pose about the specified axis
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="axis">
   <xs:complexType mixed="true">
    <xs:attribute name="x" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      X coordinate for this vector
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="y" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Y coordinate for this vector
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Z coordinate for this vector
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="translate">
   <xs:complexType mixed="true">
    <xs:attribute name="x" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      X coordinate for this vector
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="y" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Y coordinate for this vector
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Z coordinate for this vector
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="chain" type="positive_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain ID of object to roll
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="random_roll" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotate and/or translate pose over random axis/direction
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="random_roll_angle_mag" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Standard deviation for a gaussium magnitude rotation about a random axis
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="random_roll_trans_mag" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Standard deviation for a 3D gaussian random translation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_angle" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum angle to roll about axis, required if random_roll is not set to true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_angle" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum angle to roll about axis, required if random_roll is not set to true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="axis" type="char">
  <xs:annotation><xs:documentation xml:lang="en">
   Which axis (x, y, or z) to roll around
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_res" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   First residue ID of object to roll
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_res" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Last residue ID of object to roll
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RotLibOut_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="min_frag_len" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set minimum fragment length to use in alignmnet
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_dist" type="real" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimum distance between aligned residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   for debuging, whether to dump pdbs during run
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rotamer_db_filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to save rotamer db file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sequence_alignment_filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   file name to save sequence alignment between pose and input pdbs.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RotamerRecoveryMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A wrapper mover that measures how similar the rotamers are before and after running the child mover
 </xs:documentation></xs:annotation>
 <xs:attribute name="protocol" type="xs:string" default="RRProtocolMinPack">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of protocol to use for rotamer recovery detection
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover to apply to pose. Interchangeable with mover_name.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Mover to apply to pose. Interchangeable with mover.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="comparer" type="xs:string" default="RRComparerAutomorphicRMSD">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of RRComparer to use when measuring rotamer recovery
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reporter" type="xs:string" default="RRReporterSimple">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of RRReporter to use to report rotamer recovery
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RotamerTrialsMinMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="nonideal" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW_TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartesian" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW_TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RotamerTrialsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="show_packer_task" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RotamerTrialsRefiner_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Use rotamer trials to quickly optimize the sidechains in and around the loop being sampled.Rotamer trials is a greedy algorithm for packing sidechains. Each residue is considered only once, and is placed in its optimal rotamer
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loops_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to loops file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Rotate_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform a course random rotation  throughout all rotational degrees of freedom
 </xs:documentation></xs:annotation>
 <xs:attribute name="distribution" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling distribution; Either "uniform" or "gaussian"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="degrees" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   How degrees should be rotated around. Recommended=360
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of cycles. Recommended: 1000
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain ID. MUST be a completely connected single chain.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tag_along_chains" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma separated list of chains to be moved together with the rotating chain. E.g. metals or water.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grid_set" type="xs:string" default="default">
  <xs:annotation><xs:documentation xml:lang="en">
   The ScoringGrid set to use for scoring the rotation. If no scoring grids (at all) are present in the XML, use a default classic grid.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Rotates_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform a course random rotation  throughout all rotational degrees of freedom.
 </xs:documentation></xs:annotation>
 <xs:attribute name="distribution" type="distribution_string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling distribution; Either "uniform" or "gaussian"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="degrees" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   How degrees should be rotated around. Recommended=360
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of cycles. Recommended: 1000
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain to be rotated. Not compatible with "chains" option.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chains" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of chain IDs. Not compatible with "chain" option.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_RunSimpleMetrics_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Run a set of SimpleMetrics on the pose, with a particular prefix and suffix. (prefix + custom_type + _ + metric_name + suffix) 
 </xs:documentation></xs:annotation>
 <xs:group ref="simple_metric" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="metrics" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of previously defined simple_metrics to be added.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix tag for the values to be added to the output score file for these metrics. (prefix + custom_type + _ + metric_name + suffix)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="suffix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   suffix tag for the values to be added to the output score file for these metrics. (prefix + custom_type + _ + metric_name + suffix)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="override" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we override any existing data?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SampleFarnesylMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  DOCUMENTATION STRING
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="enumerate" type="rosetta_bool" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Enumerate possible farnesyl conformations (there may be a ton!) or just sample a subset from them.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SampleTiltAngles_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sample different tilt angles of the pose within the membrane.
 </xs:documentation></xs:annotation>
 <xs:attribute name="prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix for output files.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ref1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name attribute of previously defined score function to use as first reference score function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ref2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name attribute of previously defined score function to use as second reference score function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ref3" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name attribute of previously defined score function to use as third reference score function.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SaneMinMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Minimizes a Pose to a local energy minimum by performing energy minimization of a ScoreFunction over the allowable degrees of freedom, defined by a MoveMap. Unlike the classic MinMover, the only method for setting Minimization options is via the MinimizerOptions class.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SaveAndRetrieveSidechains_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="allsc" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Save and retrieve all sidechains
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="multi_use" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Set up so that we can use this multiple times
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="two_step" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Save and retrieve in two steps
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jumpid" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump ID to keep track of
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   If two_step is false, what structure to get the sidechains from.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SavePDBInfoMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Saves/Restores the PDBInfo of a Pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="reference_info_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name to assign to the given PDBInfo.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restore_info" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   If False, store the PDBInfo; if True, place it back on the pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SavePoseMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   PDB file to be read in as a reference pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restore_pose" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Restore the specified reference pose INTO the current pose rather than saving the current pose INTO the reference pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SaveSequenceToCommentsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Saves the current sequence to comments
 </xs:documentation></xs:annotation>
 <xs:attribute name="save_seq_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name under which to save the current save to comments
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ScaleMapIntensities_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  scale density map intensities to match a pose's
 </xs:documentation></xs:annotation>
 <xs:attribute name="res_low" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Low resolution cut off (Angstroms), default=10000
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_high" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   High resolution cut off (Angstroms), default=0
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="b_sharpen" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=0.0
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="truncate_only" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fade_width" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=0.1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mask" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mask_output" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="asymm_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_bs" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bin_squared" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO,default=false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nresbins" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=50
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="outmap" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name for output map.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SchemePlaceMotifs_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover will use only motif pairs found in input motif_sets or in the default motif sets to design interface residues.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   Tag name.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dumpfile" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   This is an option to generate a extra pdb that dumps the motifs used for packing, it's meant for troubleshooting.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mode" type="xs:string" default="basic">
  <xs:annotation><xs:documentation xml:lang="en">
   The option 'standard' will just skip the mode setting. 'standard' is the recommended use, it requires taskops and then looks for motifs in the designable residues. 'basic' uses Will's scheme logic to decide where the motifs are being placed (and therefore which residues are designable).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allowed_aas" type="xs:string" default="motifs">
  <xs:annotation><xs:documentation xml:lang="en">
   This means that it will use the motifs in the motif files. Do not change this, there is currently no other option.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="halt_on_error" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO: unsure?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="motif_sets" type="xs:string" default="XRW TO DO">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to motif sets file to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ScoreMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This Mover applies the scorefunction to your pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function to use when scoring this pose. Must be previously defined in the DataMap. Calls ScoreFunctionFactory with an empty string by default, which is either a good default or NULL
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   boolean controls a bunch of extra output - pose.energies.show() and something called a jd2:ScoreMap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="envclaim_CutBiasClaim_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="label" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bias" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region_start" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="region_end" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="envclaim_ctrl_str">
 <xs:restriction base="xs:string">
  <xs:pattern value="((([Dd][Oo][Ee][Ss]_[Nn][Oo][Tt])|([Cc][Aa][Nn])|([Mm][Uu][Ss][Tt]))_[Cc][Oo][Nn][Tt][Rr][Oo][Ll])|([Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee])"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="envclaim_JumpClaim_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="jump_label" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="position1" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="position2" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="control_strength" type="envclaim_ctrl_str" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initialization_strength" type="envclaim_ctrl_str" default="DOES_NOT_CONTROL">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cut" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom1" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="atom2" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="physical_cut" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="envclaim_TorsionClaim_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of previously defined residue selector that defines where to apply this claim. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="control_strength" type="envclaim_ctrl_str" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initialization_strength" type="envclaim_ctrl_str" default="DOES_NOT_CONTROL">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="backbone" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sidechain" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="envclaim_VirtResClaim_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="vrt_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_label" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Defaults to vrt_name with _jump appended
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="parent" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_control_strength" type="envclaim_ctrl_str" default="DOES_NOT_CONTROL">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="envclaim_XYZClaim_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="selection" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="control_strength" type="envclaim_ctrl_str" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initialization_strength" type="envclaim_ctrl_str" default="DOES_NOT_CONTROL">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relative_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="envclaim">
 <xs:choice>
  <xs:element name="CutBiasClaim" type="envclaim_CutBiasClaim_complex_type"/>
  <xs:element name="JumpClaim" type="envclaim_JumpClaim_complex_type"/>
  <xs:element name="TorsionClaim" type="envclaim_TorsionClaim_complex_type"/>
  <xs:element name="VirtResClaim" type="envclaim_VirtResClaim_complex_type"/>
  <xs:element name="XYZClaim" type="envclaim_XYZClaim_complex_type"/>
 </xs:choice>
</xs:group>

<xs:complexType name="scriptcm_Mover_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Specify a previously defined mover to use as a client mover
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of a previously defined mover to set as a client mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:group name="scriptcm">
 <xs:choice>
  <xs:group ref="mover"/>
  <xs:group ref="envclaim"/>
 </xs:choice>
</xs:group>

<xs:complexType name="mover_ScriptCM_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XSD_XRW: TO DO
 </xs:documentation></xs:annotation>
 <xs:group ref="scriptcm" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   This mover requires its name attribute to be specified.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SecStructMinimizeMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A minimization mover that searches a lower-dimensional dihedral space to find repeated secondary structure motifs.
 </xs:documentation></xs:annotation>
 <xs:attribute name="alpha_beta_pattern" type="xs:string" default="A">
  <xs:annotation><xs:documentation xml:lang="en">
   A string defining the 'mainchain torsion structure' of the heteropolymer of interest. If you are operating on a motif of three alpha residues followed by a beta residue, for example, your string here is AAAB.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constrain" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Constrain to input values to prevent excessive movement.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dihedral_pattern" type="xs:string" default="A">
  <xs:annotation><xs:documentation xml:lang="en">
   A string defining the pattern of dihedral angles desired. For example, if you have an all alpha peptide but you want to require that adjacent peptide units have distinct dihedrals, alternating on down the chain, your string here is AB.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SeedFoldTree_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Seeds">
   <xs:complexType mixed="true">
    <xs:attribute name="begin" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="anchor" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Jump">
   <xs:complexType mixed="true">
    <xs:attribute name="from" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="to" type="non_negative_integer" default="0">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="ddg_based" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_pdb" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SeedSetupMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Seeds">
   <xs:complexType mixed="true">
    <xs:attribute name="begin" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="chi_chain2" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi_chain1" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_chain1" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_chain2" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_distance_cutoff" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_target" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_foldpose" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_target" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_foldpose" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_all_aas" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_repack" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_minimize" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_design" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="norepack_res" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packtask" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SegmentHybridizer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  SegmentHybridize takes the principle from the cartesian hybridize protocol to close loops. it will align fragments to the broken section until the ends are close enough (as defined through rms_frags) to use the cartesian minimizer for closure. The principle is to allow small breaks to close one big gap, with the idea of closing the small ones through minimization. Can be used for loop closure or grafting (still very experimental).
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Span">
   <xs:complexType mixed="true">
    <xs:attribute name="begin" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XSD XRW: TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      XSD XRW: TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="extend_outside" type="non_negative_integer" default="5">
     <xs:annotation><xs:documentation xml:lang="en">
       how far to go outside of the loop to allow fragement hybridization for loop closure (note, if you go too far out it might not close the loop...)
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="extend_inside" type="non_negative_integer" default="1">
     <xs:annotation><xs:documentation xml:lang="en">
      XSD XRW: TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="fa_scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="frag_big" type="non_negative_integer" default="9">
  <xs:annotation><xs:documentation xml:lang="en">
   what fragment size should be used to close the gaps?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="frag_smal" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nfrags" type="non_negative_integer" default="50">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartfrag_overlap" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_seq" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   how to pick the fragments, as in either only secondary structure dependent or secondary structure and sequence dependent
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rms_frags" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   at what size of a break to use the cartesian minimizer to close the gap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="auto_mm" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   should the movemap (defines what should be allowed to minimize) be set automatically?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="frag_tries" type="xs:integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   how many fragments should be tried?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mc_cycles" type="non_negative_integer" default="200">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_frags" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_cycles" type="non_negative_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="all_movable" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extra_min" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW: TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SegmentSequenceProfileMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform alignment-based sequence profile generation. TODO fordas
 </xs:documentation></xs:annotation>
 <xs:attribute name="structure_store" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Path of target struture store.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector spanning a contiguous segment region to profile. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd_tolerance" type="real" default=".5">
  <xs:annotation><xs:documentation xml:lang="en">
   Lookup endpoint rmsd tolerance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pseudocount" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Sequence profile pseudocount.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_lookup_count" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Output count of lookup hits as score entry.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_pssm_filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Output generated log-odds pssm with given output filename.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_pssm_inline" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Output generated log-odds pssm inline with pdb under given header name.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apply_profile" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Apply profile via FavorSequenceProfile.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scaling" type="favor_seqprof_scaling_type" default="prob">
  <xs:annotation><xs:documentation xml:lang="en">
   Set how to scale the given values, see FavorSequenceProfile."prob"=Boltzmann-weighted probability based on the profile score"global"= global linear fixed-zero rescalingsuch that all (pre-weighted) values fall in the range of -1.0 to 1.0"none" does no adjustment of values.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Adjust the post-scaling strength of the constraints, see FavorSequenceProfile.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SeparateDnaFromNonDna_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Moves DNA and non-DNA apart in the provided pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetAACompositionPotential_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sets the target amino acid composition of a pose and adds the relevant term to the indicated score function
 </xs:documentation></xs:annotation>
 <xs:attribute name="file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   File specifying desired amino acid composition
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for amino acid composition potential
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function to add this potential to
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetChiMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A mover to change one chi angle.
 </xs:documentation></xs:annotation>
 <xs:attribute name="angle" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Angle to which to set the chi.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chinum" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Which chi is to be set.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resnum" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue with the chi in question.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="jump_type">
 <xs:restriction base="xs:string">
  <xs:pattern value="ALL|All|all|[0-9]+(,[0-9]+)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_SetCrystWeight_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  PHENIX crystallographic refinement interface code. Converts weights from one score function into weights for the xtal_ml term for some other scorefunction; MoveMap helps determine optimal weight
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn_ref" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String name of scorefunction defined in SCOREFUNCTION section; used to copy weights from; defaults to scorefunction defined by this element's scorefunction subelement)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="jump_type">
  <xs:annotation><xs:documentation xml:lang="en">
   if 'ALL', 'All', or 'all'; all jumps mobile in MoveMap.  else, interpreted as a comma-separated list of integers labeling jumps
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   chi mobile in MoveMap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   backbone mobile in MoveMap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondangle" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   bond angles mobile in MoveMap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondlength" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   bond lengths mobile in MoveMap
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Always set to this weight; overriding heuristics
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight_min" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep weight above this minimum
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight_scale" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   scale weight by this factor (applies to automatic AND overriden weights)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartesian" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use cartesian ??? when automatically determining weights
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetMembranePositionMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Sets the center position and normal vector of the membrane
 </xs:documentation></xs:annotation>
 <xs:attribute name="center" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Position of center of membrane in format x,y,z
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normal" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Membrane normal vector in format x,y,z
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetRefinementOptions_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  PHENIX crystallographic refinement interface code.  Sets refinement options to pass along through the PHENIX interface.
 </xs:documentation></xs:annotation>
 <xs:attribute name="res_high" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   sets high ResLimit for PHENIX refinement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_low" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   sets low ResLimit for PHENIX refinement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="twin_law" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   sets twin law for PHENIX refinement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="algorithm" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   sets algorithm for PHENIX refinement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   sets target function for PHENIX refinement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="map_type" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   sets map type for PHENIX refinement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sharpen_b" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   sets sharpen_b for PHENIX refinement
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cifs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   cif files passed along to PHENIX refinement.  Legal argument is cifs split by commas: 'cif1.cif,cif2.cif,cif3.cif
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetResidueAlias_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Used to specify an alias name in the StructureDefinition for a specified residue
 </xs:documentation></xs:annotation>
 <xs:attribute name="alias_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Alias name to set for the specified residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segment_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional argument to specify which segment this residue is in. If specified, residue numbering is local within the segment.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of residue for which to specify an alias
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetSecStructEnergies_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Gives a bonus to user-specified secondary structures
 </xs:documentation></xs:annotation>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of blueprint file used to specify secondary structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss_from_blueprint" type="xs:string" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Get secondary structure from blueprint file?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct" type="dssp_string">
  <xs:annotation><xs:documentation xml:lang="en">
   String specifying desired pose secondary structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_dssp" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use DSSP to determine ideal secondary structure (if not provided )? If false, pose secondary structure will be used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hh_pair" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String specifying helix pairings
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hh_pair_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for helix pairings
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss_pair" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String specifying strand pairings
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss_pair_weight" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for strand pairings
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hss_triplets" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String specifying helix-strand-strand triplets
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function to use when scoring pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_symmetry" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Add symmetry definition to pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="natbias_ss" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Native bias for strand-strand pairings
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="natbias_hh" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Native bias for helix-helix pairings
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="natbias_hs" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Native bias for helix-strand pairings
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="natbias_stwist" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Native bias for strand twist
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hs_pair" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight of hs_pair score term
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rsigma" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight of rsigma score term
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hh_dist_wts" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weights for helix-helix distance term
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hh_dist" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Ideal distance between helices
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hh_dist_s2" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Variance in ideal distance between helices
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hh_cross_angle_wts" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weights for helix-helix cross angle term
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hh_cross_angle" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Ideal helix-helix cross angle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hh_cross_angle_s2" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Variance of helix-helix cross angle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hs_atr_dist_wts" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weights for helix-strand attraction term
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hs_atr_dist" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Ideal helix-strand distance
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hs_atr_dist_s2" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Variance in ideal helix-strand distance
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hs_angle_wts" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weights for helix-strand angle term
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hs_angle" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Ideal helix-strand angle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hs_angle_s2" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Variance in ideal helix-strand angle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hsheet_repl_dist" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Helix-sheedistance for NatbiasHelicesSheetPotential
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hh_align_angle_wts" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Weights for helix-helix alignment term
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hh_align_angle" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Ideal helix-helix alignment angle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="hh_align_angle_s2" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Variance in ideal helix-helix alignment angle
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetTemperatureFactor_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Co-opt the PDB field for temperature factors to instead store filter values
 </xs:documentation></xs:annotation>
 <xs:attribute name="filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter to apply
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scaling" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Scale filter value by this amount prior to storing in temperature factor
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="torsion_Torsion_complex_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Atom1">
   <xs:complexType mixed="true">
    <xs:attribute name="atom" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="residue" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Atom2">
   <xs:complexType mixed="true">
    <xs:attribute name="atom" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="residue" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Atom3">
   <xs:complexType mixed="true">
    <xs:attribute name="atom" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="residue" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="Atom4">
   <xs:complexType mixed="true">
    <xs:attribute name="atom" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="residue" type="non_negative_integer" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="angle" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perturbation_type" type="xs:string" default="gaussian">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="perturbation_magnitude" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="torsion_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="custom_rama_table" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extending" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetTorsion_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Torsion" type="torsion_Torsion_complex_type"/>
 </xs:choice>
 <xs:attribute name="random" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="foldtree_root" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="SetupCoiledCoilFoldTreeMover_chain_string">
 <xs:restriction base="xs:string">
  <xs:pattern value="[ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$.?\]{}|\-_\\~=%zyxwvutsrqponmlkjihgfedcba]*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_SetupCoiledCoilFoldTreeMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chains" type="SetupCoiledCoilFoldTreeMover_chain_string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain2_cutpos" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_chainbreak_variants" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetupForDensityScoring_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Roots pose in VRT. Option to trigger docking into the density.
 </xs:documentation></xs:annotation>
 <xs:attribute name="realign" type="xs:string" default="no">
  <xs:annotation><xs:documentation xml:lang="en">
   Dock pose into density map.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetupForSequenceSymmetryMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TODO
 </xs:documentation></xs:annotation>
 <xs:attribute name="independent_regions" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of residue selectors. Each one defines a region of sequence symmetry. For example, say you had a dimer and a trimer in the same system. You would pass one residue selector that selects all of the residues in the dimer and a second residue selector that selects all of the residues in the trimer. independent_regions="dimer_selector,trimer_selector". If the user provides residue selectors, this will not enforce sequence symmetry on regions not covered by any selection. Otherwise the entire protein will be treated as one single region of sequence symmetry.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetupForSymmetry_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Given a symmetry definition file that describes configuration and scoring of a symmetric system, this mover 'symmetrizes' an asymmetric pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="definition" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The path and filename for a symmetry definition file. This is optional because you can also specify -symmetry:symmetry_definition {pathto/filename_symmetry_definition_file} on the command line.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="preserve_datacache" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the datacache from the input asymmetric pose will be copied into the new symmetric pose. If false, the pose datacache will be cleared. Default is false for historical reasons.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_pdb_info_labels" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, keep PDB Info labels from input pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry_resource" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name for symmetry definition object created by the ResourceManager; this Resource must be declared in the RESOURCES block at the top of the protocol XML file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_global_symmetry_at_parsetime" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the -symmetry_definition flag be set globally by this mover at parse time.  The default (true) maintains compatibility with all protocols, but can cause problems if symmetry is set or changed partway through a protocol.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_for_SHCM_HotspotFiles_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Wrapper for tags describing each of several hotspot files to read
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="HotspotFile">
   <xs:complexType mixed="true">
    <xs:attribute name="file_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      File name of the hot spot stub file
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="nickname" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Nickname for the hot spot stub file
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="stub_num" type="positive_integer" default="100000">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetupHotspotConstraints_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="redesign_chain" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   The chain on which to redesign, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile" type="xs:string" default="NONE">
  <xs:annotation><xs:documentation xml:lang="en">
   Resfile applied
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cb_force" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Force applied to CB atoms in hotspot constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="worst_allowed_stub_bonus" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apply_stub_self_energies" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apply_stub_bump_cutoff" type="real" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="backbone_stub_constraint_weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight on the backbone_stub_constraint scoring term
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stubscorefxn" type="xs:string" default="backbone_stub_constraint">
  <xs:annotation><xs:documentation xml:lang="en">
   Scoring term through which the backbone stub constraints are exerted
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pick_best_energy_constraint" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="colonyE" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stubfile" type="xs:string" default="stubs.pdb">
  <xs:annotation><xs:documentation xml:lang="en">
   File containing hotspot stubs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_for_SHCLM_HotspotFiles_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Wrapper for tags describing each of several hotspot files to read
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="HotspotFile">
   <xs:complexType mixed="true">
    <xs:attribute name="file_name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      File name of the hot spot stub file
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="nickname" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Nickname for the hot spot stub file
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="stub_num" type="positive_integer" default="100000">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetupHotspotConstraintsLoops_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="HotspotFiles" type="subtag_for_SHCLM_HotspotFiles_type"/>
 </xs:choice>
 <xs:attribute name="redesign_chain" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   The chain on which to redesign, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="resfile" type="xs:string" default="NONE">
  <xs:annotation><xs:documentation xml:lang="en">
   Resfile applied
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cb_force" type="real" default="0.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Force applied to CB atoms in hotspot constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="worst_allowed_stub_bonus" type="real" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apply_stub_self_energies" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apply_stub_bump_cutoff" type="real" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pick_best_energy_constraint" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start" type="positive_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   First loop residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop" type="positive_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Final loop residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="colonyE" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stubfile" type="xs:string" default="stubs.pdb">
  <xs:annotation><xs:documentation xml:lang="en">
   File containing hotspot stubs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetupMetalsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Mover that adds chemical bonds and distance/angle constraints between metal ions and their coordinating atoms. If a residue selector or resnum list are provided, only sets up the specified metals. Otherwise, sets up all metals.
 </xs:documentation></xs:annotation>
 <xs:attribute name="remove_hydrogens" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should hydrogens on metal binding atoms be removed?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="constraints_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we ONLY add the constraints to the metal and not set up covalent bonds? Useful for repeated applications of the mover if constraints are deleted.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_constraints" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we add constraints to the pose? May be used if, for example, the user wants to add their own custom constraints elsewhere.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="metals_detection_LJ_multiplier" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Multiplier for the distance cutoff for contact detection, which is based on the Lennard-Jones radii of the two atoms. This option overrides default value set through the command line.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="metals_distance_constraint_multiplier" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Multiplier for distance constraints between metal and metal-binding atoms. This option overrides default value set through the command line.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="metals_angle_constraint_multiplier" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Multiplier for angle constraints between metal and metal-binding atoms. This option overrides default value set through the command line.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="metal_residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector used to indicate which metal residues should be set up. If no selector or resnum string is provided, all metals will be set up. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="contact_residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Selector used to indicate which metal contacts should be set up. If no selector or resnum string is provided, all contacts for the specified metals will be set up. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="metal_resnums" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="contact_resnums" type="resnum_list_with_ranges">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residue numbers to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetupNCS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Establishes a non crystallographic symmetry (NCS) between residues. The mover sets dihedral constraints on backbone and side chains to force residues to maintain the same conformation. The amino acid type can be enforced too. This mover does not perform any minimization, so it is usually followed by MinMover or RelaxMover.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="NCSgroup">
   <xs:complexType mixed="true">
    <xs:attribute name="source" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Reference residues, express as single residue or interval. Source and target need the same number of residues.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="target" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Target residues, express as single residue or interval. Source and target need the same number of residues.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="NCSend">
   <xs:complexType mixed="true">
    <xs:attribute name="source" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Reference residues, express as single residue or interval. Source and target need the same number of residues.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="target" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Target residues, express as single residue or interval. Source and target need the same number of residues.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="NCSdistance">
   <xs:complexType mixed="true">
    <xs:attribute name="source" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Reference residues, express as single residue or interval. Source and target need the same number of residues.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="target" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Target residues, express as single residue or interval. Source and target need the same number of residues.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="bb" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Sets dihedral constraints for backbone.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Sets dihedral constraints for side chains.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="wt" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="limit" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetric_sequence" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Forces the sequence from the source into the target.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sd" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   for Harmonic, distance
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distance_pair" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   descrip
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SetupPoissonBoltzmannPotential_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Initialize the runtime environment for Poisson-Boltzmann solver. It allows keeping track of protein mutations to minimize the number of PB evaluations.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="per_residue_ddg" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_unbound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_bound" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_bound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we relax the bound state, if a relax mover is specified?  Default false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_unbound" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we relax the unbound state, if a relax mover is specified?  Default true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="translate_by" type="xs:decimal" default="1000.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance in Angstroms by which to separate the components of the bound state
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="solvate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Solvate bound pose (using ExplicitWater mover)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="solvate_unbound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Solvate unbound pose (using ExplicitWater mover)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="solvate_rbmin" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use rigid-body minimization following solvation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_water_jump" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Include waters in rigid-body minimization following solvation and packing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="compute_rmsd" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Compute the rmsd both with and without superimposing -- requires in:file:native to be supplied
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdbs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Dump debugging PDB files. Dumps 6 pdbs per instance: BOUND_before_repack, BOUND_after_repack, BOUND_after_relax, UNBOUND_before_repack, UNBOUND_after_repack, and UNBOUND_after_relax.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apbs_path" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="charged_chains" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma delimited list of charged chainnumbers ( greater than or equal to 1). e.g. charged_chains=1,2,3 for chains 1, 2 and 3. No extra whitespace is permitted
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="revamp_near_chain" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma delimited list of chain numbers. Scale down PB interactions if near the given chain(s). Default to none
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="potential_cap" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Upper limit for PB potential input. Default to 20.0
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sidechain_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Set "true" to limit calculation of interactions to sidechain. Default to "false"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="epsilon" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   mutation tolerance in Angstrom. Potential is re-computed only when | Ca1 - Ca2 | greater than epsilon, for all Ca1 in Alpha-carbon in previous pose and all Ca2 in the current pose. The default is 2.0 A
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="calcenergy" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Set "true" to calculate energy. Not yet implemented. Default to false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="apbs_debug" type="xs:integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   APBS debug level [0-6]. Default to 2
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Shear_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Shear style backbone-torsion moves that minimize downstream propagation
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="temperature" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   What MC acceptance temperature to use (tests only the rama score, so not a full MC)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nmoves" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many consecutive moves to make
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_max" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   By how much to perturb the backbone
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="preserve_detailed_balance" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to true, does not test the MC acceptance criterion, and instead always accepts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   An optional, previously-defined ResidueSelector, specifying the subset of residues to which the mover will be applied. If not provided, the mover is applied to the whole pose. (Alternatively, a MoveMap may be used -- see below). The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   BackboneMover class has elements of the MC temperature to do repetitions of bb moves (small, shear, wobble, etc.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ShearMinCCDTrial_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Implements the CCD min trial flavor of inner cycle refinement.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SheetCstGenerator_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="blueprint" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to blueprint file specifying strand pairing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct" type="dssp_string">
  <xs:annotation><xs:documentation xml:lang="en">
   String specifying secondary structure for the pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="spairs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String specifying strand pairing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="flat_bottom_constraints" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use flat-bottom constraints?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist" type="real" default="5.5">
  <xs:annotation><xs:documentation xml:lang="en">
   Desired distance between strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dist_tolerance" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Tolerance in distance between strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_tolerance" type="real" default="0.35">
  <xs:annotation><xs:documentation xml:lang="en">
   Tolerance in angle between strands
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cacb_dihedral_tolerance" type="real" default="0.9">
  <xs:annotation><xs:documentation xml:lang="en">
   Tolerance in Ca-Cb dihedral angle (in radians)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb_dihedral_tolerance" type="real" default="0.52">
  <xs:annotation><xs:documentation xml:lang="en">
   Tolerance in backbone dihedral angle constraint (in radians)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight to use for these constraints
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_dssp" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use DSSP to determine secondary structure?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ShortBackrubMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ShoveResidueMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_shove_variant" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Remove the shove variant from the residue in question?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="shove" type="refpose_enabled_residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Residues to which to add shove variant, especially if resnum isn't provided
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Sidechain_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Moves the side chain for a set of residues identified by a task operation in a manner that can be totally independent of rotamer assignments
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ntrials" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of trials.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="preserve_detailed_balance" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the simulation preserve detailed balance?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prob_uniform" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The probability of uniform chi sampling.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prob_withinrot" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The probability of sampling within-rotamer.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prob_random_pert_current" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The probability of making a random perturbation to the current chi value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="change_chi_without_replacing_residue" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   The probability of changing chi but not replacing the residue.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SidechainMC_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  In a Monte Carlo simulation, moves the side chain for a set of residues identified by a task operation in a manner that can be totally independent of rotamer assignments
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ntrials" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of trials.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="preserve_detailed_balance" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the simulation preserve detailed balance?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Simulation temperature.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="inherit_scorefxn_temperature" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Should the simulation inherit the temperature provided by the scorefunction?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prob_uniform" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The probability of uniform chi sampling.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prob_withinrot" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The probability of sampling within-rotamer.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prob_random_pert_current" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The probability of making a random perturbation to the current chi value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SilentTrajectoryRecorder_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Stores trajectory outputs to a silent file
 </xs:documentation></xs:annotation>
 <xs:attribute name="stride" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   How often in terms of cycles to take a snapshot and output to file?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filename" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of output file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_limit" type="non_negative_integer" default="500">
  <xs:annotation><xs:documentation xml:lang="en">
   How much information in kb to store in memory before writing to disk
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cumulate_jobs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Combine MPI jobs into a single file?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cumulate_replicas" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Combine replicas into a single file?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_stride" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   How often (in terms of cycles) to take snapshots and store output?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="silent_struct_type" type="xs:string" default="any">
  <xs:annotation><xs:documentation xml:lang="en">
   Type of silent structure to use for output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_extra_scores" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Write a separate score file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="delimited_real_list">
 <xs:restriction base="xs:string">
  <xs:pattern value="[-+]?[0-9]*\.?[0-9]*([eE][-+]?[0-9]+)?([,'`~\+\*\|;\. ][-+]?[0-9]*\.?[0-9]*([eE][-+]?[0-9]+)?)*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_SimpleGlycosylateMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Authors: Jared Adolf-Bryfogle (jadolfbr@gmail.com) and Jason W. Labonte (JWLabonte@jhu.edu)
Mover to add specified glycosylations to a pose in the specified positions
 </xs:documentation></xs:annotation>
 <xs:attribute name="glycosylation" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String specifying the glycosylation to add to this pose (IUPAC Glycan String) (or a file name containing the glycosylation with a .iupac name)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="glycosylations" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   String or file name specifying multiple possible glycosylations to add to this pose (IUPAC Glycan String) (or a file name containing the glycosylation with a .iupac name) (will be sampled randomly
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="position" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Position to add glycosylation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="positions" type="refpose_enabled_residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Positions to add glycosylations
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weights" type="delimited_real_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Sampling weights corresponding to the provided set of glycans
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="strip_existing" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Strip existing glycosylations from the pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ref_pose_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of saved reference pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="idealize_glycosylation" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Idealize glycosylations on the pose?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="SimpleThreadingMover_input_modes">
 <xs:restriction base="xs:string">
  <xs:enumeration value="oneletter"/>
  <xs:enumeration value="threeletter"/>
  <xs:enumeration value="basename"/>
  <xs:enumeration value="fullname"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_SimpleThreadingMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Author: Jared Adolf-Bryfogle (jadolfbr@gmail.com)
Modified: Vikram K. Mulligan (vmulligan@flatironinstitute.org) to add support for noncanonicals.
This mover functions to thread the sequence of a region onto the given pose. Nothing fancy here. Useful when combined with -parser:string_vars option to replace strings within the RosettaScript. For more a more fancy comparative modeling protocol, please see the lovely RosettaCM
 </xs:documentation></xs:annotation>
 <xs:attribute name="pack_neighbors" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Option to pack neighbors while threading.  By default, only the mutated residues, and not the neighbors, are repacked.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="neighbor_dis" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance to repack neighbor side chains. Repack shell distance for each threaded residue.  Default 6.0 Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_position" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Position to start thread. PDB numbering (like 30L) or Rosetta pose numbering. PDB numbering parsed at apply time to allow for pose-length changes prior to apply of this mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="thread_sequence" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The residue sequence that we will be grafting.  This can be provided as one-letter codes (e.g. "RSTX[DASP]LNE", comma-separated three-letter codes (e.g. "ARG,SER,THR,DAS,LEU,ASN,GLU"), base-names (e.g. "ARG,SER,THR,DASP,LEU,ASN,GLU"), or full names (e.g. "ARG,SER:N_Methylation,THR,DASP,LEU,ASN,GLU"), depending on the setting for sequence_mode.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optional Scorefunction name passed - setup in score function block
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_unknown_mutant" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Skip unknown amino acids in thread_sequence string instead of throwing an exception.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pack_rounds" type="positive_integer" default="5">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of packing rounds for threading.  Set this to 0 to skip all packing, in which case the new side-chains will likely be in very poor conformations.  Defaults to 5.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sequence_mode" type="SequenceMetric_output_modes" default="oneletter">
  <xs:annotation><xs:documentation xml:lang="en">
   The format for the input sequence.  Allowed output formats are: oneletter, threeletter, basename, or fullname.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SimulatedTempering_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Single process switching stochastically between temperature levels
 </xs:documentation></xs:annotation>
 <xs:attribute name="temp_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW_TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_low" type="real" default="0.6">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW_TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_high" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_levels" type="non_negative_integer" default="10">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_interpolation" type="interpolation_type" default="linear">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temp_stride" type="non_negative_integer" default="100">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="io_stride" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trust_current_temp" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stats_line_output" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stats_silent_output" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stats_file" type="xs:string" default="tempering.stats">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="score_offset" type="real" default="40.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Offset for score (scales all weights)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature_jumps" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump to any temperature, not just by one level
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reweight_stride" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   How many trials between automatic reweighting
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="policy_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="uniform"/>
  <xs:enumeration value="smooth"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_SingleFragmentMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs a single fragment insertion move on the pose. Respects the restrictions imposed by the user-supplied MoveMap and underlying kinematics of the pose -i.e. FoldTree . By default, all backbone torsions are movable. 
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="fragments" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Fragment file. Fragments are used in the assembly of proteins whether for structure prediction or design, to cut down on the size of the protein-folding search space. They are a core part of the Rosetta design. : Fragment libraries are used by many protocols but are a core part of ab initio.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="policy" type="policy_type" default="uniform">
  <xs:annotation><xs:documentation xml:lang="en">
   Policy object is responsible for choosing from among the possible fragments contained in the fragment file. Currently, two policies are supported-- 'uniform' and 'smooth.' The former chooses uniformly amongst the set of possibilities. The latter chooses the fragment that, if applied, causes minimal distortion to the pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SliceToMiniProteinMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  slices up repeat proteins to miniproteins
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_length" type="non_negative_integer" default="119">
  <xs:annotation><xs:documentation xml:lang="en">
   max length of miniprotein
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_sse_count" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   min secondary structure element count
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_sse_length" type="non_negative_integer" default="13">
  <xs:annotation><xs:documentation xml:lang="en">
   min secondary structure element length
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ddg_ala_slice_score" type="real" default="-5.0">
  <xs:annotation><xs:documentation xml:lang="en">
   energy when slicing up the miniprotein
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Optionally define a mover which will be applied prior to computing the system energy in the unbound state.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_mode" type="xs:string" default="all">
  <xs:annotation><xs:documentation xml:lang="en">
   output mode, all,longest,best_ddg
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of a residue selector that specifies the subset allowed to be part of the miniprotein. Note. This segment must be contiguous. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SlideTogether_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Move the small molecule and protein into close proximity.
 </xs:documentation></xs:annotation>
 <xs:attribute name="chains" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma separated list of chain IDs.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Small_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Small-move style backbone-torsion moves that, unlike shear, do not minimize downstream propagation.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="temperature" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   What MC acceptance temperature to use (tests only the rama score, so not a full MC)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="nmoves" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   How many consecutive moves to make
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_max" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   By how much to perturb the backbone
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="preserve_detailed_balance" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If set to true, does not test the MC acceptance criterion, and instead always accepts
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   An optional, previously-defined ResidueSelector, specifying the subset of residues to which the mover will be applied. If not provided, the mover is applied to the whole pose. (Alternatively, a MoveMap may be used -- see below). The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   BackboneMover class has elements of the MC temperature to do repetitions of bb moves (small, shear, wobble, etc.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SmallMinCCDTrial_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Perform a small move followed CCD closure, packing and minimization. Takes only command line options.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SnugDock_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Dock and antigen to an antibody while optimizing the rigid body orientation of the VH and VL chains and performing CDR loop minimization.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SpinMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Spin one chain relative to another
 </xs:documentation></xs:annotation>
 <xs:attribute name="jump_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which to spin, numbered sequentially from 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="n_or_c">
 <xs:restriction base="xs:string">
  <xs:enumeration value="n"/>
  <xs:enumeration value="c"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="subsubtag_splice_Segment_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  individual segment tag
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb_profile_match" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="profiles" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_splice_Segments_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Wrapper for multiple segments tags
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Segment" type="subsubtag_splice_Segment_type"/>
 </xs:choice>
 <xs:attribute name="profile_weight_away_from_interface" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="current_segment" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subsubtag_splice_torsion_db_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  individual torsion_db tag
 </xs:documentation></xs:annotation>
 <xs:attribute name="torsion_db" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_splice_DB_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Wrapper for multiple segments tags
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Splice_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Segments" type="subtag_splice_Segments_type"/>
  <xs:element name="DB" type="subtag_splice_DB_type"/>
 </xs:choice>
 <xs:attribute name="tolerance" type="real" default="0.23">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_chain_break" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debug" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_seg" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="CG_const" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rb_sensitive" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segment" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="superimposed" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delete_hairpin" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delete_hairpin_n" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delete_hairpin_c" type="non_negative_integer" default="13">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tail_segment" type="n_or_c">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="protein_family" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="source_pdb_to_res" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_alignment" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the reference pose as the 'start' pose (and a template pose if template_file is not given.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sequence_profile" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_sequence_constraints_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_fold_tree_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from_res" type="refpose_enabled_residue_number" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="to_res" type="refpose_enabled_residue_number" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_task_operations" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_numbers_setter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="torsion_database" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_entry" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_pdb_entry" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="source_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ccd" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_shell" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rms_cutoff" type="real" default="999999">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_move" type="non_negative_integer" default="1000">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="randomize_cut" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cut_secondarystruc" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="equal_length" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="thread_ala" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_lengths" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="thread_original_sequence" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rtmin" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allow_all_aa" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dbase_iterate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="locked_residue" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allowed_cuts" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   How many cut allowed in protein after Splice mover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checkpointing_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_dbase_file_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="splice_filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover_tag" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="loop_pdb_source" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_to_repacking_chain2" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sequence_profiles" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subsubtag_splicein_segment_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  individual segment tag
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb_profile_match" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="profiles" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to PSSM files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_splicein_Segments_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Wrapper for multiple segments tags
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="segment" type="subsubtag_splicein_segment_type"/>
 </xs:choice>
 <xs:attribute name="profile_weight_away_from_interface" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   multiply applied sequence constraint by a factor for residues outside predefined interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="current_segment" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which segment is currently being modified
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SpliceIn_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Segments" type="subtag_splicein_Segments_type"/>
 </xs:choice>
 <xs:attribute name="tolerance" type="real" default="0.23">
  <xs:annotation><xs:documentation xml:lang="en">
   tolernace of bond length std when checking for chain breaks
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_chain_break" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if there is a chain break don't fail
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debug" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   more verbose during run
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_seg" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   minimize segment after splice in?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="CG_const" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   apply coordinate constraints on C-gamma atoms
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rb_sensitive" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   apply rigid body addaptations
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   which chain number to apply splice on
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="superimposed" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   are the structures superimposed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="source_pdb_to_res" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   residue number of last residue on source segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="skip_alignment" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   whether to align pose to source pdb
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sequence_profile" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use sequence profiles in design?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   What is the template file to use during design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_task_operations" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_numbers_setter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="torsion_database" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   torsion db file name
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_entry" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   choose db entry by number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_pdb_entry" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_shell" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   design shell radius
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   packing shell radius
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="randomize_cut" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   should the cut be put randomly in the designed segment 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cut_secondarystruc" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   put cut into ss
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_lengths" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list of allowed segment delta lengths
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="thread_original_sequence" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   thread sequence from source pdb onto design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rtmin" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   should we apply rtmin after design
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dbase_iterate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   should we iterate through the db file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="checkpointing_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of checkpointing file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SpliceInAntibody_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Change conformation of antibody segment
 </xs:documentation></xs:annotation>
 <xs:attribute name="tolerance" type="real" default="0.23">
  <xs:annotation><xs:documentation xml:lang="en">
   How many standard deviations is the bond length of the chain-break from the norm.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_chain_break" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debug" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, make output more verbose and dump pdbs.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_seg" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Apply minimization on backbone and side-chains of the new segment conformation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Specify pose chain number
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segment" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which segment type are we changing (L1_L2,H1_H2,L3, or H3)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="superimposed" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Is the pose aligned to the template antibody
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_lengths" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   A list of integers separated by commas, specifying the length deltas between the current segment's lengths and those sampled from the database. E.g. if delta_length=-1,1 then only conformations that are longer or shorter by one residue compared to the original segment will be sampled.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dbase_iterate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_entry" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Specify entry number of conformation to sample from conformation database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_pdb_entry" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Specify entry PDB code of conformation to sample from conformation database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
    The pdb file used to construct the conformation database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="torsion_database" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
    path to conformation database file. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_shell" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   design shell around sampled conformation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   repack shell around sampled conformation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rtmin" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   bool. Perform rtmin on new segment?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_to_repacking_chain2" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
    bool. Apply design to non antibody chain?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sequence_profile" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   use sequence constraints from conformation specific pssms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subsubtag_SpliceInTail_segment_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  individual segment tag
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb_profile_match" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Mapping between segment name and PSSM file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="profiles" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   list of PSSM files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_SpliceInTail_Segments_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Wrapper for multiple segments tags
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="segment" type="subsubtag_SpliceInTail_segment_type"/>
 </xs:choice>
 <xs:attribute name="profile_weight_away_from_interface" type="real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   multiply applied sequence constraint by a factor for residues outside predefined interface
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="current_segment" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which segment is currently being modified
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SpliceInTail_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Segments" type="subtag_SpliceInTail_Segments_type"/>
 </xs:choice>
 <xs:attribute name="debug" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true output is more verbose and PDB structures are dumped.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_seg" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Apply minimizer to the new segment. This is recommended to improve energy. Apply with coordinate constraints.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="CG_const" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true apply coordinate constraint on C-gammas of the segment during CCD/minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   The pose's chain onto which the new segment is added.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="superimposed" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If fasle, superimpose source pdb onto current pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sequence_profile" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true build PSSM and apply sequence profile on pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The PDB file of the reference PDB (the one used to build to conformation database)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="torsion_database" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of conformation file to save to
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_entry" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Which entry to use from database (by number, e.g. first entry = 1, second entry = 2, etc)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_pdb_entry" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which entry to use from database by PDB code
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_shell" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   how many residues around the built segment can be designed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   how many residues around the built segment can be repacked
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="delta_lengths" type="int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   sample lengths of new segment conformation with length deltas relative to stratign pose segment (e.g, if delta length is set -2 then only segments that 2 AA shorter than the pose segment will be sampled from the database)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="thread_original_sequence" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use sequence from torsion database.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rtmin" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
    apply rtmin after minmover/tailsegmentmover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dbase_iterate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if true, go through the torsion database iteratively (so in the same trajectory won't sample same conformation twice from the database)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subsubtag_spliceout_Segment_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  individual segment tag
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb_profile_match" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   map from pdb source segment to  PSSM file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="profiles" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   path to PSSM files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_spliceout_Segments_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Wrapper for multiple segments tags
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Segment" type="subsubtag_spliceout_Segment_type"/>
 </xs:choice>
 <xs:attribute name="current_segment" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SpliceOut_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Segments" type="subtag_spliceout_Segments_type"/>
 </xs:choice>
 <xs:attribute name="tolerance" type="real" default="0.23">
  <xs:annotation><xs:documentation xml:lang="en">
   Splice mover performs an internal check of peptide bond length in the new segment. If the bond length is more than the set tolerance the mover reports failure.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_chain_break" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   f true, will ignore deviation in bond length. This is not recommended and usually used for debugging.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debug" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true output is more verbose and PDB structures are dumped
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="CG_const" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true apply coordinate constraint on C-gammas of the segment during CCD/minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   The pose's chain onto which the new segment is added.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cut_site" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   residue number of where to place cut, used mainly for debugging.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="Segment" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="superimposed" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If false, superimpose source pdb onto current pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="source_pdb_to_res" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   If structures are not aligned use the template from_res and source pdb from_res to align
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sequence_profile" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, add sequence constraint to pose from pssm files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The PDB file of the reference PDB (the one used to build to conformation database)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="set_fold_tree_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="source_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The PDB file from which the segment conformation is extracted
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from_res" type="refpose_enabled_residue_number" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The N-ter residue of the sampled segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="to_res" type="refpose_enabled_residue_number" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   The C-ter residue of the sampled segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="torsion_database" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of conformation file to save to
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_shell" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
    Design shell radius around new segment conformation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
    Repack shell radius around new segment conformation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rms_cutoff" type="real" default="999999">
  <xs:annotation><xs:documentation xml:lang="en">
   At the end of the run the RMSD value between the new segment conformation and source segment conformation. If RMSD value is above set cutoff value the run fails. This value only relates to secondary structure elements in the new segment.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rms_cutoff_loop" type="real" default="999999">
  <xs:annotation><xs:documentation xml:lang="en">
   The same as rms_cutoff, but only relates to loop secondary structure elements.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="randomize_cut" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   if true cut will be placed randomly in the segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cut_secondarystruc" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   if true cut can be placed in secondary structure element.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="thread_original_sequence" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
    If true,use sequence from source PDB
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rtmin" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
    apply rtmin after CCD/minmover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="splice_filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of filter used to test of mover finished successfully.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which mover to use to close the segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_to_repacking_chain2" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
    If true do not design chain2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SpliceOutAntibody_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Change conformation of antibody segment
 </xs:documentation></xs:annotation>
 <xs:attribute name="tolerance" type="real" default="0.23">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_chain_break" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="debug" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="CG_const" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rb_sensitive" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cut_site" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   residue number of where to place cut
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="segment" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="superimposed" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_sequence_constraints_only" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="source_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="torsion_database" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_shell" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rms_cutoff" type="real" default="999999">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rms_cutoff_loop" type="real" default="999999">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="randomize_cut" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cut_secondarystruc" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rtmin" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   apply rtmin after CCD/minmover
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="splice_filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   name of filter used to test of mover finished successfully
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which mover to use to close the segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tail_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which mover to use to close the segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_to_repacking_chain2" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true do not design chain2
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sequence_profile" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true build PSSM and apply sequence profile on pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subsubtag_spliceoutTail_segment_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  individual segment tag
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb_profile_match" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="profiles" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="subtag_spliceoutTail_Segments_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Wrapper for multiple segments tags
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="segment" type="subsubtag_spliceoutTail_segment_type"/>
 </xs:choice>
 <xs:attribute name="current_segment" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SpliceOutTail_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Segments" type="subtag_spliceoutTail_Segments_type"/>
 </xs:choice>
 <xs:attribute name="debug" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="CG_const" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true apply coordinate constraint on C-gammas of the segment during CCD/minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   The pose's chain onto which the new segment is added.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="superimposed" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   superimpose source pdb onto current pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="thread_original_sequence" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, thread the seuqeunce from the refrence pdb onto the segment
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tail_segment" type="n_or_c">
  <xs:annotation><xs:documentation xml:lang="en">
   Is this a C-ter ("c") or and N-ter ("N") segment.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_sequence_profile" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="source_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from_res" type="refpose_enabled_residue_number" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="torsion_database" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="design_shell" type="real" default="6.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_shell" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rms_cutoff" type="real" default="999999">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rtmin" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="splice_filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which mover to use to optimize segment's backbone
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="restrict_to_repacking_chain2" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SplitAndMixPoseMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Splits a Pose into requested pieces and joins them together. Allows to swap order
 </xs:documentation></xs:annotation>
 <xs:attribute name="order" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Coma separated numbers defining the orders to rejoin the segments
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="merge_chains" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   When true, all the pieces are merged as a single chain. Otherwise the chain of a piece is assigned according to its original chain.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="try_all_pairs" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   When true, all the pieces are merged as a single chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="exclude_consecutive" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   When true, and try_all_pairs true, it will avoit trying consecutive subposes. Only applies when try_all_pairs=True.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_distance" type="real" default="-1">
  <xs:annotation><xs:documentation xml:lang="en">
   When positive, and try_all_pairs true, limits the distance between N-term and C-term to generate a pair. Only applies when try_all_pairs=True.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   ResidueSelector to define the regions of the pose to keep The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_StapleMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Design a stapled peptide at a protein interface
 </xs:documentation></xs:annotation>
 <xs:attribute name="resnum" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number where the staple starts, in Rosetta or PDB or reference pose numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb_num" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number where the staple starts, in Rosetta or PDB or reference pose numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="staple_gap" type="non_negative_integer" default="4">
  <xs:annotation><xs:documentation xml:lang="en">
   Gap from starting to ending stapled residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_StartFrom_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Move a chain (normally a ligand) to a specified coordinate.By default the centroid of the specified chain (the average position of all atoms/residues) is centered on the given coordinate
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Coordinates">
   <xs:complexType mixed="true">
    <xs:attribute name="x" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      x coordinate of the desired start coordinate.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="y" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      y coordinate of the desired start coordinate.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="z" type="real" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      z coordinate of the desired start coordinate.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="pdb_tag" type="xs:string" default="default">
     <xs:annotation><xs:documentation xml:lang="en">
      Job-tag of a pdb.
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="File">
   <xs:complexType mixed="true">
    <xs:attribute name="struct_identifier" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      pdb_tag, file_name, or hash
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="filename" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of SON formatted file containing starting positions
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="PDB">
   <xs:complexType mixed="true">
    <xs:attribute name="filename" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      Name of pdb file
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="atom_name" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      Use only the positions of atoms matching that atom name.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="pdb_tag" type="xs:string" default="default">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="chain" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain ID
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_nbr" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Place neighbor atom (the atom which is superimposed during conformer repacking) at the given location
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="operator_type">
 <xs:restriction base="xs:string">
  <xs:enumeration value="AND"/>
  <xs:enumeration value="OR"/>
  <xs:enumeration value="NOT"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_StoreCombinedStoredTasksMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW_TODO
 </xs:documentation></xs:annotation>
 <xs:attribute name="task1" type="pose_cached_task_operation" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   A first task operation, previously cached in the datacache of a Pose object.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task2" type="pose_cached_task_operation" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   A second task operation, previously cached in the datacache of a Pose object.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="operator" type="operator_type" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW_TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_name" type="pose_cached_task_operation" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The identifier by which the combined task will be referred once it is cached in the datacache of the Pose object.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overwrite" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="compound_task_behavior">
 <xs:restriction base="xs:string">
  <xs:enumeration value=""/>
  <xs:enumeration value="prevent_repacking"/>
  <xs:enumeration value="restrict_to_repacking"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="compound_task_mode">
 <xs:restriction base="xs:string">
  <xs:enumeration value="packable"/>
  <xs:enumeration value="designable"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_StoreCompoundTaskMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW_TODO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="AND">
   <xs:complexType mixed="true">
    <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
     <xs:annotation><xs:documentation xml:lang="en">
      A comma-separated list of TaskOperations to use.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="packer_palette" type="named_packer_palette">
     <xs:annotation><xs:documentation xml:lang="en">
      A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="OR">
   <xs:complexType mixed="true">
    <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
     <xs:annotation><xs:documentation xml:lang="en">
      A comma-separated list of TaskOperations to use.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="packer_palette" type="named_packer_palette">
     <xs:annotation><xs:documentation xml:lang="en">
      A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="XOR">
   <xs:complexType mixed="true">
    <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
     <xs:annotation><xs:documentation xml:lang="en">
      A comma-separated list of TaskOperations to use.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="packer_palette" type="named_packer_palette">
     <xs:annotation><xs:documentation xml:lang="en">
      A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="NOR">
   <xs:complexType mixed="true">
    <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
     <xs:annotation><xs:documentation xml:lang="en">
      A comma-separated list of TaskOperations to use.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="packer_palette" type="named_packer_palette">
     <xs:annotation><xs:documentation xml:lang="en">
      A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="NAND">
   <xs:complexType mixed="true">
    <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
     <xs:annotation><xs:documentation xml:lang="en">
      A comma-separated list of TaskOperations to use.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="packer_palette" type="named_packer_palette">
     <xs:annotation><xs:documentation xml:lang="en">
      A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="ORNOT">
   <xs:complexType mixed="true">
    <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
     <xs:annotation><xs:documentation xml:lang="en">
      A comma-separated list of TaskOperations to use.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="packer_palette" type="named_packer_palette">
     <xs:annotation><xs:documentation xml:lang="en">
      A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="ANDNOT">
   <xs:complexType mixed="true">
    <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
     <xs:annotation><xs:documentation xml:lang="en">
      A comma-separated list of TaskOperations to use.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="packer_palette" type="named_packer_palette">
     <xs:annotation><xs:documentation xml:lang="en">
      A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
  <xs:element name="NOT">
   <xs:complexType mixed="true">
    <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
     <xs:annotation><xs:documentation xml:lang="en">
      A comma-separated list of TaskOperations to use.
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="packer_palette" type="named_packer_palette">
     <xs:annotation><xs:documentation xml:lang="en">
      A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="task_name" type="pose_cached_task_operation">
  <xs:annotation><xs:documentation xml:lang="en">
   The name by which the task operation to be cached will be identified after it is cached in the datacache of a Pose object.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="true_behavior" type="compound_task_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="false_behavior" type="compound_task_behavior">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mode" type="compound_task_mode" default="packable">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="verbose" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overwrite" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_StorePoseSnapshot_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Rosetta's sequential residue numbering can create headaches in protocols in which residues are to be inserted or deleted, and in which one wishes subsequently to refer to residues past the insertion or deletion point. The StorePoseSnapshot mover is intended as a means of permitting a user to store a named snapshot or "reference pose" at a particular point in a protocol, then use the residue numbering of the pose at that point in the protocol for movers and filters that might be applied sometime later, after pose indices may have been altered by insertions or deletions.
 </xs:documentation></xs:annotation>
 <xs:attribute name="reference_pose_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the snapshot or reference pose object. Many different snapshots may be stored (by applying different StorePoseSnapshot movers at different points in the protocol), and may subsequently be referred to by different names
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="override_current" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If there already exists a reference pose, overwrite it.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_StoreQuasiSymmetricTaskMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover creates a stored task that links selected residues with RotamerLinks. The residues will remain identical in identity when the packer is called, but their rotamers are free to be packed differently. This mover was designed to take a shot at the quasi-equivalent design problem, where identical residues need to satisfy multiple interfaces at the same time. It is essentially a multi-state design problem.
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_name" type="pose_cached_task_operation" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the stored task to be cached in the Pose object's datacache.  The object can later be retrieved using this name.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overwrite" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Will overwrite old stored tasks with the same name?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="quasi_symm_comp" type="xs:string" default="B">
  <xs:annotation><xs:documentation xml:lang="en">
   Which component (if multi-component, A or B), is going to be quasi-equivalent.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="num_quasi_repeats" type="non_negative_integer" default="2">
  <xs:annotation><xs:documentation xml:lang="en">
   How many subunits your quasi-equivalent building block consists of. For example, a trimer would be 3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="offset_resis" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   If your building block is non-quasi-equivalent domains, this number denotes the number of residues to skip. Currently needs to be resis 1-x, the skipped portion must be on the N-terminus.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_StoreResidueSubset_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   . The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="subset_name" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overwrite" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_StoreTaskMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover caches a task operation in the datacache of a Pose object, allowing later retrieval of that task operation.
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_name" type="pose_cached_task_operation" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The identifier of the task operation that will be cached in the Pose object.  This is used to retrieve the task operation from the Pose object in the future.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="overwrite" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, an already-cached task operation with the given name will be overwritten.  If false, an error is thrown instead if a task operation with the given name is already present in the Pose object.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_StructFragmentMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Create fragments from a supplied pose.
 </xs:documentation></xs:annotation>
 <xs:attribute name="small_frag_size" type="non_negative_integer" default="3">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the size of the small fragments
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="large_frag_size" type="non_negative_integer" default="9">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the size of the large fragments
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="small_frag_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to input small fragment file (requires large_frag_file too)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="large_frag_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to input large fragment file (requires small_frag_file too)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="output_frag_files" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Write fragment files
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="steal_small_frags" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Steal small fragments
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="steal_large_frags" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Steal large fragments
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="frag_weight_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to input weight file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sequence_profile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to input sequence profile
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="vall_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to vall file (required when no fragment files are provided)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_candidates" type="non_negative_integer" default="1000">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the number of candidates
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="n_frags" type="non_negative_integer" default="200">
  <xs:annotation><xs:documentation xml:lang="en">
   Set the number of fragments
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prefix" type="xs:string" default="structFrag">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix of output files and the fragments stored in the DataMap.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="secstruct" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Secondary structure
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_dssp" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use DSSP to determine secondary structure?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_StructPerturberCM_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Client mover that perturbs torsion angles in the pose with a gaussian distribution of the provided magnitude
 </xs:documentation></xs:annotation>
 <xs:attribute name="magnitude" type="real" default="2.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum magnitude of torsion angle change to make to in each step
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="label" type="xs:string" default="BASE">
  <xs:annotation><xs:documentation xml:lang="en">
   Defaults to BASE
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_StructProfileMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Quickly generates a structure profile
 </xs:documentation></xs:annotation>
 <xs:attribute name="RMSthreshold" type="real" default="0.40">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="burialWt" type="real" default="0.8">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="consider_topN_frags" type="non_negative_integer" default="50">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="only_loops" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allowed_deviation" type="real" default="0.10">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="allowed_deviation_loops" type="real" default="0.10">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="eliminate_background" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cenType" type="non_negative_integer" default="6">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="outputProfile" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="add_csts_to_pose" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ignore_terminal_residue" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="profile_name" type="xs:string" default="profile">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of the profile to output. Empty string results in using the pdb output name. Setting this the the special word "profile" results in the original behavior of profile named "profile" and MSAcst named "MSAcst"
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Only compute structure profile for residues within residue selector
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Subroutine_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="xml_fname" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Filename for the XML to execute
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Superimpose_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="ref_start" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Starting residue for superposition, in reference
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ref_end" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Ending residue for superposition, in reference
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_start" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Starting residue for superposition
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_end" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Ending residue for superposition
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="CA_only" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Superimpose by CA coordinates only
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ref_pose" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Reference pose file name
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="spm_reference_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of reference pose to use (Use the SavePoseMover to create a reference pose) 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SwapSegment_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Seeds">
   <xs:complexType mixed="true">
    <xs:attribute name="begin" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      XRW TO DO
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="copy_sidechains" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="swap_segment" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="swap_chain" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="from_chain" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="to_chain" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="seeds_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, required if template_pdb is not specified.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="template_pdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, required if seeds_pdb is not specified.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="previously_grown" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SwitchChainOrder_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain_order" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Order of final chains
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="nnegative_int_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   List of final chain positions, to be correlated to chain_name
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_name" type="chain_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   List of final chain names, to be correlated to chain_num
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert_chains" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, apply on the inverse of chain selection (as specified in name or number options)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="residue_numbers_setter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   List of final chain names, to be correlated to chain_num
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SwitchMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Apply the requested mover from a list of them
 </xs:documentation></xs:annotation>
 <xs:attribute name="movers" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The movers tag takes a comma separated list of mover names
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="selected" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Tag of the expected Mover to execute
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SwitchResidueTypeSetMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="set" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SymDockProtocol_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Symmetric oligomer docking.
 </xs:documentation></xs:annotation>
 <xs:attribute name="dock_rtmin" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Does rotamer trials with minimization.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sc_min" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Does sidechain minimization of interface residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_repeats" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If a decoy does not pass the low- and high-resolution filters, how many attempts to make before failure.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dock_ppk" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Docking prepack mode.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="fullatom" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Enable full-atom input of PDB or centroid structures.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="local_refine" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Do a local refinement of the docking position (high resolution).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="view" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Decide whether to use the viewer (graphical) or not.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="docking_score_low" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="docking_score_high" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="sampling_mode_choices">
 <xs:restriction base="xs:string">
  <xs:enumeration value="grid"/>
  <xs:enumeration value="uniform"/>
  <xs:enumeration value="gaussian"/>
  <xs:enumeration value="single_dock"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="type_for_axes_cslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="[xyz](,[xyz])*"/>
 </xs:restriction>
</xs:simpleType>

<xs:simpleType name="type_for_axes_or_zero_cslist">
 <xs:restriction base="xs:string">
  <xs:pattern value="[xyz0](,[xyz0])*"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_SymDofMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Used to setup symmetric systems in which the input structures(s) are aligned along the x, y, or z axis.
 </xs:documentation></xs:annotation>
 <xs:attribute name="set_sampler" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with the GetRBDOFValues filter. If set to false, then the RBDOF values will not be updated when the reported DOF values are not affected by the SymDofMoverSampler. Defaults to true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="auto_range" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Boolean to set the manner in which the user defined ranges for radial displacements are interpreted. If set to true, then the negative values for min or max displacement are interpreted as moving the structure closer to the origin and positive values away from the origin.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symm_file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Symmetry definition file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sym_dof_names" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Names of the sym_dofs in the symmetry definition file along which one wishes to move or rotate the input. NOTE: For multicomponent systems, the order of the displacements, angles, ranges, and steps must correspond with the the order of the sym_dof_names. Passed as a string with comma-separated list (e.g. sym_dof_names='JTP1,JDP1')
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sampling_mode" type="sampling_mode_choices" default="single_dock">
  <xs:annotation><xs:documentation xml:lang="en">
   Which mode to use to sample around the initial configuration, if desired. 'grid', 'uniform', or 'gaussian'
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="flip_input_about_axes" type="type_for_axes_or_zero_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotate subunits 180 degrees about the specified axes prior to applying transtions, rotations, alignment, and symmetry. ie, 'reverse' the component before further manipulation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="align_input_axes_to_symdof_axes" type="type_for_axes_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   If specified, will align the specified axis of each subunit with the corresponding axis of the symdof jump from the symmetry definition file.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_disps" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial displacement(s) by which to translate the input structure(s) along the user specified axis. Passed as a string with a comma-separated list (e.g. radial_disps='-65.4,109.2'). Must also specify translationa_axes to apply these along.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_offsets" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Can be used in any sampling mode. Offset value(s) are added to the corresponding radial_disps before grid, uniform, or gaussian sampling is performed. Works with auto_range. For example, if one wants to space out both symdofs a given structure by 2 angstroms, one can pass radial_offsets='2,2' and auto_range=true. Then, regardless of the sign of the radial disps, the subunits will be displaced 2 angstroms further from the origin (assuming the input subunit(s) start at the origin).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="translation_axes" type="type_for_axes_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Need to use this when using radial_disps. Axes (x, y, or z) along which to translate each subunit prior to applying symmetry.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angles" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Initial angle(s) by which to rotate the input structure(s) about the user specified axis. Passed as a comma-separated list (e.g. angles='-65.4,109.2'). Must also specificy rotation axes to apply these along.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rotation_axes" type="type_for_axes_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   Axes (x, y, or x) along which to rotate each subunit prior to applying symmetry. Need to use this when using angles.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_disps_range_min" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with grid or uniform sampling. Minimum distance(s) in Angstroms by which to modify the initial radial_disps. Passed as a string with a comma-separated list (e.g. radial_disps_range_min='-1,-1'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_disps_range_max" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with grid or uniform sampling. Maximum distance(s) in Angstroms by which to modify the initial radial_disps. Passed as a string with a comma-separated list (e.g. radial_disps_range_max='1,1'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angles_range_min" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with grid or uniform sampling. Minimum angle(s) in degrees by which to rotate the structure around the initial angle(s) provided by the user. Passed as a string with a comma-separated list (e.g. angles_range_min='-1,-1'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angles_range_max" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with grid or uniform sampling. Maximum angle(s) in degrees by which to rotate the structure around the initial angle(s) provided by the user. Passed as a string with a comma-separated list (e.g. angles_range_max='1,1'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_steps" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with grid sampling. Set the bin size(s) by which to sample within the user defined range(s). Passed as a string with a comma-separated list (e.g. angle_steps='0.5,0.5'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_disp_steps" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with Gaussian sampling. The range within to sample inward and outward around the user specified initial displacement(s). Passed as a string with a comma-separated list (e.g. radial_disp_deltas='0.5,0.5'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_deltas" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with Gaussian sampling. The range within to sample around the user specified initial angle(s). Passed as a string with a comma-separated list (e.g. angle_deltas='0.5,0.5'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_disp_deltas" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with Gaussian sampling. The range within to sample inward and outward around the user specified initial displacement(s). Passed as a string with a comma-separated list (e.g. radial_disp_deltas='0.5,0.5'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SymFoldandDockMoveRbJumpMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This seems to help set up Symmetric Fold and Dock. It symmetrizes the asymmetric input pose and then finds the jump residues between rigid bodies.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SymFoldandDockRbTrialMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Something else for setting up symmetric fold and dock.
 </xs:documentation></xs:annotation>
 <xs:attribute name="rot_mag" type="xs:decimal">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotational perturbation size.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trans_mag" type="xs:decimal">
  <xs:annotation><xs:documentation xml:lang="en">
   Translation perturbation size.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of cycles.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_mc" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use Monte Carlo?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rotate_anchor_to_x" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotate the anchor residue to the x-axis before applying rigid body transformations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SymFoldandDockSlideTrialMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Setting up what types of slides to make during symmetric fold and dock?
 </xs:documentation></xs:annotation>
 <xs:attribute name="rotate_anchor_to_x" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotate the anchor residue to the x-axis before applying rigid body transformations.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SymMinMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Does minimization over sidechain and/or backbone. 
 NOTE: This Mover is provided for historical support. The regular MinMover can handle symmetry transparently and should be preferred.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="MoveMap" type="optionally_named_move_map_type"/>
 </xs:choice>
 <xs:attribute name="jump" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Comma-separated list of jumps to minimize over (be sure this jump exists!). If set to "ALL", all jumps will be set to minimize. If set to "0", jumps will be set not to minimize
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="abs_score_convergence_threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Keep minimizing until difference before minimization is less than this threshold
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_iter" type="non_negative_integer" default="200">
  <xs:annotation><xs:documentation xml:lang="en">
   maximum number of iterations allowed. This default is also very loose. This and the tolerance setting both affect if you will reach convergence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="type" type="minimizer_type" default="lbfgs_armijo_nonmonotone">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimizer type. linmin, dfpmin, dfpmin_armijo, dfpmin_armijo_nonmonotone. dfpmin minimzers can also be used with absolute tolerance (add "atol" to the minimizer type).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tolerance" type="real" default="0.01">
  <xs:annotation><xs:documentation xml:lang="en">
   Criteria for convergence of minimization. The default is very loose, it's recommended to specify something less than 0.01. max_iter also affects convergence
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartesian" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform cartesian minimization?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondangle" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize bond angles?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondlength" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize bond lengths?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize chi angles?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize backbone torsion angles?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="omega" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize omega torsions?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb_task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Task operations specifying residues for backbone minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi_task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Task operations specifying residues for sidechain minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondangle_task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Task operations specifying residues for bond angle minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondlength_task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   Task operation specifying residues for bond length minimization
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movemap_factory" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of the already-defined MoveMapFactory that will be used to alter the default behavior of the MoveMap. By default, all backbone, chi, and jump DOFs are allowed to change. A MoveMapFactory can be used to change which of those DOFs are actually enabled. Be warned that combining a MoveMapFactory with a MoveMap can result in unexpected behavior. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SymPackRotamersMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Repacks sidechains with user-supplied options, including TaskOperations. 
 NOTE: This Mover is provided for historical support only. The regular PackRotamersMover should handle symmetry transparently and is preferred.
 </xs:documentation></xs:annotation>
 <xs:attribute name="nloop" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Equivalent to "-ndruns".Number of complete packing runs before an output (best score) is produced.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SymRotamerTrialsMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover goes through each repackable/redesignable position in the pose, taking every permitted rotamer in turn, and evaluating the energy. Each position is then updated to the lowest energy rotamer. It does not consider coordinated changes at multiple residues, and may need several invocations to reach convergence.
NOTE: This Mover is provided for historical support only. The regular RotamerTrialsMover should handle symmetry transparently and is preferred.
 </xs:documentation></xs:annotation>
 <xs:attribute name="show_packer_task" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SymmetricAddMembraneMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Symmetry-enabled form of AddMembraneMover
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Span">
   <xs:complexType mixed="true">
    <xs:attribute name="start" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      residue where span starts
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="end" type="non_negative_integer">
     <xs:annotation><xs:documentation xml:lang="en">
      resdiue where span ends
      </xs:documentation></xs:annotation>
    </xs:attribute>
    <xs:attribute name="orientation" type="xs:string">
     <xs:annotation><xs:documentation xml:lang="en">
      span orientation, whether in2out or out2in
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
 <xs:attribute name="spanfile" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to input spanfile
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="anchor_rsd" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Index of membrane residue anchor
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="membrane_rsd" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Membrane residue position
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="thickness" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Thickness of membrane. Score function is optimized to 15 Angstroms.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="steepness" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Steepness of membrane transition. Score function optimized to 10.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="membrane_core" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   width of membrane core for Elazar calibrated LK potential
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="span_starts" type="residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list of span starting residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="span_ends" type="residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list of span ending residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="span_starts_num" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list of span starting residues, in rosetta numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="span_ends_num" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list of span ending residues in rosetta numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="span_orientations" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   comma separated list of span orientations, only in2out or out2in allowed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="center" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Position of center of membrane in format x,y,z
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normal" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Membrane normal vector in format x,y,z
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_SymmetricCycpepAlign_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Given a quasi-symmetric cyclic peptide, this mover aligns the peptide so that the cyclic symmetry axis lies along the Z-axis and the centre of mass is at the origin.  It then optionally removes all but one symmetry repeat, so that true symmetry may be set up with the SetupForSymmetry mover.
 </xs:documentation></xs:annotation>
 <xs:attribute name="auto_detect_symmetry" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the symmetry of this peptide will be detected automatically.  False by default.  (Note that if this is set to "true", the "symmetry_repeats" and "mirror_symmetry" options cannot be used.)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symmetry_repeats" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The number of symmetry repeats.  For example, to specify c6 or s6 symmetry, set this to "6".  Defaults to "2" (for c2 symmetry).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mirror_symmetry" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, this indicates that the pose possesses mirror symmetry.  For example, to specify s6 symmetry, set "symmetry_repeats" to "6" and "mirror_symmetry" to "true".  If set to "false", this would indicate c6 symmetry.  Defaults to "false" (for c2 symmetry with no mirroring).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_threshold" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   The cutoff, in degrees, for considering two dihedral values to be equal.  Defaults to 10 degrees.  This is used when confirming that a quasi-symmetric peptide has the indicated symmetry, or for detecting the symmetry of the peptide.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="trim_to_single_repeat" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, all geometry in the peptide (including all crosslinkers) will be deleted, except for the polypeptide part of a single symmetry repeat.  Defaults to "false".  (This is useful for setting up a peptide for the SetupForSymmetry mover).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeat_to_preserve" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   If "trim_to_single_repeat" is true, then this is the symmetry repeat that will NOT be deleted (i.e. the one that will be preserved).  Defaults to "1".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="invert" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, the peptide normal is aligned to the negative Z-axis; if false, it is aligned to the positive.  Default false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="Symmetrizer_sampling_mode_choices">
 <xs:restriction base="xs:string">
  <xs:enumeration value="grid"/>
  <xs:enumeration value="uniform"/>
  <xs:enumeration value="gaussian"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_Symmetrizer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Functionally an optimization mover; will take a pose with sufficiently small deviations from symmetry and resolve them.
 </xs:documentation></xs:annotation>
 <xs:attribute name="symm_file" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Symmetry definition file to create fully symmetric pose from input asymmetric unit.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="axis" type="axis_char" default="z">
  <xs:annotation><xs:documentation xml:lang="en">
   Axis around which to symmetrize.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_min" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with uniform sampling. 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_max" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   For use with uniform sampling.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sampling_mode" type="Symmetrizer_sampling_mode_choices" default="uniform">
  <xs:annotation><xs:documentation xml:lang="en">
   The default is 'uniform' , but this can also be 'grid' or 'gaussian'
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grid" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TODO (what does it DO?) The default is false; but if it is set to true, you must also set angle_step and radial_disp_step.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_step" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   xRW TODO (what does it DO?) You must use this option when sampling_mode=grid OR when grid=true
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_disp_step" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   You must use this option when sampling_mode=grid OR when grid=1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle_delta" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The default is '0.0', but when using sampling_mode=gaussian, but you change this value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_disp_min" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_disp_max" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_disp_delta" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   The default is '0.0', but when using sampling_mode=gaussian, but you change this value.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="radial_disp" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Translation of asymmetric unit if necessary
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle" type="real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Rotation angle of asymmetric unit if necessary.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_TagPoseWithRefinementStats_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  PHENIX crystallographic refinement interface code.  Modifies Pose with refinement statistics and can dump the pdb
 </xs:documentation></xs:annotation>
 <xs:attribute name="tag" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   tags Mover's output with this string
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   dump a copy of the PDB
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="report_grads" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   report gradients sum
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_TailSegmentMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  change conformation of 
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_TaskAwareCsts_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_type" type="xs:string" default="coordinate">
  <xs:annotation><xs:documentation xml:lang="en">
   What type of constraint you intend to apply
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="anchor_resnum" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   What residue number ought to serve as anchor (relevant for coordinate constraints -- please specify if so -- and less so otherwise.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_TaskAwareMinMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="chi" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow chi degrees of freedom to minimize
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow bb degrees of freedom to minimize
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Allow jump degrees of freedom to minimize
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_iter" type="positive_integer" default="200">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of iterations
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="type" type="minimizer_type" default="lbfgs_armijo_nonmonotone">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimizer type, chosen from a long list of algorithms
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tolerance" type="real" default="0.01">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimization tolerance (absolute)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cartesian" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use cartesian minimization (not internal coordinate)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondangle" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize bond angle degrees of freedom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bondlength" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimize bond length degrees of freedom
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_TaskAwareSymMinMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  (This is a devel Mover and not available in released versions.) A task-aware version of the SymMinMover that allows minimization of only certain sets of residues specified by user-defined task operations.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string" default="score12_symm">
  <xs:annotation><xs:documentation xml:lang="en">
   Score function to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chi" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Whether to allow side chain minimization.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="bb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Whether to allow backbone minimization.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rb" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Whether to allow rigid body minimization.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="symdofs" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The symmetric dofs that are allowed to move (if rb is enabled).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="type" type="xs:string" default="lbfgs_armijo_nonmonotone">
  <xs:annotation><xs:documentation xml:lang="en">
   Minimization type. For example, can also be 'dfpmin_armijo_nonmonotone'.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tolerance" type="real" default="1e-5">
  <xs:annotation><xs:documentation xml:lang="en">
   Tolerance of minimization?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="designable_only" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   If true, only minimize designable residues.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_TautomerizeAnomerMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This carbohydrate-specific Mover randomly selects a free reducing end (not a glycoside) and inverts the stereochemistry, swapping alpha anomers for beta and beta for alpha.  (This could be considered an extremely limited design case; however, reducing ends readily tautomerize in solution, in contrast to other cases, in which residues do not readily mutate into others!)  It is generally not certain which form is preferred (if any) in sugar-binding proteins, and crystal structures sometimes arbitrarily assign one anomer over another when fitting density, so this Mover can assure that each anomer is sampled.
 </xs:documentation></xs:annotation>
 <xs:attribute name="residue_selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name of a pre-defined ResidueSelector. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ThermalMinimizer_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Use a simulated tempering simulation to refine a pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ThermalSamplingMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_TopologyBrokerMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="realign" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Realign must be true, but its default is false. We are all children in the eyes of the Broker.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rigid_start" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Rigid segment startend; must be on the second chain.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rigid_end" type="positive_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Rigid segment end; must be on the second chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_TrajectoryReportToDB_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Reports to database every stride steps in a trajectory
 </xs:documentation></xs:annotation>
 <xs:group ref="features_reporter" minOccurs="0" maxOccurs="unbounded"/>
 <xs:attribute name="db_session_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name for the (previously declared) DatabaseSession object to retrieve from the DataMap; if this option is given, then it will take precedence over the other database-session-defining attributes that are also allowed for this element. DatabaseSession objects are declared in the DATABASE_SESSIONS top-level block in RosettaScripts.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="transaction_mode" type="database_transaction_mode_string" default="standard">
  <xs:annotation><xs:documentation xml:lang="en">
   Transaction mode for database output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_mode" type="database_mode_string">
  <xs:annotation><xs:documentation xml:lang="en">
   Which type of output database to use?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of output database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_pq_schema" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Schema name within the database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_separate_db_per_mpi_process" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a separate database for each MPI process? (sqlite3 only.) Incompatible with database_partition.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_partition" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Database partition to use. (sqlite3 only.) Incompatible with database_separate_db_per_mpi_process.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_read_only" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Is the database read-only? (sqlite3 only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_host" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   URI to the database server (postgres and mysql only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_user" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Username for database access( postgres and mysql only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_password" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Password for database access (postgres and mysql only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="database_port" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Port to use for access to database server (postgres only)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="batch_description" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Description of features database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="protocol_id" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Manually controls protocol_id associated with this ReportToDB tag. Autoincrements by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="batch_id" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Manually controls the batch_id associated with this ReportToDB tag. Autoincrements by default.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_transactions" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use transactions to group database i/o to be more efficient. Turning them off can help debugging.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cache_size" type="non_negative_integer" default="2000">
  <xs:annotation><xs:documentation xml:lang="en">
   Specify the maximum number 1k pages to keep in memory before writing to disk.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="remove_xray_virt" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Remove virtual residue attached during xray refine process
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relevant_residues_mode" type="report_to_db_relevant_residues_mode" default="explicit">
  <xs:annotation><xs:documentation xml:lang="en">
   Determine what features are reported given the relevant residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stride" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of iterations between reports to database
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:simpleType name="non_negative_real">
 <xs:restriction base="xs:decimal">
  <xs:minInclusive value="0"/>
 </xs:restriction>
</xs:simpleType>

<xs:complexType name="mover_Transform_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs a monte carlo search of the ligand binding site using precomputed scoring grids. Replaces the Translate, Rotate, and SlideTogether movers.
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The ligand chain, specified as the PDB chain ID
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sampled_space_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="move_distance" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum translation performed per step in the monte carlo search.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="box_size" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum translation that can occur from the ligand starting point.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum rotation angle performed per step in the monte carlo search.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Boltzmann temperature for the monte carlo simulation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="rmsd" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum RMSD to be sampled away from the starting position.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Total number of steps to be performed in the monte carlo simulation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeats" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Total number of repeats of the monte carlo simulation to be performed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimize_until_score_is_negative" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Continue sampling beyond "cycles" if score is positive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_constraints" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Adjust scores based on constraint file input
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_main_model" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the primary input protein model regardless of scores
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_fa_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Full atom constraint file to read constraints from
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ensemble_proteins" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File to read protein ensemble options from
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cst_fa_weight" type="non_negative_real" default="1.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Weight for full atom constraints. Default of 1.0
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initial_perturb" type="non_negative_real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Make an initial, unscored translation and rotation Translation will be selected uniformly in a sphere of the given radius (Angstrom).Triggers 360 degress rotations are triggered.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initial_angle_perturb" type="non_negative_real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Control the size of the rotational perturbation by intitial_perturb. (Degrees)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grid_set" type="xs:string" default="default">
  <xs:annotation><xs:documentation xml:lang="en">
   The Scoring Grid set to use with Transform scoring
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_TransformEnsemble_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs a monte carlo search of the ligand ensemble binding site using precomputed scoring grids. Replaces the Translate, Rotate, and SlideTogether movers.
 </xs:documentation></xs:annotation>
 <xs:attribute name="chains" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Ligand chains, specified as the PDB chain IDs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="sampled_space_file" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="move_distance" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum translation performed per step in the monte carlo search.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="box_size" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum translation that can occur from the ligand starting point.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angle" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Maximum rotation angle performed per step in the monte carlo search.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="temperature" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Boltzmann temperature for the monte carlo simulation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Total number of steps to be performed in the monte carlo simulation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repeats" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Total number of repeats of the monte carlo simulation to be performed.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimize_until_score_is_negative" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Continue sampling beyond "cycles" if score is positive
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_main_model" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the primary input protein model regardless of scores
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_conformers" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Use ligand conformations while sampling
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ensemble_proteins" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File to read protein ensemble options from
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="initial_perturb" type="non_negative_real" default="0.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Make an initial, unscored translation and rotation Translation will be selected uniformly in a sphere of the given radius (Angstrom).Automatically triggers 360 degrees randomized rotation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grid_set" type="xs:string" default="default">
  <xs:annotation><xs:documentation xml:lang="en">
   The Scoring Grid set to use with TransformEnsemble scoring
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_TransformIntoMembraneMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Transform a pose into the membrane.
 </xs:documentation></xs:annotation>
 <xs:attribute name="jump" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump to use for the transformation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_default_membrane" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the default membrane (if one is not specified by the user)? If both this attribute and user_defined_membrane are false, membrane position is taken from the pose.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="user_defined_membrane" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Use a membrane defined by the user?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="flip_if_needed" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   should the pose be flipped if it is in the wrong orientation?
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="center" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Position of center of membrane in format x,y,z
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="normal" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Membrane normal vector in format x,y,z
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Translate_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Performs a coarse random movement of a small molecule in xyz-space.
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Chain ID of chain to be translated.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="distribution" type="distribution_string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The random move can be chosen from a "uniform" or "gaussian" distribution.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="force" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="tag_along_chains" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO . Comma separated list of chain IDs to be moved together with "chain". 
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="angstroms" type="real" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Movement can be anywhere within a sphere of radius specified by "angstroms".
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="cycles" type="non_negative_integer" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of attempts to make such a movement without landing on top of another molecule.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="grid_set" type="xs:string" default="default">
  <xs:annotation><xs:documentation xml:lang="en">
   The ScoringGrid set to use for scoring the translation. If no scoring grids (at all) are present in the XML, use a default classic grid.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_TrialCounterObserver_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  observes acceptance rates of various moves at different temperatures
 </xs:documentation></xs:annotation>
 <xs:attribute name="file" type="xs:string" default="trial.stats">
  <xs:annotation><xs:documentation xml:lang="en">
   Output file for this observer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stride" type="non_negative_integer" default="10000">
  <xs:annotation><xs:documentation xml:lang="en">
   How many steps between outputs
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_TryDisulfPermutations_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Mover that tries different sets of possible disulfide bonds between existing residues capable of forming disulfides
 </xs:documentation></xs:annotation>
 <xs:attribute name="selector" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue selector specifying which residues to consider. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="consider_already_bonded" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Also sample permutations of disulfides that are already bonded
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_type" type="minimizer_type">
  <xs:annotation><xs:documentation xml:lang="en">
   Type of minimization to perform
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_tolerance" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   tolerance for the minimizer
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_TryRotamers_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="pdb_num" type="residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in PDB numbering (residue number + chain ID)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="res_num" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Residue number in Rosetta numbering (sequentially with the first residue in the pose being 1
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="automatic_connection" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Automatically set up a hotspot foldtree
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump_num" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Jump across which to evaluate energies, numbered sequentially from one
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="solo_res" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Add terminal types (upper and lower) to the hotspot residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="final_filter" type="xs:string" default="true_filter">
  <xs:annotation><xs:documentation xml:lang="en">
   Add terminal types (upper and lower) to the hotspot residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="clash_check" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Perform a clash check and filter out clashing rotamers (helps with speed!)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_current" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Include input conformation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="explosion" type="non_negative_integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Aggression with which to sample conformations, 0-4 (values more than four are equivalent thereto)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="shove" type="refpose_enabled_residue_number_cslist">
  <xs:annotation><xs:documentation xml:lang="en">
   List of residues for which to use the shove type, given in refpose, pose, or PDB numbering
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_Tumble_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Tumble (randomly rotate around the center of mass) a given subsection of the protein.
 </xs:documentation></xs:annotation>
 <xs:attribute name="chain_number" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   The chain to tumble - not compatible with start_res/stop_res.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="start_res" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   The first residue of the residue span to tumble - not compatible with chain_number.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stop_res" type="refpose_enabled_residue_number">
  <xs:annotation><xs:documentation xml:lang="en">
   The last residue of the residue span to tumble - not compatible with chain_number.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_UBQ_GTPaseMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  A mover for modeling docking via a LYX bond.
 </xs:documentation></xs:annotation>
 <xs:attribute name="binding_lysine" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A residue selector giving the lysine residue on the substrate to which UBQ will bind. The name of a previously declared residue selector or a logical expression of AND, NOT (!), OR, parentheses, and the names of previously declared residue selectors. Any capitalization of AND, NOT, and OR is accepted. An exclamation mark can be used instead of NOT. Boolean operators have their traditional priorities: NOT then AND then OR. For example, if selectors s1, s2, and s3 have been declared, you could write: 's1 or s2 and not s3' which would select a particular residue if that residue were selected by s1 or if it were selected by s2 but not by s3.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="UBQpdb" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File path to UBQ pdb file
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="extraBodies" type="xs:boolean">
  <xs:annotation><xs:documentation xml:lang="en">
   Whether there are extra bodies in the simulation.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="numTailRes" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   Number of tail residues on the ubiquitin.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="scorefilter" type="xs:decimal">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter for total score
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="SASAfilter" type="xs:decimal">
  <xs:annotation><xs:documentation xml:lang="en">
   Filter for SASA
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="lys_num" type="xs:integer">
  <xs:annotation><xs:documentation xml:lang="en">
   An integer giving the lysine residue to which UBQ will bind. Use this or binding_lysine.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_UniformRigidBodyCM_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="rotation_magnitude" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="translation_magnitude" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_jump" type="xs:integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mobile" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="stationary" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_UniformRigidBodyMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="rotation_magnitude" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="translation_magnitude" type="real" default="3.0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="target_jump" type="xs:integer" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_UpdateCrystInfo_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Convert back to an asymm pose with a valid CRYST1 line.
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_UpdateEnzdesHeader_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_UpdateSolvent_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  PHENIX crystallographic refinement interface code.  Calls PHENIX to update and optimize solvent mask.
 </xs:documentation></xs:annotation>
 <xs:attribute name="update_mask" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   call PHENIX to update solvent mask. Only valid if optimize_mask and optimize_params are both false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="update_fcalc" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   call PHENIX to update fcalc
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimize_mask" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   call PHENIX to optimize solvent mask; can be combined with optimize_params
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="optimize_params" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   call PHENIX to optimize solvent mask; can be combined with optimize_mask
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="VLB_subtag_Bridge_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TODO
 </xs:documentation></xs:annotation>
 <xs:attribute name="left" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Left residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="right" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Right residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aa" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="VLB_subtag_ConnectRight_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TODO
 </xs:documentation></xs:annotation>
 <xs:attribute name="left" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Left residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="right" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Right residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   PDB file name to be read in
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="VLB_subtag_GrowLeft_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TODO
 </xs:documentation></xs:annotation>
 <xs:attribute name="pos" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The single residue from which to build
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aa" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="VLB_subtag_GrowRight_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TODO
 </xs:documentation></xs:annotation>
 <xs:attribute name="pos" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The single residue from which to build
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aa" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="VLB_subtag_SegmentInsert_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TODO
 </xs:documentation></xs:annotation>
 <xs:attribute name="left" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Left residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="right" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Right residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="keep_bb_torsions" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   PDB file name to be read in
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="side" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="VLB_subtag_SegmentRebuild_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TODO
 </xs:documentation></xs:annotation>
 <xs:attribute name="left" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Left residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="right" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Right residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="ss" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="aa" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="VLB_subtag_SegmentSwap_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TODO
 </xs:documentation></xs:annotation>
 <xs:attribute name="left" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Left residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="right" type="refpose_enabled_residue_number" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   Right residue
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="pdb" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   PDB file name to be read in
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_VLB_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Bridge" type="VLB_subtag_Bridge_type"/>
  <xs:element name="ConnectRight" type="VLB_subtag_ConnectRight_type"/>
  <xs:element name="GrowLeft" type="VLB_subtag_GrowLeft_type"/>
  <xs:element name="GrowRight" type="VLB_subtag_GrowRight_type"/>
  <xs:element name="SegmentInsert" type="VLB_subtag_SegmentInsert_type"/>
  <xs:element name="SegmentRebuild" type="VLB_subtag_SegmentRebuild_type"/>
  <xs:element name="SegmentSwap" type="VLB_subtag_SegmentSwap_type"/>
 </xs:choice>
 <xs:attribute name="scorefxn" type="xs:string" default="score4L">
  <xs:annotation><xs:documentation xml:lang="en">
   Scorefunction to be used
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_VirtualRoot_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Reroot the pose foldtree on a (new) virtual residue. Useful for minimization in the context of absolute frames (coordinate constraints, electron density information, etc.) By default, the mover will add a virtual root residue to the pose if one does not already exist. If you wish to later remove the virtual root, add the root with a mover with removable set to true, and then later use a separate VirtualRoot mover with remove set to true to remove it.
 </xs:documentation></xs:annotation>
 <xs:attribute name="remove" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Removes the virtual root from the pose. Useful for subsequent use to a previous VirtualRoot call
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="removable" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   Set this to true of you want the virtual root to be removable. See remove option.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_VisualizeEmbeddingMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Adds virtual residues as a separate chain to be used for visualizing the embedding normal and center
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_VisualizeMembraneMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Used to visualize the protein in a membrane of a specified thickness
 </xs:documentation></xs:annotation>
 <xs:attribute name="spacing" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Spacing between membrane residues
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="width" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Width of the membrane to visualize
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="thickness" type="real">
  <xs:annotation><xs:documentation xml:lang="en">
   Thickness of the membrane to visualize
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_VoxelSpacingRefinement_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Set up morphing with electron density map.
 </xs:documentation></xs:annotation>
 <xs:attribute name="aniso" type="rosetta_bool">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=false
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="mapout" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   File name for map output
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="max_iter" type="non_negative_integer">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO, default=100
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_WriteFiltersToPose_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Takes results from any filters and writes them to the end of the pose file.
 </xs:documentation></xs:annotation>
 <xs:attribute name="prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Prefix to append to report output, so you can have multiple WriteFiltersToPose instances at different points in your RosettaScripts and not have them overwrite each other.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="include_type" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Include the filter type in your output (whether you want this depends on how you are parsing the pose files).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_WriteLigandMolFile_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Output a V2000 mol file record containing all atoms of the specified ligand chain and all data stored in the current Job for each processed pose
 </xs:documentation></xs:annotation>
 <xs:attribute name="hash_file_names" type="xs:string" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Seems to be unused.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The PDB chain ID of the ligand to be output.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="directory" type="xs:string" use="required">
  <xs:annotation><xs:documentation xml:lang="en">
   The directory all mol records will be output to. Directory will be created if it does not exist.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="prefix" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Set a file prefix for the output files.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="use_residue_name" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use the residue name as part of the prefix for the output files.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_WriteSSEMover_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Write PSIPRED and/or DSSP to silent file as REMARK or to the PDB with -pdb_comments option set to true.
 </xs:documentation></xs:annotation>
 <xs:attribute name="cmd" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Path to PSIPRED. If not provided, psipred is not executed
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dssp" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Set to true to get DSSP prediction (default false)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="write_phipsi" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   When true, write phi-psi angles
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_build_Ala_pose_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW TO DO
 </xs:documentation></xs:annotation>
 <xs:attribute name="partner1" type="rosetta_bool" default="0">
  <xs:annotation><xs:documentation xml:lang="en">
   Design/repack the first chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="partner2" type="rosetta_bool" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   Design/repack the second chain
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="interface_cutoff_distance" type="real" default="8.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance from the interface that counts for backrubbing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="AA" type="xs:string" default="ALA">
  <xs:annotation><xs:documentation xml:lang="en">
   Amino acid, by name, from which to build the pose
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_ddG_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  This mover is useful for reporting the total or per-residue ddgs in cases where you don't want to use the ddG filter for some reason. (also, the ddg filter can't currently do per-residue ddgs). Ddg scores are reported as string-real pairs in the output scorefile. The total ddg score has the tag "ddg" and the each per residue ddg has the tag "residue_ddg_n" where n is the residue number.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="jump" type="non_negative_integer" default="1">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="per_residue_ddg" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_unbound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="task_operations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma-separated list of TaskOperations to use.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="packer_palette" type="named_packer_palette">
  <xs:annotation><xs:documentation xml:lang="en">
   A previously-defined PackerPalette to use, which specifies the set of residue types with which to design (to be pruned with TaskOperations).
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="repack_bound" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_bound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we relax the bound state, if a relax mover is specified?  Default false.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_unbound" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Should we relax the unbound state, if a relax mover is specified?  Default true.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="translate_by" type="xs:decimal" default="1000.0">
  <xs:annotation><xs:documentation xml:lang="en">
   Distance in Angstroms by which to separate the components of the bound state
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="relax_mover" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filter" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_num" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="chain_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XSD XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="solvate" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Solvate bound pose (using ExplicitWater mover)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="solvate_unbound" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Solvate unbound pose (using ExplicitWater mover)
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="solvate_rbmin" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Use rigid-body minimization following solvation
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="min_water_jump" type="rosetta_bool" default="true">
  <xs:annotation><xs:documentation xml:lang="en">
   Include waters in rigid-body minimization following solvation and packing
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="compute_rmsd" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Compute the rmsd both with and without superimposing -- requires in:file:native to be supplied
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="dump_pdbs" type="rosetta_bool" default="false">
  <xs:annotation><xs:documentation xml:lang="en">
   Dump debugging PDB files. Dumps 6 pdbs per instance: BOUND_before_repack, BOUND_after_repack, BOUND_after_relax, UNBOUND_before_repack, UNBOUND_after_repack, and UNBOUND_after_relax.
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_load_unbound_rot_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Add the rotamers of the specified structure to the rotamer library (usually used to include rotamers of unbound monomer)
 </xs:documentation></xs:annotation>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="mover_profile_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  XRW_TODO
 </xs:documentation></xs:annotation>
 <xs:attribute name="file_name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW_TODO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="weight" type="real" default="0.25">
  <xs:annotation><xs:documentation xml:lang="en">
   XRW TO DO
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="name" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   The name given to this instance.
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rosetta_scripts_parser_RESOURCES_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  Declare all of the Resources that should be loaded into the DataMap from the ResourceManager for this job; JD3 only.
 </xs:documentation></xs:annotation>
 <xs:choice minOccurs="0" maxOccurs="unbounded">
  <xs:element name="Resource">
   <xs:complexType mixed="true">
    <xs:attribute name="name" type="xs:string" use="required">
     <xs:annotation><xs:documentation xml:lang="en">
      The name of the resource that will be used in this XML file; to be used, this resource must have been declared in a resource-definition file and read in by the ResourceManager
      </xs:documentation></xs:annotation>
    </xs:attribute>
   </xs:complexType>
  </xs:element>
 </xs:choice>
</xs:complexType>

<xs:complexType name="data_loader_MOVERS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The set of all of the Movers that are to be used in the script
 </xs:documentation></xs:annotation>
 <xs:group ref="mover" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="data_loader_FILTERS_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The set of all of the Filters that are to be used in the script
 </xs:documentation></xs:annotation>
 <xs:group ref="filter" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:complexType name="rosetta_scripts_parser_IMPORT_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The IMPORT statement is meant to be used in conjuction with the MultiplePoseMover. It allows users who have defined Movers, Filters, and TaskOperations at a higher level of the protocol to avoid having to redefine them in order to use them within the MultiplePoseMover. The classes that are imported will be re-parsed within the inner context. This parsing occurs before any of sub-elements of the ROSETTASCRIPTS block are loaded, reguardless of the order in which the IMPORT statement appears. Multiple IMPORT statements may be needed, e.g. if certain TaskOperations must be loaded before other Movers which require those TaskOperations are parsed.
 </xs:documentation></xs:annotation>
 <xs:attribute name="taskoperations" type="task_operation_comma_separated_list">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma separated list of TaskOperations that have been defined at a higher level than the MultiplePoseMover that this IMPORT statement is inside of
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="movers" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma separated list of Movers that have been defined at a higher level than the MultiplePoseMover that this IMPORT statement is inside of
   </xs:documentation></xs:annotation>
 </xs:attribute>
 <xs:attribute name="filters" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   A comma separated list of Filters that have been defined at a higher level than the MultiplePoseMover that this IMPORT statement is inside of
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rosetta_scripts_parser_OUTPUT_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The OUTPUT element controls the final score function that is used by RosettaScripts before outputting a Pose. If for example you have been using a score function with constraints in your protocol, but at the end, want to output the unconstrained scores, then you can set the score function in the OUTPUT element to some ScoreFunction that has constraint weights of zero and then RosettaScripts will rescore the Pose with that ScoreFunction right before writing the scores to disk.
 </xs:documentation></xs:annotation>
 <xs:attribute name="scorefxn" type="xs:string">
  <xs:annotation><xs:documentation xml:lang="en">
   Name of score function to use
   </xs:documentation></xs:annotation>
 </xs:attribute>
</xs:complexType>

<xs:complexType name="rosetta_scripts_parser_APPLY_TO_POSE_type" mixed="true">
 <xs:annotation><xs:documentation xml:lang="en">
  The APPLY_TO_POSE block is deprecated and should not be used. Any non-empty APPLY_TO_POSE block will now raise an error. Move any movers from the APPLY_TO_POSE section into the PROTOCOLS block. You may need to adjust some movers and filters to use reference poses and add a  SavePoseMover to the PROTOCOLS block, right after the moved movers.
 </xs:documentation></xs:annotation>
 <xs:group ref="mover" minOccurs="0" maxOccurs="unbounded"/>
</xs:complexType>

<xs:element name="ROSETTASCRIPTS" type="rosetta_scripts_parser_ROSETTASCRIPTS_type"/>

</xs:schema>

